{
  "__schema": {
    "types": [
      {
        "name": "AbortQueuedMigrationsInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AbortQueuedMigrations",
        "fields": null
      },
      {
        "name": "AbortQueuedMigrationsPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AbortQueuedMigrations.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "success",
            "type": {
              "name": "Boolean"
            },
            "description": "Did the operation succeed?"
          }
        ]
      },
      {
        "name": "AbortRepositoryMigrationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AbortRepositoryMigration",
        "fields": null
      },
      {
        "name": "AbortRepositoryMigrationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AbortRepositoryMigration.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "success",
            "type": {
              "name": "Boolean"
            },
            "description": "Did the operation succeed?"
          }
        ]
      },
      {
        "name": "AcceptEnterpriseAdministratorInvitationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AcceptEnterpriseAdministratorInvitation",
        "fields": null
      },
      {
        "name": "AcceptEnterpriseAdministratorInvitationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AcceptEnterpriseAdministratorInvitation.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "invitation",
            "type": {
              "name": "EnterpriseAdministratorInvitation"
            },
            "description": "The invitation that was accepted."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of accepting an administrator invitation."
          }
        ]
      },
      {
        "name": "AcceptEnterpriseMemberInvitationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AcceptEnterpriseMemberInvitation",
        "fields": null
      },
      {
        "name": "AcceptEnterpriseMemberInvitationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AcceptEnterpriseMemberInvitation.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "invitation",
            "type": {
              "name": "EnterpriseMemberInvitation"
            },
            "description": "The invitation that was accepted."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of accepting an unaffiliated member invitation."
          }
        ]
      },
      {
        "name": "AcceptTopicSuggestionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AcceptTopicSuggestion",
        "fields": null
      },
      {
        "name": "AcceptTopicSuggestionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AcceptTopicSuggestion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "AccessUserNamespaceRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AccessUserNamespaceRepository",
        "fields": null
      },
      {
        "name": "AccessUserNamespaceRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AccessUserNamespaceRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "expiresAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The time that repository access expires at"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository that is temporarily accessible."
          }
        ]
      },
      {
        "name": "Actor",
        "kind": "INTERFACE",
        "description": "Represents an object which can take actions on GitHub. Typically a User or Bot.",
        "fields": [
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the actor's public avatar."
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "The username of the actor."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this actor."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this actor."
          }
        ]
      },
      {
        "name": "ActorLocation",
        "kind": "OBJECT",
        "description": "Location information for an actor",
        "fields": [
          {
            "name": "city",
            "type": {
              "name": "String"
            },
            "description": "City"
          },
          {
            "name": "country",
            "type": {
              "name": "String"
            },
            "description": "Country name"
          },
          {
            "name": "countryCode",
            "type": {
              "name": "String"
            },
            "description": "Country code"
          },
          {
            "name": "region",
            "type": {
              "name": "String"
            },
            "description": "Region name"
          },
          {
            "name": "regionCode",
            "type": {
              "name": "String"
            },
            "description": "Region or state code"
          }
        ]
      },
      {
        "name": "ActorType",
        "kind": "ENUM",
        "description": "The actor's type.",
        "fields": null
      },
      {
        "name": "AddAssigneesToAssignableInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddAssigneesToAssignable",
        "fields": null
      },
      {
        "name": "AddAssigneesToAssignablePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddAssigneesToAssignable.",
        "fields": [
          {
            "name": "assignable",
            "type": {
              "name": "Assignable"
            },
            "description": "The item that was assigned."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "AddCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddComment",
        "fields": null
      },
      {
        "name": "AddCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "commentEdge",
            "type": {
              "name": "IssueCommentEdge"
            },
            "description": "The edge from the subject's comment connection."
          },
          {
            "name": "subject",
            "type": {
              "name": "Node"
            },
            "description": "The subject"
          },
          {
            "name": "timelineEdge",
            "type": {
              "name": "IssueTimelineItemEdge"
            },
            "description": "The edge from the subject's timeline connection."
          }
        ]
      },
      {
        "name": "AddDiscussionCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddDiscussionComment",
        "fields": null
      },
      {
        "name": "AddDiscussionCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddDiscussionComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "comment",
            "type": {
              "name": "DiscussionComment"
            },
            "description": "The newly created discussion comment."
          }
        ]
      },
      {
        "name": "AddDiscussionPollVoteInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddDiscussionPollVote",
        "fields": null
      },
      {
        "name": "AddDiscussionPollVotePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddDiscussionPollVote.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pollOption",
            "type": {
              "name": "DiscussionPollOption"
            },
            "description": "The poll option that a vote was added to."
          }
        ]
      },
      {
        "name": "AddEnterpriseOrganizationMemberInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddEnterpriseOrganizationMember",
        "fields": null
      },
      {
        "name": "AddEnterpriseOrganizationMemberPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddEnterpriseOrganizationMember.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "users",
            "type": {
              "name": null
            },
            "description": "The users who were added to the organization."
          }
        ]
      },
      {
        "name": "AddEnterpriseSupportEntitlementInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddEnterpriseSupportEntitlement",
        "fields": null
      },
      {
        "name": "AddEnterpriseSupportEntitlementPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddEnterpriseSupportEntitlement.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of adding the support entitlement."
          }
        ]
      },
      {
        "name": "AddLabelsToLabelableInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddLabelsToLabelable",
        "fields": null
      },
      {
        "name": "AddLabelsToLabelablePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddLabelsToLabelable.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "labelable",
            "type": {
              "name": "Labelable"
            },
            "description": "The item that was labeled."
          }
        ]
      },
      {
        "name": "AddProjectCardInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddProjectCard",
        "fields": null
      },
      {
        "name": "AddProjectCardPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddProjectCard.",
        "fields": [
          {
            "name": "cardEdge",
            "type": {
              "name": "ProjectCardEdge"
            },
            "description": "The edge from the ProjectColumn's card connection."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectColumn",
            "type": {
              "name": "ProjectColumn"
            },
            "description": "The ProjectColumn"
          }
        ]
      },
      {
        "name": "AddProjectColumnInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddProjectColumn",
        "fields": null
      },
      {
        "name": "AddProjectColumnPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddProjectColumn.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "columnEdge",
            "type": {
              "name": "ProjectColumnEdge"
            },
            "description": "The edge from the project's column connection."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "The project"
          }
        ]
      },
      {
        "name": "AddProjectV2DraftIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddProjectV2DraftIssue",
        "fields": null
      },
      {
        "name": "AddProjectV2DraftIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddProjectV2DraftIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectItem",
            "type": {
              "name": "ProjectV2Item"
            },
            "description": "The draft issue added to the project."
          }
        ]
      },
      {
        "name": "AddProjectV2ItemByIdInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddProjectV2ItemById",
        "fields": null
      },
      {
        "name": "AddProjectV2ItemByIdPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddProjectV2ItemById.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "item",
            "type": {
              "name": "ProjectV2Item"
            },
            "description": "The item added to the project."
          }
        ]
      },
      {
        "name": "AddPullRequestReviewCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddPullRequestReviewComment",
        "fields": null
      },
      {
        "name": "AddPullRequestReviewCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddPullRequestReviewComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "comment",
            "type": {
              "name": "PullRequestReviewComment"
            },
            "description": "The newly created comment."
          },
          {
            "name": "commentEdge",
            "type": {
              "name": "PullRequestReviewCommentEdge"
            },
            "description": "The edge from the review's comment connection."
          }
        ]
      },
      {
        "name": "AddPullRequestReviewInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddPullRequestReview",
        "fields": null
      },
      {
        "name": "AddPullRequestReviewPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddPullRequestReview.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequestReview",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The newly created pull request review."
          },
          {
            "name": "reviewEdge",
            "type": {
              "name": "PullRequestReviewEdge"
            },
            "description": "The edge from the pull request's review connection."
          }
        ]
      },
      {
        "name": "AddPullRequestReviewThreadInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddPullRequestReviewThread",
        "fields": null
      },
      {
        "name": "AddPullRequestReviewThreadPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddPullRequestReviewThread.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "thread",
            "type": {
              "name": "PullRequestReviewThread"
            },
            "description": "The newly created thread."
          }
        ]
      },
      {
        "name": "AddPullRequestReviewThreadReplyInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddPullRequestReviewThreadReply",
        "fields": null
      },
      {
        "name": "AddPullRequestReviewThreadReplyPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddPullRequestReviewThreadReply.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "comment",
            "type": {
              "name": "PullRequestReviewComment"
            },
            "description": "The newly created reply."
          }
        ]
      },
      {
        "name": "AddReactionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddReaction",
        "fields": null
      },
      {
        "name": "AddReactionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddReaction.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "reaction",
            "type": {
              "name": "Reaction"
            },
            "description": "The reaction object."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "The reaction groups for the subject."
          },
          {
            "name": "subject",
            "type": {
              "name": "Reactable"
            },
            "description": "The reactable subject."
          }
        ]
      },
      {
        "name": "AddStarInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddStar",
        "fields": null
      },
      {
        "name": "AddStarPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddStar.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "starrable",
            "type": {
              "name": "Starrable"
            },
            "description": "The starrable."
          }
        ]
      },
      {
        "name": "AddSubIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddSubIssue",
        "fields": null
      },
      {
        "name": "AddSubIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddSubIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The parent issue that the sub-issue was added to."
          },
          {
            "name": "subIssue",
            "type": {
              "name": "Issue"
            },
            "description": "The sub-issue of the parent."
          }
        ]
      },
      {
        "name": "AddUpvoteInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddUpvote",
        "fields": null
      },
      {
        "name": "AddUpvotePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddUpvote.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "subject",
            "type": {
              "name": "Votable"
            },
            "description": "The votable subject."
          }
        ]
      },
      {
        "name": "AddVerifiableDomainInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of AddVerifiableDomain",
        "fields": null
      },
      {
        "name": "AddVerifiableDomainPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of AddVerifiableDomain.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "domain",
            "type": {
              "name": "VerifiableDomain"
            },
            "description": "The verifiable domain that was added."
          }
        ]
      },
      {
        "name": "AddedToMergeQueueEvent",
        "kind": "OBJECT",
        "description": "Represents an 'added_to_merge_queue' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enqueuer",
            "type": {
              "name": "User"
            },
            "description": "The user who added this Pull Request to the merge queue"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AddedToMergeQueueEvent object"
          },
          {
            "name": "mergeQueue",
            "type": {
              "name": "MergeQueue"
            },
            "description": "The merge queue where this pull request was added to."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "AddedToProjectEvent",
        "kind": "OBJECT",
        "description": "Represents a 'added_to_project' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AddedToProjectEvent object"
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "Project referenced by event."
          },
          {
            "name": "projectCard",
            "type": {
              "name": "ProjectCard"
            },
            "description": "Project card referenced by this project event."
          },
          {
            "name": "projectColumnName",
            "type": {
              "name": null
            },
            "description": "Column name referenced by this project event."
          }
        ]
      },
      {
        "name": "AnnouncementBanner",
        "kind": "OBJECT",
        "description": "An announcement banner for an enterprise or organization.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The date the announcement was created"
          },
          {
            "name": "expiresAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The expiration date of the announcement, if any"
          },
          {
            "name": "isUserDismissible",
            "type": {
              "name": null
            },
            "description": "Whether the announcement can be dismissed by the user"
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "The text of the announcement"
          }
        ]
      },
      {
        "name": "AnnouncementBannerI",
        "kind": "INTERFACE",
        "description": "Represents an announcement banner.",
        "fields": []
      },
      {
        "name": "App",
        "kind": "OBJECT",
        "description": "A GitHub App.",
        "fields": [
          {
            "name": "clientId",
            "type": {
              "name": "String"
            },
            "description": "The client ID of the app."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The description of the app."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the App object"
          },
          {
            "name": "ipAllowListEntries",
            "type": {
              "name": null
            },
            "description": "The IP addresses of the app."
          },
          {
            "name": "logoBackgroundColor",
            "type": {
              "name": null
            },
            "description": "The hex color code, without the leading '#', for the logo background."
          },
          {
            "name": "logoUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the app's logo."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the app."
          },
          {
            "name": "slug",
            "type": {
              "name": null
            },
            "description": "A slug based on the name of the app for use in URLs."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The URL to the app's homepage."
          }
        ]
      },
      {
        "name": "ApproveDeploymentsInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ApproveDeployments",
        "fields": null
      },
      {
        "name": "ApproveDeploymentsPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ApproveDeployments.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "deployments",
            "type": {
              "name": null
            },
            "description": "The affected deployments."
          }
        ]
      },
      {
        "name": "ApproveVerifiableDomainInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ApproveVerifiableDomain",
        "fields": null
      },
      {
        "name": "ApproveVerifiableDomainPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ApproveVerifiableDomain.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "domain",
            "type": {
              "name": "VerifiableDomain"
            },
            "description": "The verifiable domain that was approved."
          }
        ]
      },
      {
        "name": "ArchiveProjectV2ItemInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ArchiveProjectV2Item",
        "fields": null
      },
      {
        "name": "ArchiveProjectV2ItemPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ArchiveProjectV2Item.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "item",
            "type": {
              "name": "ProjectV2Item"
            },
            "description": "The item archived from the project."
          }
        ]
      },
      {
        "name": "ArchiveRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ArchiveRepository",
        "fields": null
      },
      {
        "name": "ArchiveRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ArchiveRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository that was marked as archived."
          }
        ]
      },
      {
        "name": "Assignable",
        "kind": "INTERFACE",
        "description": "An object that can have users assigned to it.",
        "fields": [
          {
            "name": "assignees",
            "type": {
              "name": null
            },
            "description": "A list of Users assigned to this object."
          }
        ]
      },
      {
        "name": "AssignedEvent",
        "kind": "OBJECT",
        "description": "Represents an 'assigned' event on any assignable object.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "assignable",
            "type": {
              "name": null
            },
            "description": "Identifies the assignable associated with the event."
          },
          {
            "name": "assignee",
            "type": {
              "name": "Assignee"
            },
            "description": "Identifies the user or mannequin that was assigned."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AssignedEvent object"
          }
        ]
      },
      {
        "name": "Assignee",
        "kind": "UNION",
        "description": "Types that can be assigned to issues.",
        "fields": null
      },
      {
        "name": "AuditEntry",
        "kind": "INTERFACE",
        "description": "An entry in the audit log.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "AuditEntryActor",
        "kind": "UNION",
        "description": "Types that can initiate an audit log event.",
        "fields": null
      },
      {
        "name": "AuditLogOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for Audit Log connections.",
        "fields": null
      },
      {
        "name": "AuditLogOrderField",
        "kind": "ENUM",
        "description": "Properties by which Audit Log connections can be ordered.",
        "fields": null
      },
      {
        "name": "AutoMergeDisabledEvent",
        "kind": "OBJECT",
        "description": "Represents a 'auto_merge_disabled' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "disabler",
            "type": {
              "name": "User"
            },
            "description": "The user who disabled auto-merge for this Pull Request"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AutoMergeDisabledEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "PullRequest referenced by event"
          },
          {
            "name": "reason",
            "type": {
              "name": "String"
            },
            "description": "The reason auto-merge was disabled"
          },
          {
            "name": "reasonCode",
            "type": {
              "name": "String"
            },
            "description": "The reason_code relating to why auto-merge was disabled"
          }
        ]
      },
      {
        "name": "AutoMergeEnabledEvent",
        "kind": "OBJECT",
        "description": "Represents a 'auto_merge_enabled' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enabler",
            "type": {
              "name": "User"
            },
            "description": "The user who enabled auto-merge for this Pull Request"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AutoMergeEnabledEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "AutoMergeRequest",
        "kind": "OBJECT",
        "description": "Represents an auto-merge request for a pull request",
        "fields": [
          {
            "name": "authorEmail",
            "type": {
              "name": "String"
            },
            "description": "The email address of the author of this auto-merge request."
          },
          {
            "name": "commitBody",
            "type": {
              "name": "String"
            },
            "description": "The commit message of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging."
          },
          {
            "name": "commitHeadline",
            "type": {
              "name": "String"
            },
            "description": "The commit title of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging"
          },
          {
            "name": "enabledAt",
            "type": {
              "name": "DateTime"
            },
            "description": "When was this auto-merge request was enabled."
          },
          {
            "name": "enabledBy",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the auto-merge request."
          },
          {
            "name": "mergeMethod",
            "type": {
              "name": null
            },
            "description": "The merge method of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "The pull request that this auto-merge request is set against."
          }
        ]
      },
      {
        "name": "AutoRebaseEnabledEvent",
        "kind": "OBJECT",
        "description": "Represents a 'auto_rebase_enabled' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enabler",
            "type": {
              "name": "User"
            },
            "description": "The user who enabled auto-merge (rebase) for this Pull Request"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AutoRebaseEnabledEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "AutoSquashEnabledEvent",
        "kind": "OBJECT",
        "description": "Represents a 'auto_squash_enabled' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enabler",
            "type": {
              "name": "User"
            },
            "description": "The user who enabled auto-merge (squash) for this Pull Request"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AutoSquashEnabledEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "AutomaticBaseChangeFailedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'automatic_base_change_failed' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AutomaticBaseChangeFailedEvent object"
          },
          {
            "name": "newBase",
            "type": {
              "name": null
            },
            "description": "The new base for this PR"
          },
          {
            "name": "oldBase",
            "type": {
              "name": null
            },
            "description": "The old base for this PR"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "AutomaticBaseChangeSucceededEvent",
        "kind": "OBJECT",
        "description": "Represents a 'automatic_base_change_succeeded' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the AutomaticBaseChangeSucceededEvent object"
          },
          {
            "name": "newBase",
            "type": {
              "name": null
            },
            "description": "The new base for this PR"
          },
          {
            "name": "oldBase",
            "type": {
              "name": null
            },
            "description": "The old base for this PR"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "Base64String",
        "kind": "SCALAR",
        "description": "A (potentially binary) string encoded using base64.",
        "fields": null
      },
      {
        "name": "BaseRefChangedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'base_ref_changed' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "currentRefName",
            "type": {
              "name": null
            },
            "description": "Identifies the name of the base ref for the pull request after it was changed."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the BaseRefChangedEvent object"
          },
          {
            "name": "previousRefName",
            "type": {
              "name": null
            },
            "description": "Identifies the name of the base ref for the pull request before it was changed."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "BaseRefDeletedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'base_ref_deleted' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "baseRefName",
            "type": {
              "name": "String"
            },
            "description": "Identifies the name of the Ref associated with the `base_ref_deleted` event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the BaseRefDeletedEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "BaseRefForcePushedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'base_ref_force_pushed' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "afterCommit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the after commit SHA for the 'base_ref_force_pushed' event."
          },
          {
            "name": "beforeCommit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the before commit SHA for the 'base_ref_force_pushed' event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the BaseRefForcePushedEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "Identifies the fully qualified ref name for the 'base_ref_force_pushed' event."
          }
        ]
      },
      {
        "name": "BigInt",
        "kind": "SCALAR",
        "description": "Represents non-fractional signed whole numeric values. Since the value may exceed the size of a 32-bit integer, it's encoded as a string.",
        "fields": null
      },
      {
        "name": "Blame",
        "kind": "OBJECT",
        "description": "Represents a Git blame.",
        "fields": [
          {
            "name": "ranges",
            "type": {
              "name": null
            },
            "description": "The list of ranges from a Git blame."
          }
        ]
      },
      {
        "name": "BlameRange",
        "kind": "OBJECT",
        "description": "Represents a range of information from a Git blame.",
        "fields": [
          {
            "name": "age",
            "type": {
              "name": null
            },
            "description": "Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change."
          },
          {
            "name": "commit",
            "type": {
              "name": null
            },
            "description": "Identifies the line author"
          },
          {
            "name": "endingLine",
            "type": {
              "name": null
            },
            "description": "The ending line for the range"
          },
          {
            "name": "startingLine",
            "type": {
              "name": null
            },
            "description": "The starting line for the range"
          }
        ]
      },
      {
        "name": "Blob",
        "kind": "OBJECT",
        "description": "Represents a Git blob.",
        "fields": [
          {
            "name": "abbreviatedOid",
            "type": {
              "name": null
            },
            "description": "An abbreviated version of the Git object ID"
          },
          {
            "name": "byteSize",
            "type": {
              "name": null
            },
            "description": "Byte size of Blob object"
          },
          {
            "name": "commitResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this Git object"
          },
          {
            "name": "commitUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this Git object"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Blob object"
          },
          {
            "name": "isBinary",
            "type": {
              "name": "Boolean"
            },
            "description": "Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding."
          },
          {
            "name": "isTruncated",
            "type": {
              "name": null
            },
            "description": "Indicates whether the contents is truncated"
          },
          {
            "name": "oid",
            "type": {
              "name": null
            },
            "description": "The Git object ID"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The Repository the Git object belongs to"
          },
          {
            "name": "text",
            "type": {
              "name": "String"
            },
            "description": "UTF8 text data or null if the Blob is binary"
          }
        ]
      },
      {
        "name": "Boolean",
        "kind": "SCALAR",
        "description": "Represents `true` or `false` values.",
        "fields": null
      },
      {
        "name": "Bot",
        "kind": "OBJECT",
        "description": "A special type of user which takes actions on behalf of GitHub Apps.",
        "fields": [
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the GitHub App's public avatar."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Bot object"
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "The username of the actor."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this bot"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this bot"
          }
        ]
      },
      {
        "name": "BranchActorAllowanceActor",
        "kind": "UNION",
        "description": "Types which can be actors for `BranchActorAllowance` objects.",
        "fields": null
      },
      {
        "name": "BranchNamePatternParameters",
        "kind": "OBJECT",
        "description": "Parameters to be used for the branch_name_pattern rule",
        "fields": [
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "How this rule will appear to users."
          },
          {
            "name": "negate",
            "type": {
              "name": null
            },
            "description": "If true, the rule will fail if the pattern matches."
          },
          {
            "name": "operator",
            "type": {
              "name": null
            },
            "description": "The operator to use for matching."
          },
          {
            "name": "pattern",
            "type": {
              "name": null
            },
            "description": "The pattern to match with."
          }
        ]
      },
      {
        "name": "BranchNamePatternParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the branch_name_pattern rule",
        "fields": null
      },
      {
        "name": "BranchProtectionRule",
        "kind": "OBJECT",
        "description": "A branch protection rule.",
        "fields": [
          {
            "name": "allowsDeletions",
            "type": {
              "name": null
            },
            "description": "Can this branch be deleted."
          },
          {
            "name": "allowsForcePushes",
            "type": {
              "name": null
            },
            "description": "Are force pushes allowed on this branch."
          },
          {
            "name": "blocksCreations",
            "type": {
              "name": null
            },
            "description": "Is branch creation a protected operation."
          },
          {
            "name": "branchProtectionRuleConflicts",
            "type": {
              "name": null
            },
            "description": "A list of conflicts matching branches protection rule and other branch protection rules"
          },
          {
            "name": "bypassForcePushAllowances",
            "type": {
              "name": null
            },
            "description": "A list of actors able to force push for this branch protection rule."
          },
          {
            "name": "bypassPullRequestAllowances",
            "type": {
              "name": null
            },
            "description": "A list of actors able to bypass PRs for this branch protection rule."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created this branch protection rule."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "dismissesStaleReviews",
            "type": {
              "name": null
            },
            "description": "Will new commits pushed to matching branches dismiss pull request review approvals."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the BranchProtectionRule object"
          },
          {
            "name": "isAdminEnforced",
            "type": {
              "name": null
            },
            "description": "Can admins override branch protection."
          },
          {
            "name": "lockAllowsFetchAndMerge",
            "type": {
              "name": null
            },
            "description": "Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing."
          },
          {
            "name": "lockBranch",
            "type": {
              "name": null
            },
            "description": "Whether to set the branch as read-only. If this is true, users will not be able to push to the branch."
          },
          {
            "name": "matchingRefs",
            "type": {
              "name": null
            },
            "description": "Repository refs that are protected by this rule"
          },
          {
            "name": "pattern",
            "type": {
              "name": null
            },
            "description": "Identifies the protection rule pattern."
          },
          {
            "name": "pushAllowances",
            "type": {
              "name": null
            },
            "description": "A list push allowances for this branch protection rule."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with this branch protection rule."
          },
          {
            "name": "requireLastPushApproval",
            "type": {
              "name": null
            },
            "description": "Whether the most recent push must be approved by someone other than the person who pushed it"
          },
          {
            "name": "requiredApprovingReviewCount",
            "type": {
              "name": "Int"
            },
            "description": "Number of approving reviews required to update matching branches."
          },
          {
            "name": "requiredDeploymentEnvironments",
            "type": {
              "name": null
            },
            "description": "List of required deployment environments that must be deployed successfully to update matching branches"
          },
          {
            "name": "requiredStatusCheckContexts",
            "type": {
              "name": null
            },
            "description": "List of required status check contexts that must pass for commits to be accepted to matching branches."
          },
          {
            "name": "requiredStatusChecks",
            "type": {
              "name": null
            },
            "description": "List of required status checks that must pass for commits to be accepted to matching branches."
          },
          {
            "name": "requiresApprovingReviews",
            "type": {
              "name": null
            },
            "description": "Are approving reviews required to update matching branches."
          },
          {
            "name": "requiresCodeOwnerReviews",
            "type": {
              "name": null
            },
            "description": "Are reviews from code owners required to update matching branches."
          },
          {
            "name": "requiresCommitSignatures",
            "type": {
              "name": null
            },
            "description": "Are commits required to be signed."
          },
          {
            "name": "requiresConversationResolution",
            "type": {
              "name": null
            },
            "description": "Are conversations required to be resolved before merging."
          },
          {
            "name": "requiresDeployments",
            "type": {
              "name": null
            },
            "description": "Does this branch require deployment to specific environments before merging"
          },
          {
            "name": "requiresLinearHistory",
            "type": {
              "name": null
            },
            "description": "Are merge commits prohibited from being pushed to this branch."
          },
          {
            "name": "requiresStatusChecks",
            "type": {
              "name": null
            },
            "description": "Are status checks required to update matching branches."
          },
          {
            "name": "requiresStrictStatusChecks",
            "type": {
              "name": null
            },
            "description": "Are branches required to be up to date before merging."
          },
          {
            "name": "restrictsPushes",
            "type": {
              "name": null
            },
            "description": "Is pushing to matching branches restricted."
          },
          {
            "name": "restrictsReviewDismissals",
            "type": {
              "name": null
            },
            "description": "Is dismissal of pull request reviews restricted."
          },
          {
            "name": "reviewDismissalAllowances",
            "type": {
              "name": null
            },
            "description": "A list review dismissal allowances for this branch protection rule."
          }
        ]
      },
      {
        "name": "BranchProtectionRuleConflict",
        "kind": "OBJECT",
        "description": "A conflict between two branch protection rules.",
        "fields": [
          {
            "name": "branchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "Identifies the branch protection rule."
          },
          {
            "name": "conflictingBranchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "Identifies the conflicting branch protection rule."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "Identifies the branch ref that has conflicting rules"
          }
        ]
      },
      {
        "name": "BranchProtectionRuleConflictConnection",
        "kind": "OBJECT",
        "description": "The connection type for BranchProtectionRuleConflict.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "BranchProtectionRuleConflictEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "BranchProtectionRuleConflict"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "BranchProtectionRuleConnection",
        "kind": "OBJECT",
        "description": "The connection type for BranchProtectionRule.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "BranchProtectionRuleEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "BulkSponsorship",
        "kind": "INPUT_OBJECT",
        "description": "Information about a sponsorship to make for a user or organization with a GitHub Sponsors profile, as part of sponsoring many users or organizations at once.",
        "fields": null
      },
      {
        "name": "BypassActor",
        "kind": "UNION",
        "description": "Types that can represent a repository ruleset bypass actor.",
        "fields": null
      },
      {
        "name": "BypassForcePushAllowance",
        "kind": "OBJECT",
        "description": "A user, team, or app who has the ability to bypass a force push requirement on a protected branch.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "BranchActorAllowanceActor"
            },
            "description": "The actor that can force push."
          },
          {
            "name": "branchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "Identifies the branch protection rule associated with the allowed user, team, or app."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the BypassForcePushAllowance object"
          }
        ]
      },
      {
        "name": "BypassForcePushAllowanceConnection",
        "kind": "OBJECT",
        "description": "The connection type for BypassForcePushAllowance.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "BypassForcePushAllowanceEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "BypassForcePushAllowance"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "BypassPullRequestAllowance",
        "kind": "OBJECT",
        "description": "A user, team, or app who has the ability to bypass a pull request requirement on a protected branch.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "BranchActorAllowanceActor"
            },
            "description": "The actor that can bypass."
          },
          {
            "name": "branchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "Identifies the branch protection rule associated with the allowed user, team, or app."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the BypassPullRequestAllowance object"
          }
        ]
      },
      {
        "name": "BypassPullRequestAllowanceConnection",
        "kind": "OBJECT",
        "description": "The connection type for BypassPullRequestAllowance.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "BypassPullRequestAllowanceEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "BypassPullRequestAllowance"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CVSS",
        "kind": "OBJECT",
        "description": "The Common Vulnerability Scoring System",
        "fields": [
          {
            "name": "score",
            "type": {
              "name": null
            },
            "description": "The CVSS score associated with this advisory"
          },
          {
            "name": "vectorString",
            "type": {
              "name": "String"
            },
            "description": "The CVSS vector string associated with this advisory"
          }
        ]
      },
      {
        "name": "CWE",
        "kind": "OBJECT",
        "description": "A common weakness enumeration",
        "fields": [
          {
            "name": "cweId",
            "type": {
              "name": null
            },
            "description": "The id of the CWE"
          },
          {
            "name": "description",
            "type": {
              "name": null
            },
            "description": "A detailed description of this CWE"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the CWE object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of this CWE"
          }
        ]
      },
      {
        "name": "CWEConnection",
        "kind": "OBJECT",
        "description": "The connection type for CWE.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CWEEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CWE"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CancelEnterpriseAdminInvitationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CancelEnterpriseAdminInvitation",
        "fields": null
      },
      {
        "name": "CancelEnterpriseAdminInvitationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CancelEnterpriseAdminInvitation.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "invitation",
            "type": {
              "name": "EnterpriseAdministratorInvitation"
            },
            "description": "The invitation that was canceled."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of canceling an administrator invitation."
          }
        ]
      },
      {
        "name": "CancelEnterpriseMemberInvitationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CancelEnterpriseMemberInvitation",
        "fields": null
      },
      {
        "name": "CancelEnterpriseMemberInvitationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CancelEnterpriseMemberInvitation.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "invitation",
            "type": {
              "name": "EnterpriseMemberInvitation"
            },
            "description": "The invitation that was canceled."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of canceling an member invitation."
          }
        ]
      },
      {
        "name": "CancelSponsorshipInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CancelSponsorship",
        "fields": null
      },
      {
        "name": "CancelSponsorshipPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CancelSponsorship.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorsTier",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "The tier that was being used at the time of cancellation."
          }
        ]
      },
      {
        "name": "ChangeUserStatusInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ChangeUserStatus",
        "fields": null
      },
      {
        "name": "ChangeUserStatusPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ChangeUserStatus.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "status",
            "type": {
              "name": "UserStatus"
            },
            "description": "Your updated status."
          }
        ]
      },
      {
        "name": "CheckAnnotation",
        "kind": "OBJECT",
        "description": "A single check annotation.",
        "fields": [
          {
            "name": "annotationLevel",
            "type": {
              "name": "CheckAnnotationLevel"
            },
            "description": "The annotation's severity level."
          },
          {
            "name": "blobUrl",
            "type": {
              "name": null
            },
            "description": "The path to the file that this annotation was made on."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "location",
            "type": {
              "name": null
            },
            "description": "The position of this annotation."
          },
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "The annotation's message."
          },
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "The path that this annotation was made on."
          },
          {
            "name": "rawDetails",
            "type": {
              "name": "String"
            },
            "description": "Additional information about the annotation."
          },
          {
            "name": "title",
            "type": {
              "name": "String"
            },
            "description": "The annotation's title"
          }
        ]
      },
      {
        "name": "CheckAnnotationConnection",
        "kind": "OBJECT",
        "description": "The connection type for CheckAnnotation.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CheckAnnotationData",
        "kind": "INPUT_OBJECT",
        "description": "Information from a check run analysis to specific lines of code.",
        "fields": null
      },
      {
        "name": "CheckAnnotationEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CheckAnnotation"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CheckAnnotationLevel",
        "kind": "ENUM",
        "description": "Represents an annotation's information level.",
        "fields": null
      },
      {
        "name": "CheckAnnotationPosition",
        "kind": "OBJECT",
        "description": "A character position in a check annotation.",
        "fields": [
          {
            "name": "column",
            "type": {
              "name": "Int"
            },
            "description": "Column number (1 indexed)."
          },
          {
            "name": "line",
            "type": {
              "name": null
            },
            "description": "Line number (1 indexed)."
          }
        ]
      },
      {
        "name": "CheckAnnotationRange",
        "kind": "INPUT_OBJECT",
        "description": "Information from a check run analysis to specific lines of code.",
        "fields": null
      },
      {
        "name": "CheckAnnotationSpan",
        "kind": "OBJECT",
        "description": "An inclusive pair of positions for a check annotation.",
        "fields": [
          {
            "name": "end",
            "type": {
              "name": null
            },
            "description": "End position (inclusive)."
          },
          {
            "name": "start",
            "type": {
              "name": null
            },
            "description": "Start position (inclusive)."
          }
        ]
      },
      {
        "name": "CheckConclusionState",
        "kind": "ENUM",
        "description": "The possible states for a check suite or run conclusion.",
        "fields": null
      },
      {
        "name": "CheckRun",
        "kind": "OBJECT",
        "description": "A check run.",
        "fields": [
          {
            "name": "annotations",
            "type": {
              "name": "CheckAnnotationConnection"
            },
            "description": "The check run's annotations"
          },
          {
            "name": "checkSuite",
            "type": {
              "name": null
            },
            "description": "The check suite that this run is a part of."
          },
          {
            "name": "completedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the check run was completed."
          },
          {
            "name": "conclusion",
            "type": {
              "name": "CheckConclusionState"
            },
            "description": "The conclusion of the check run."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "deployment",
            "type": {
              "name": "Deployment"
            },
            "description": "The corresponding deployment for this job, if any"
          },
          {
            "name": "detailsUrl",
            "type": {
              "name": "URI"
            },
            "description": "The URL from which to find full details of the check run on the integrator's site."
          },
          {
            "name": "externalId",
            "type": {
              "name": "String"
            },
            "description": "A reference for the check run on the integrator's system."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the CheckRun object"
          },
          {
            "name": "isRequired",
            "type": {
              "name": null
            },
            "description": "Whether this is required to pass before merging for a specific pull request."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the check for this check run."
          },
          {
            "name": "pendingDeploymentRequest",
            "type": {
              "name": "DeploymentRequest"
            },
            "description": "Information about a pending deployment, if any, in this check run"
          },
          {
            "name": "permalink",
            "type": {
              "name": null
            },
            "description": "The permalink to the check run summary."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this check run."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this check run."
          },
          {
            "name": "startedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the check run was started."
          },
          {
            "name": "status",
            "type": {
              "name": null
            },
            "description": "The current status of the check run."
          },
          {
            "name": "steps",
            "type": {
              "name": "CheckStepConnection"
            },
            "description": "The check run's steps"
          },
          {
            "name": "summary",
            "type": {
              "name": "String"
            },
            "description": "A string representing the check run's summary"
          },
          {
            "name": "text",
            "type": {
              "name": "String"
            },
            "description": "A string representing the check run's text"
          },
          {
            "name": "title",
            "type": {
              "name": "String"
            },
            "description": "A string representing the check run"
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this check run."
          }
        ]
      },
      {
        "name": "CheckRunAction",
        "kind": "INPUT_OBJECT",
        "description": "Possible further actions the integrator can perform.",
        "fields": null
      },
      {
        "name": "CheckRunConnection",
        "kind": "OBJECT",
        "description": "The connection type for CheckRun.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CheckRunEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CheckRun"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CheckRunFilter",
        "kind": "INPUT_OBJECT",
        "description": "The filters that are available when fetching check runs.",
        "fields": null
      },
      {
        "name": "CheckRunOutput",
        "kind": "INPUT_OBJECT",
        "description": "Descriptive details about the check run.",
        "fields": null
      },
      {
        "name": "CheckRunOutputImage",
        "kind": "INPUT_OBJECT",
        "description": "Images attached to the check run output displayed in the GitHub pull request UI.",
        "fields": null
      },
      {
        "name": "CheckRunState",
        "kind": "ENUM",
        "description": "The possible states of a check run in a status rollup.",
        "fields": null
      },
      {
        "name": "CheckRunStateCount",
        "kind": "OBJECT",
        "description": "Represents a count of the state of a check run.",
        "fields": [
          {
            "name": "count",
            "type": {
              "name": null
            },
            "description": "The number of check runs with this state."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of a check run."
          }
        ]
      },
      {
        "name": "CheckRunType",
        "kind": "ENUM",
        "description": "The possible types of check runs.",
        "fields": null
      },
      {
        "name": "CheckStatusState",
        "kind": "ENUM",
        "description": "The possible states for a check suite or run status.",
        "fields": null
      },
      {
        "name": "CheckStep",
        "kind": "OBJECT",
        "description": "A single check step.",
        "fields": [
          {
            "name": "completedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the check step was completed."
          },
          {
            "name": "conclusion",
            "type": {
              "name": "CheckConclusionState"
            },
            "description": "The conclusion of the check step."
          },
          {
            "name": "externalId",
            "type": {
              "name": "String"
            },
            "description": "A reference for the check step on the integrator's system."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The step's name."
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "The index of the step in the list of steps of the parent check run."
          },
          {
            "name": "secondsToCompletion",
            "type": {
              "name": "Int"
            },
            "description": "Number of seconds to completion."
          },
          {
            "name": "startedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the check step was started."
          },
          {
            "name": "status",
            "type": {
              "name": null
            },
            "description": "The current status of the check step."
          }
        ]
      },
      {
        "name": "CheckStepConnection",
        "kind": "OBJECT",
        "description": "The connection type for CheckStep.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CheckStepEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CheckStep"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CheckSuite",
        "kind": "OBJECT",
        "description": "A check suite.",
        "fields": [
          {
            "name": "app",
            "type": {
              "name": "App"
            },
            "description": "The GitHub App which created this check suite."
          },
          {
            "name": "branch",
            "type": {
              "name": "Ref"
            },
            "description": "The name of the branch for this check suite."
          },
          {
            "name": "checkRuns",
            "type": {
              "name": "CheckRunConnection"
            },
            "description": "The check runs associated with a check suite."
          },
          {
            "name": "commit",
            "type": {
              "name": null
            },
            "description": "The commit for this check suite"
          },
          {
            "name": "conclusion",
            "type": {
              "name": "CheckConclusionState"
            },
            "description": "The conclusion of this check suite."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "User"
            },
            "description": "The user who triggered the check suite."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the CheckSuite object"
          },
          {
            "name": "matchingPullRequests",
            "type": {
              "name": "PullRequestConnection"
            },
            "description": "A list of open pull requests matching the check suite."
          },
          {
            "name": "push",
            "type": {
              "name": "Push"
            },
            "description": "The push that triggered this check suite."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this check suite."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this check suite"
          },
          {
            "name": "status",
            "type": {
              "name": null
            },
            "description": "The status of this check suite."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this check suite"
          },
          {
            "name": "workflowRun",
            "type": {
              "name": "WorkflowRun"
            },
            "description": "The workflow run associated with this check suite."
          }
        ]
      },
      {
        "name": "CheckSuiteAutoTriggerPreference",
        "kind": "INPUT_OBJECT",
        "description": "The auto-trigger preferences that are available for check suites.",
        "fields": null
      },
      {
        "name": "CheckSuiteConnection",
        "kind": "OBJECT",
        "description": "The connection type for CheckSuite.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CheckSuiteEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CheckSuite"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CheckSuiteFilter",
        "kind": "INPUT_OBJECT",
        "description": "The filters that are available when fetching check suites.",
        "fields": null
      },
      {
        "name": "Claimable",
        "kind": "UNION",
        "description": "An object which can have its data claimed or claim data from another.",
        "fields": null
      },
      {
        "name": "ClearLabelsFromLabelableInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ClearLabelsFromLabelable",
        "fields": null
      },
      {
        "name": "ClearLabelsFromLabelablePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ClearLabelsFromLabelable.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "labelable",
            "type": {
              "name": "Labelable"
            },
            "description": "The item that was unlabeled."
          }
        ]
      },
      {
        "name": "ClearProjectV2ItemFieldValueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ClearProjectV2ItemFieldValue",
        "fields": null
      },
      {
        "name": "ClearProjectV2ItemFieldValuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ClearProjectV2ItemFieldValue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2Item",
            "type": {
              "name": "ProjectV2Item"
            },
            "description": "The updated item."
          }
        ]
      },
      {
        "name": "CloneProjectInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CloneProject",
        "fields": null
      },
      {
        "name": "CloneProjectPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CloneProject.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "jobStatusId",
            "type": {
              "name": "String"
            },
            "description": "The id of the JobStatus for populating cloned fields."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "The new cloned project."
          }
        ]
      },
      {
        "name": "CloneTemplateRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CloneTemplateRepository",
        "fields": null
      },
      {
        "name": "CloneTemplateRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CloneTemplateRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The new repository."
          }
        ]
      },
      {
        "name": "Closable",
        "kind": "INTERFACE",
        "description": "An object that can be closed",
        "fields": [
          {
            "name": "closed",
            "type": {
              "name": null
            },
            "description": "Indicates if the object is closed (definition of closed may depend on type)"
          },
          {
            "name": "closedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the object was closed."
          },
          {
            "name": "viewerCanClose",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be closed by the viewer."
          },
          {
            "name": "viewerCanReopen",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be reopened by the viewer."
          }
        ]
      },
      {
        "name": "CloseDiscussionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CloseDiscussion",
        "fields": null
      },
      {
        "name": "CloseDiscussionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CloseDiscussion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion that was closed."
          }
        ]
      },
      {
        "name": "CloseIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CloseIssue",
        "fields": null
      },
      {
        "name": "CloseIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CloseIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The issue that was closed."
          }
        ]
      },
      {
        "name": "ClosePullRequestInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ClosePullRequest",
        "fields": null
      },
      {
        "name": "ClosePullRequestPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ClosePullRequest.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request that was closed."
          }
        ]
      },
      {
        "name": "ClosedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'closed' event on any `Closable`.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "closable",
            "type": {
              "name": null
            },
            "description": "Object that was closed."
          },
          {
            "name": "closer",
            "type": {
              "name": "Closer"
            },
            "description": "Object which triggered the creation of this event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ClosedEvent object"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this closed event."
          },
          {
            "name": "stateReason",
            "type": {
              "name": "IssueStateReason"
            },
            "description": "The reason the issue state was changed to closed."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this closed event."
          }
        ]
      },
      {
        "name": "Closer",
        "kind": "UNION",
        "description": "The object which triggered a `ClosedEvent`.",
        "fields": null
      },
      {
        "name": "CodeOfConduct",
        "kind": "OBJECT",
        "description": "The Code of Conduct for a repository",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": "String"
            },
            "description": "The body of the Code of Conduct"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the CodeOfConduct object"
          },
          {
            "name": "key",
            "type": {
              "name": null
            },
            "description": "The key for the Code of Conduct"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The formal name of the Code of Conduct"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this Code of Conduct"
          },
          {
            "name": "url",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this Code of Conduct"
          }
        ]
      },
      {
        "name": "CodeScanningParameters",
        "kind": "OBJECT",
        "description": "Choose which tools must provide code scanning results before the reference is updated. When configured, code scanning must be enabled and have results for both the commit and the reference being updated.",
        "fields": [
          {
            "name": "codeScanningTools",
            "type": {
              "name": null
            },
            "description": "Tools that must provide code scanning results for this rule to pass."
          }
        ]
      },
      {
        "name": "CodeScanningParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Choose which tools must provide code scanning results before the reference is updated. When configured, code scanning must be enabled and have results for both the commit and the reference being updated.",
        "fields": null
      },
      {
        "name": "CodeScanningTool",
        "kind": "OBJECT",
        "description": "A tool that must provide code scanning results for this rule to pass.",
        "fields": [
          {
            "name": "alertsThreshold",
            "type": {
              "name": null
            },
            "description": "The severity level at which code scanning results that raise alerts block a reference update. For more information on alert severity levels, see \"[About code scanning alerts](${externalDocsUrl}/code-security/code-scanning/managing-code-scanning-alerts/about-code-scanning-alerts#about-alert-severity-and-security-severity-levels).\""
          },
          {
            "name": "securityAlertsThreshold",
            "type": {
              "name": null
            },
            "description": "The severity level at which code scanning results that raise security alerts block a reference update. For more information on security severity levels, see \"[About code scanning alerts](${externalDocsUrl}/code-security/code-scanning/managing-code-scanning-alerts/about-code-scanning-alerts#about-alert-severity-and-security-severity-levels).\""
          },
          {
            "name": "tool",
            "type": {
              "name": null
            },
            "description": "The name of a code scanning tool"
          }
        ]
      },
      {
        "name": "CodeScanningToolInput",
        "kind": "INPUT_OBJECT",
        "description": "A tool that must provide code scanning results for this rule to pass.",
        "fields": null
      },
      {
        "name": "CollaboratorAffiliation",
        "kind": "ENUM",
        "description": "Collaborators affiliation level with a subject.",
        "fields": null
      },
      {
        "name": "Comment",
        "kind": "INTERFACE",
        "description": "Represents a comment.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body as Markdown."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Comment object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          }
        ]
      },
      {
        "name": "CommentAuthorAssociation",
        "kind": "ENUM",
        "description": "A comment author association with repository.",
        "fields": null
      },
      {
        "name": "CommentCannotUpdateReason",
        "kind": "ENUM",
        "description": "The possible errors that will prevent a user from updating a comment.",
        "fields": null
      },
      {
        "name": "CommentDeletedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'comment_deleted' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "deletedCommentAuthor",
            "type": {
              "name": "Actor"
            },
            "description": "The user who authored the deleted comment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the CommentDeletedEvent object"
          }
        ]
      },
      {
        "name": "Commit",
        "kind": "OBJECT",
        "description": "Represents a Git commit.",
        "fields": [
          {
            "name": "abbreviatedOid",
            "type": {
              "name": null
            },
            "description": "An abbreviated version of the Git object ID"
          },
          {
            "name": "additions",
            "type": {
              "name": null
            },
            "description": "The number of additions in this commit."
          },
          {
            "name": "associatedPullRequests",
            "type": {
              "name": "PullRequestConnection"
            },
            "description": "The merged Pull Request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open Pull Requests associated with the commit"
          },
          {
            "name": "author",
            "type": {
              "name": "GitActor"
            },
            "description": "Authorship details of the commit."
          },
          {
            "name": "authoredByCommitter",
            "type": {
              "name": null
            },
            "description": "Check if the committer and the author match."
          },
          {
            "name": "authoredDate",
            "type": {
              "name": null
            },
            "description": "The datetime when this commit was authored."
          },
          {
            "name": "authors",
            "type": {
              "name": null
            },
            "description": "The list of authors for this commit based on the git author and the Co-authored-by\nmessage trailer. The git author will always be first.\n"
          },
          {
            "name": "blame",
            "type": {
              "name": null
            },
            "description": "Fetches `git blame` information."
          },
          {
            "name": "changedFilesIfAvailable",
            "type": {
              "name": "Int"
            },
            "description": "The number of changed files in this commit. If GitHub is unable to calculate the number of changed files (for example due to a timeout), this will return `null`. We recommend using this field instead of `changedFiles`."
          },
          {
            "name": "checkSuites",
            "type": {
              "name": "CheckSuiteConnection"
            },
            "description": "The check suites associated with a commit."
          },
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "Comments made on the commit."
          },
          {
            "name": "commitResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this Git object"
          },
          {
            "name": "commitUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this Git object"
          },
          {
            "name": "committedDate",
            "type": {
              "name": null
            },
            "description": "The datetime when this commit was committed."
          },
          {
            "name": "committedViaWeb",
            "type": {
              "name": null
            },
            "description": "Check if committed via GitHub web UI."
          },
          {
            "name": "committer",
            "type": {
              "name": "GitActor"
            },
            "description": "Committer details of the commit."
          },
          {
            "name": "deletions",
            "type": {
              "name": null
            },
            "description": "The number of deletions in this commit."
          },
          {
            "name": "deployments",
            "type": {
              "name": "DeploymentConnection"
            },
            "description": "The deployments associated with a commit."
          },
          {
            "name": "file",
            "type": {
              "name": "TreeEntry"
            },
            "description": "The tree entry representing the file located at the given path."
          },
          {
            "name": "history",
            "type": {
              "name": null
            },
            "description": "The linear commit history starting from (and including) this commit, in the same order as `git log`."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Commit object"
          },
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "The Git commit message"
          },
          {
            "name": "messageBody",
            "type": {
              "name": null
            },
            "description": "The Git commit message body"
          },
          {
            "name": "messageBodyHTML",
            "type": {
              "name": null
            },
            "description": "The commit message body rendered to HTML."
          },
          {
            "name": "messageHeadline",
            "type": {
              "name": null
            },
            "description": "The Git commit message headline"
          },
          {
            "name": "messageHeadlineHTML",
            "type": {
              "name": null
            },
            "description": "The commit message headline rendered to HTML."
          },
          {
            "name": "oid",
            "type": {
              "name": null
            },
            "description": "The Git object ID"
          },
          {
            "name": "onBehalfOf",
            "type": {
              "name": "Organization"
            },
            "description": "The organization this commit was made on behalf of."
          },
          {
            "name": "parents",
            "type": {
              "name": null
            },
            "description": "The parents of a commit."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The Repository this commit belongs to"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this commit"
          },
          {
            "name": "signature",
            "type": {
              "name": "GitSignature"
            },
            "description": "Commit signing information, if present."
          },
          {
            "name": "status",
            "type": {
              "name": "Status"
            },
            "description": "Status information for this commit"
          },
          {
            "name": "statusCheckRollup",
            "type": {
              "name": "StatusCheckRollup"
            },
            "description": "Check and Status rollup information for this commit."
          },
          {
            "name": "submodules",
            "type": {
              "name": null
            },
            "description": "Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file."
          },
          {
            "name": "tarballUrl",
            "type": {
              "name": null
            },
            "description": "Returns a URL to download a tarball archive for a repository.\nNote: For private repositories, these links are temporary and expire after five minutes."
          },
          {
            "name": "tree",
            "type": {
              "name": null
            },
            "description": "Commit's root Tree"
          },
          {
            "name": "treeResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for the tree of this commit"
          },
          {
            "name": "treeUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for the tree of this commit"
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this commit"
          },
          {
            "name": "viewerCanSubscribe",
            "type": {
              "name": null
            },
            "description": "Check if the viewer is able to change their subscription status for the repository."
          },
          {
            "name": "viewerSubscription",
            "type": {
              "name": "SubscriptionState"
            },
            "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."
          },
          {
            "name": "zipballUrl",
            "type": {
              "name": null
            },
            "description": "Returns a URL to download a zipball archive for a repository.\nNote: For private repositories, these links are temporary and expire after five minutes."
          }
        ]
      },
      {
        "name": "CommitAuthor",
        "kind": "INPUT_OBJECT",
        "description": "Specifies an author for filtering Git commits.",
        "fields": null
      },
      {
        "name": "CommitAuthorEmailPatternParameters",
        "kind": "OBJECT",
        "description": "Parameters to be used for the commit_author_email_pattern rule",
        "fields": [
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "How this rule will appear to users."
          },
          {
            "name": "negate",
            "type": {
              "name": null
            },
            "description": "If true, the rule will fail if the pattern matches."
          },
          {
            "name": "operator",
            "type": {
              "name": null
            },
            "description": "The operator to use for matching."
          },
          {
            "name": "pattern",
            "type": {
              "name": null
            },
            "description": "The pattern to match with."
          }
        ]
      },
      {
        "name": "CommitAuthorEmailPatternParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the commit_author_email_pattern rule",
        "fields": null
      },
      {
        "name": "CommitComment",
        "kind": "OBJECT",
        "description": "Represents a comment on a given Commit.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "Identifies the comment body."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the commit associated with the comment, if the commit exists."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the CommitComment object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isMinimized",
            "type": {
              "name": null
            },
            "description": "Returns whether or not a comment has been minimized."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "minimizedReason",
            "type": {
              "name": "String"
            },
            "description": "Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation."
          },
          {
            "name": "path",
            "type": {
              "name": "String"
            },
            "description": "Identifies the file path associated with the comment."
          },
          {
            "name": "position",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the line position associated with the comment."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path permalink for this commit comment."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL permalink for this commit comment."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanMinimize",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can minimize this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          }
        ]
      },
      {
        "name": "CommitCommentConnection",
        "kind": "OBJECT",
        "description": "The connection type for CommitComment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CommitCommentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CommitComment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CommitCommentThread",
        "kind": "OBJECT",
        "description": "A thread of comments on a commit.",
        "fields": [
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "The comments that exist in this thread."
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "The commit the comments were made on."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the CommitCommentThread object"
          },
          {
            "name": "path",
            "type": {
              "name": "String"
            },
            "description": "The file the comments were made on."
          },
          {
            "name": "position",
            "type": {
              "name": "Int"
            },
            "description": "The position in the diff for the commit that the comment was made on."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          }
        ]
      },
      {
        "name": "CommitConnection",
        "kind": "OBJECT",
        "description": "The connection type for Commit.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CommitContributionOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for commit contribution connections.",
        "fields": null
      },
      {
        "name": "CommitContributionOrderField",
        "kind": "ENUM",
        "description": "Properties by which commit contribution connections can be ordered.",
        "fields": null
      },
      {
        "name": "CommitContributionsByRepository",
        "kind": "OBJECT",
        "description": "This aggregates commits made by a user within one repository.",
        "fields": [
          {
            "name": "contributions",
            "type": {
              "name": null
            },
            "description": "The commit contributions, each representing a day."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository in which the commits were made."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for the user's commits to the repository in this time range."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for the user's commits to the repository in this time range."
          }
        ]
      },
      {
        "name": "CommitEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Commit"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CommitHistoryConnection",
        "kind": "OBJECT",
        "description": "The connection type for Commit.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CommitMessage",
        "kind": "INPUT_OBJECT",
        "description": "A message to include with a new commit",
        "fields": null
      },
      {
        "name": "CommitMessagePatternParameters",
        "kind": "OBJECT",
        "description": "Parameters to be used for the commit_message_pattern rule",
        "fields": [
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "How this rule will appear to users."
          },
          {
            "name": "negate",
            "type": {
              "name": null
            },
            "description": "If true, the rule will fail if the pattern matches."
          },
          {
            "name": "operator",
            "type": {
              "name": null
            },
            "description": "The operator to use for matching."
          },
          {
            "name": "pattern",
            "type": {
              "name": null
            },
            "description": "The pattern to match with."
          }
        ]
      },
      {
        "name": "CommitMessagePatternParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the commit_message_pattern rule",
        "fields": null
      },
      {
        "name": "CommittableBranch",
        "kind": "INPUT_OBJECT",
        "description": "A git ref for a commit to be appended to.\n\nThe ref must be a branch, i.e. its fully qualified name must start\nwith `refs/heads/` (although the input is not required to be fully\nqualified).\n\nThe Ref may be specified by its global node ID or by the\n`repositoryNameWithOwner` and `branchName`.\n\n### Examples\n\nSpecify a branch using a global node ID:\n\n    { \"id\": \"MDM6UmVmMTpyZWZzL2hlYWRzL21haW4=\" }\n\nSpecify a branch using `repositoryNameWithOwner` and `branchName`:\n\n    {\n      \"repositoryNameWithOwner\": \"github/graphql-client\",\n      \"branchName\": \"main\"\n    }\n\n",
        "fields": null
      },
      {
        "name": "CommitterEmailPatternParameters",
        "kind": "OBJECT",
        "description": "Parameters to be used for the committer_email_pattern rule",
        "fields": [
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "How this rule will appear to users."
          },
          {
            "name": "negate",
            "type": {
              "name": null
            },
            "description": "If true, the rule will fail if the pattern matches."
          },
          {
            "name": "operator",
            "type": {
              "name": null
            },
            "description": "The operator to use for matching."
          },
          {
            "name": "pattern",
            "type": {
              "name": null
            },
            "description": "The pattern to match with."
          }
        ]
      },
      {
        "name": "CommitterEmailPatternParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the committer_email_pattern rule",
        "fields": null
      },
      {
        "name": "Comparison",
        "kind": "OBJECT",
        "description": "Represents a comparison between two commit revisions.",
        "fields": [
          {
            "name": "aheadBy",
            "type": {
              "name": null
            },
            "description": "The number of commits ahead of the base branch."
          },
          {
            "name": "baseTarget",
            "type": {
              "name": null
            },
            "description": "The base revision of this comparison."
          },
          {
            "name": "behindBy",
            "type": {
              "name": null
            },
            "description": "The number of commits behind the base branch."
          },
          {
            "name": "commits",
            "type": {
              "name": null
            },
            "description": "The commits which compose this comparison."
          },
          {
            "name": "headTarget",
            "type": {
              "name": null
            },
            "description": "The head revision of this comparison."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Comparison object"
          },
          {
            "name": "status",
            "type": {
              "name": null
            },
            "description": "The status of this comparison."
          }
        ]
      },
      {
        "name": "ComparisonCommitConnection",
        "kind": "OBJECT",
        "description": "The connection type for Commit.",
        "fields": [
          {
            "name": "authorCount",
            "type": {
              "name": null
            },
            "description": "The total count of authors and co-authors across all commits."
          },
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ComparisonStatus",
        "kind": "ENUM",
        "description": "The status of a git comparison between two refs.",
        "fields": null
      },
      {
        "name": "ConnectedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'connected' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ConnectedEvent object"
          },
          {
            "name": "isCrossRepository",
            "type": {
              "name": null
            },
            "description": "Reference originated in a different repository."
          },
          {
            "name": "source",
            "type": {
              "name": null
            },
            "description": "Issue or pull request that made the reference."
          },
          {
            "name": "subject",
            "type": {
              "name": null
            },
            "description": "Issue or pull request which was connected."
          }
        ]
      },
      {
        "name": "ContributingGuidelines",
        "kind": "OBJECT",
        "description": "The Contributing Guidelines for a repository.",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": "String"
            },
            "description": "The body of the Contributing Guidelines."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the Contributing Guidelines."
          },
          {
            "name": "url",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the Contributing Guidelines."
          }
        ]
      },
      {
        "name": "Contribution",
        "kind": "INTERFACE",
        "description": "Represents a contribution a user made on GitHub, such as opening an issue.",
        "fields": [
          {
            "name": "isRestricted",
            "type": {
              "name": null
            },
            "description": "Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.\n"
          },
          {
            "name": "occurredAt",
            "type": {
              "name": null
            },
            "description": "When this contribution was made."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this contribution."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this contribution."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made this contribution.\n"
          }
        ]
      },
      {
        "name": "ContributionCalendar",
        "kind": "OBJECT",
        "description": "A calendar of contributions made on GitHub by a user.",
        "fields": [
          {
            "name": "colors",
            "type": {
              "name": null
            },
            "description": "A list of hex color codes used in this calendar. The darker the color, the more contributions it represents."
          },
          {
            "name": "isHalloween",
            "type": {
              "name": null
            },
            "description": "Determine if the color set was chosen because it's currently Halloween."
          },
          {
            "name": "months",
            "type": {
              "name": null
            },
            "description": "A list of the months of contributions in this calendar."
          },
          {
            "name": "totalContributions",
            "type": {
              "name": null
            },
            "description": "The count of total contributions in the calendar."
          },
          {
            "name": "weeks",
            "type": {
              "name": null
            },
            "description": "A list of the weeks of contributions in this calendar."
          }
        ]
      },
      {
        "name": "ContributionCalendarDay",
        "kind": "OBJECT",
        "description": "Represents a single day of contributions on GitHub by a user.",
        "fields": [
          {
            "name": "color",
            "type": {
              "name": null
            },
            "description": "The hex color code that represents how many contributions were made on this day compared to others in the calendar."
          },
          {
            "name": "contributionCount",
            "type": {
              "name": null
            },
            "description": "How many contributions were made by the user on this day."
          },
          {
            "name": "contributionLevel",
            "type": {
              "name": null
            },
            "description": "Indication of contributions, relative to other days. Can be used to indicate which color to represent this day on a calendar."
          },
          {
            "name": "date",
            "type": {
              "name": null
            },
            "description": "The day this square represents."
          },
          {
            "name": "weekday",
            "type": {
              "name": null
            },
            "description": "A number representing which day of the week this square represents, e.g., 1 is Monday."
          }
        ]
      },
      {
        "name": "ContributionCalendarMonth",
        "kind": "OBJECT",
        "description": "A month of contributions in a user's contribution graph.",
        "fields": [
          {
            "name": "firstDay",
            "type": {
              "name": null
            },
            "description": "The date of the first day of this month."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the month."
          },
          {
            "name": "totalWeeks",
            "type": {
              "name": null
            },
            "description": "How many weeks started in this month."
          },
          {
            "name": "year",
            "type": {
              "name": null
            },
            "description": "The year the month occurred in."
          }
        ]
      },
      {
        "name": "ContributionCalendarWeek",
        "kind": "OBJECT",
        "description": "A week of contributions in a user's contribution graph.",
        "fields": [
          {
            "name": "contributionDays",
            "type": {
              "name": null
            },
            "description": "The days of contributions in this week."
          },
          {
            "name": "firstDay",
            "type": {
              "name": null
            },
            "description": "The date of the earliest square in this week."
          }
        ]
      },
      {
        "name": "ContributionLevel",
        "kind": "ENUM",
        "description": "Varying levels of contributions from none to many.",
        "fields": null
      },
      {
        "name": "ContributionOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for contribution connections.",
        "fields": null
      },
      {
        "name": "ContributionsCollection",
        "kind": "OBJECT",
        "description": "A contributions collection aggregates contributions such as opened issues and commits created by a user.",
        "fields": [
          {
            "name": "commitContributionsByRepository",
            "type": {
              "name": null
            },
            "description": "Commit contributions made by the user, grouped by repository."
          },
          {
            "name": "contributionCalendar",
            "type": {
              "name": null
            },
            "description": "A calendar of this user's contributions on GitHub."
          },
          {
            "name": "contributionYears",
            "type": {
              "name": null
            },
            "description": "The years the user has been making contributions with the most recent year first."
          },
          {
            "name": "doesEndInCurrentMonth",
            "type": {
              "name": null
            },
            "description": "Determine if this collection's time span ends in the current month.\n"
          },
          {
            "name": "earliestRestrictedContributionDate",
            "type": {
              "name": "Date"
            },
            "description": "The date of the first restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts."
          },
          {
            "name": "endedAt",
            "type": {
              "name": null
            },
            "description": "The ending date and time of this collection."
          },
          {
            "name": "firstIssueContribution",
            "type": {
              "name": "CreatedIssueOrRestrictedContribution"
            },
            "description": "The first issue the user opened on GitHub. This will be null if that issue was opened outside the collection's time range and ignoreTimeRange is false. If the issue is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned."
          },
          {
            "name": "firstPullRequestContribution",
            "type": {
              "name": "CreatedPullRequestOrRestrictedContribution"
            },
            "description": "The first pull request the user opened on GitHub. This will be null if that pull request was opened outside the collection's time range and ignoreTimeRange is not true. If the pull request is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned."
          },
          {
            "name": "firstRepositoryContribution",
            "type": {
              "name": "CreatedRepositoryOrRestrictedContribution"
            },
            "description": "The first repository the user created on GitHub. This will be null if that first repository was created outside the collection's time range and ignoreTimeRange is false. If the repository is not visible, then a RestrictedContribution is returned."
          },
          {
            "name": "hasActivityInThePast",
            "type": {
              "name": null
            },
            "description": "Does the user have any more activity in the timeline that occurred prior to the collection's time range?"
          },
          {
            "name": "hasAnyContributions",
            "type": {
              "name": null
            },
            "description": "Determine if there are any contributions in this collection."
          },
          {
            "name": "hasAnyRestrictedContributions",
            "type": {
              "name": null
            },
            "description": "Determine if the user made any contributions in this time frame whose details are not visible because they were made in a private repository. Can only be true if the user enabled private contribution counts."
          },
          {
            "name": "isSingleDay",
            "type": {
              "name": null
            },
            "description": "Whether or not the collector's time span is all within the same day."
          },
          {
            "name": "issueContributions",
            "type": {
              "name": null
            },
            "description": "A list of issues the user opened."
          },
          {
            "name": "issueContributionsByRepository",
            "type": {
              "name": null
            },
            "description": "Issue contributions made by the user, grouped by repository."
          },
          {
            "name": "joinedGitHubContribution",
            "type": {
              "name": "JoinedGitHubContribution"
            },
            "description": "When the user signed up for GitHub. This will be null if that sign up date falls outside the collection's time range and ignoreTimeRange is false."
          },
          {
            "name": "latestRestrictedContributionDate",
            "type": {
              "name": "Date"
            },
            "description": "The date of the most recent restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts."
          },
          {
            "name": "mostRecentCollectionWithActivity",
            "type": {
              "name": "ContributionsCollection"
            },
            "description": "When this collection's time range does not include any activity from the user, use this\nto get a different collection from an earlier time range that does have activity.\n"
          },
          {
            "name": "mostRecentCollectionWithoutActivity",
            "type": {
              "name": "ContributionsCollection"
            },
            "description": "Returns a different contributions collection from an earlier time range than this one\nthat does not have any contributions.\n"
          },
          {
            "name": "popularIssueContribution",
            "type": {
              "name": "CreatedIssueContribution"
            },
            "description": "The issue the user opened on GitHub that received the most comments in the specified\ntime frame.\n"
          },
          {
            "name": "popularPullRequestContribution",
            "type": {
              "name": "CreatedPullRequestContribution"
            },
            "description": "The pull request the user opened on GitHub that received the most comments in the\nspecified time frame.\n"
          },
          {
            "name": "pullRequestContributions",
            "type": {
              "name": null
            },
            "description": "Pull request contributions made by the user."
          },
          {
            "name": "pullRequestContributionsByRepository",
            "type": {
              "name": null
            },
            "description": "Pull request contributions made by the user, grouped by repository."
          },
          {
            "name": "pullRequestReviewContributions",
            "type": {
              "name": null
            },
            "description": "Pull request review contributions made by the user. Returns the most recently\nsubmitted review for each PR reviewed by the user.\n"
          },
          {
            "name": "pullRequestReviewContributionsByRepository",
            "type": {
              "name": null
            },
            "description": "Pull request review contributions made by the user, grouped by repository."
          },
          {
            "name": "repositoryContributions",
            "type": {
              "name": null
            },
            "description": "A list of repositories owned by the user that the user created in this time range."
          },
          {
            "name": "restrictedContributionsCount",
            "type": {
              "name": null
            },
            "description": "A count of contributions made by the user that the viewer cannot access. Only non-zero when the user has chosen to share their private contribution counts."
          },
          {
            "name": "startedAt",
            "type": {
              "name": null
            },
            "description": "The beginning date and time of this collection."
          },
          {
            "name": "totalCommitContributions",
            "type": {
              "name": null
            },
            "description": "How many commits were made by the user in this time span."
          },
          {
            "name": "totalIssueContributions",
            "type": {
              "name": null
            },
            "description": "How many issues the user opened."
          },
          {
            "name": "totalPullRequestContributions",
            "type": {
              "name": null
            },
            "description": "How many pull requests the user opened."
          },
          {
            "name": "totalPullRequestReviewContributions",
            "type": {
              "name": null
            },
            "description": "How many pull request reviews the user left."
          },
          {
            "name": "totalRepositoriesWithContributedCommits",
            "type": {
              "name": null
            },
            "description": "How many different repositories the user committed to."
          },
          {
            "name": "totalRepositoriesWithContributedIssues",
            "type": {
              "name": null
            },
            "description": "How many different repositories the user opened issues in."
          },
          {
            "name": "totalRepositoriesWithContributedPullRequestReviews",
            "type": {
              "name": null
            },
            "description": "How many different repositories the user left pull request reviews in."
          },
          {
            "name": "totalRepositoriesWithContributedPullRequests",
            "type": {
              "name": null
            },
            "description": "How many different repositories the user opened pull requests in."
          },
          {
            "name": "totalRepositoryContributions",
            "type": {
              "name": null
            },
            "description": "How many repositories the user created."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made the contributions in this collection."
          }
        ]
      },
      {
        "name": "ConvertProjectCardNoteToIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ConvertProjectCardNoteToIssue",
        "fields": null
      },
      {
        "name": "ConvertProjectCardNoteToIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ConvertProjectCardNoteToIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectCard",
            "type": {
              "name": "ProjectCard"
            },
            "description": "The updated ProjectCard."
          }
        ]
      },
      {
        "name": "ConvertProjectV2DraftIssueItemToIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ConvertProjectV2DraftIssueItemToIssue",
        "fields": null
      },
      {
        "name": "ConvertProjectV2DraftIssueItemToIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ConvertProjectV2DraftIssueItemToIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "item",
            "type": {
              "name": "ProjectV2Item"
            },
            "description": "The updated project item."
          }
        ]
      },
      {
        "name": "ConvertPullRequestToDraftInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ConvertPullRequestToDraft",
        "fields": null
      },
      {
        "name": "ConvertPullRequestToDraftPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ConvertPullRequestToDraft.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request that is now a draft."
          }
        ]
      },
      {
        "name": "ConvertToDraftEvent",
        "kind": "OBJECT",
        "description": "Represents a 'convert_to_draft' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ConvertToDraftEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this convert to draft event."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this convert to draft event."
          }
        ]
      },
      {
        "name": "ConvertedNoteToIssueEvent",
        "kind": "OBJECT",
        "description": "Represents a 'converted_note_to_issue' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ConvertedNoteToIssueEvent object"
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "Project referenced by event."
          },
          {
            "name": "projectCard",
            "type": {
              "name": "ProjectCard"
            },
            "description": "Project card referenced by this project event."
          },
          {
            "name": "projectColumnName",
            "type": {
              "name": null
            },
            "description": "Column name referenced by this project event."
          }
        ]
      },
      {
        "name": "ConvertedToDiscussionEvent",
        "kind": "OBJECT",
        "description": "Represents a 'converted_to_discussion' event on a given issue.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion that the issue was converted into."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ConvertedToDiscussionEvent object"
          }
        ]
      },
      {
        "name": "CopilotEndpoints",
        "kind": "OBJECT",
        "description": "Copilot endpoint information",
        "fields": [
          {
            "name": "api",
            "type": {
              "name": null
            },
            "description": "Copilot API endpoint"
          },
          {
            "name": "originTracker",
            "type": {
              "name": null
            },
            "description": "Copilot origin tracker endpoint"
          },
          {
            "name": "proxy",
            "type": {
              "name": null
            },
            "description": "Copilot proxy endpoint"
          },
          {
            "name": "telemetry",
            "type": {
              "name": null
            },
            "description": "Copilot telemetry endpoint"
          }
        ]
      },
      {
        "name": "CopyProjectV2Input",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CopyProjectV2",
        "fields": null
      },
      {
        "name": "CopyProjectV2Payload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CopyProjectV2.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The copied project."
          }
        ]
      },
      {
        "name": "CreateAttributionInvitationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateAttributionInvitation",
        "fields": null
      },
      {
        "name": "CreateAttributionInvitationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateAttributionInvitation.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "owner",
            "type": {
              "name": "Organization"
            },
            "description": "The owner scoping the reattributable data."
          },
          {
            "name": "source",
            "type": {
              "name": "Claimable"
            },
            "description": "The account owning the data to reattribute."
          },
          {
            "name": "target",
            "type": {
              "name": "Claimable"
            },
            "description": "The account which may claim the data."
          }
        ]
      },
      {
        "name": "CreateBranchProtectionRuleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateBranchProtectionRule",
        "fields": null
      },
      {
        "name": "CreateBranchProtectionRulePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateBranchProtectionRule.",
        "fields": [
          {
            "name": "branchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "The newly created BranchProtectionRule."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "CreateCheckRunInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateCheckRun",
        "fields": null
      },
      {
        "name": "CreateCheckRunPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateCheckRun.",
        "fields": [
          {
            "name": "checkRun",
            "type": {
              "name": "CheckRun"
            },
            "description": "The newly created check run."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "CreateCheckSuiteInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateCheckSuite",
        "fields": null
      },
      {
        "name": "CreateCheckSuitePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateCheckSuite.",
        "fields": [
          {
            "name": "checkSuite",
            "type": {
              "name": "CheckSuite"
            },
            "description": "The newly created check suite."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "CreateCommitOnBranchInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateCommitOnBranch",
        "fields": null
      },
      {
        "name": "CreateCommitOnBranchPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateCommitOnBranch.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "The new commit."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "The ref which has been updated to point to the new commit."
          }
        ]
      },
      {
        "name": "CreateDeploymentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateDeployment",
        "fields": null
      },
      {
        "name": "CreateDeploymentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateDeployment.",
        "fields": [
          {
            "name": "autoMerged",
            "type": {
              "name": "Boolean"
            },
            "description": "True if the default branch has been auto-merged into the deployment ref."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "deployment",
            "type": {
              "name": "Deployment"
            },
            "description": "The new deployment."
          }
        ]
      },
      {
        "name": "CreateDeploymentStatusInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateDeploymentStatus",
        "fields": null
      },
      {
        "name": "CreateDeploymentStatusPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateDeploymentStatus.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "deploymentStatus",
            "type": {
              "name": "DeploymentStatus"
            },
            "description": "The new deployment status."
          }
        ]
      },
      {
        "name": "CreateDiscussionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateDiscussion",
        "fields": null
      },
      {
        "name": "CreateDiscussionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateDiscussion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion that was just created."
          }
        ]
      },
      {
        "name": "CreateEnterpriseOrganizationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateEnterpriseOrganization",
        "fields": null
      },
      {
        "name": "CreateEnterpriseOrganizationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateEnterpriseOrganization.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise that owns the created organization."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization that was created."
          }
        ]
      },
      {
        "name": "CreateEnvironmentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateEnvironment",
        "fields": null
      },
      {
        "name": "CreateEnvironmentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateEnvironment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "environment",
            "type": {
              "name": "Environment"
            },
            "description": "The new or existing environment."
          }
        ]
      },
      {
        "name": "CreateIpAllowListEntryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateIpAllowListEntry",
        "fields": null
      },
      {
        "name": "CreateIpAllowListEntryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateIpAllowListEntry.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "ipAllowListEntry",
            "type": {
              "name": "IpAllowListEntry"
            },
            "description": "The IP allow list entry that was created."
          }
        ]
      },
      {
        "name": "CreateIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateIssue",
        "fields": null
      },
      {
        "name": "CreateIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The new issue."
          }
        ]
      },
      {
        "name": "CreateLabelInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateLabel",
        "fields": null
      },
      {
        "name": "CreateLabelPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateLabel.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "label",
            "type": {
              "name": "Label"
            },
            "description": "The new label."
          }
        ]
      },
      {
        "name": "CreateLinkedBranchInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateLinkedBranch",
        "fields": null
      },
      {
        "name": "CreateLinkedBranchPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateLinkedBranch.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The issue that was linked to."
          },
          {
            "name": "linkedBranch",
            "type": {
              "name": "LinkedBranch"
            },
            "description": "The new branch issue reference."
          }
        ]
      },
      {
        "name": "CreateMigrationSourceInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateMigrationSource",
        "fields": null
      },
      {
        "name": "CreateMigrationSourcePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateMigrationSource.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "migrationSource",
            "type": {
              "name": "MigrationSource"
            },
            "description": "The created migration source."
          }
        ]
      },
      {
        "name": "CreateProjectInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateProject",
        "fields": null
      },
      {
        "name": "CreateProjectPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateProject.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "The new project."
          }
        ]
      },
      {
        "name": "CreateProjectV2FieldInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateProjectV2Field",
        "fields": null
      },
      {
        "name": "CreateProjectV2FieldPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateProjectV2Field.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2Field",
            "type": {
              "name": "ProjectV2FieldConfiguration"
            },
            "description": "The new field."
          }
        ]
      },
      {
        "name": "CreateProjectV2Input",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateProjectV2",
        "fields": null
      },
      {
        "name": "CreateProjectV2Payload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateProjectV2.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The new project."
          }
        ]
      },
      {
        "name": "CreateProjectV2StatusUpdateInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateProjectV2StatusUpdate",
        "fields": null
      },
      {
        "name": "CreateProjectV2StatusUpdatePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateProjectV2StatusUpdate.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "statusUpdate",
            "type": {
              "name": "ProjectV2StatusUpdate"
            },
            "description": "The status update updated in the project."
          }
        ]
      },
      {
        "name": "CreatePullRequestInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreatePullRequest",
        "fields": null
      },
      {
        "name": "CreatePullRequestPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreatePullRequest.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The new pull request."
          }
        ]
      },
      {
        "name": "CreateRefInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateRef",
        "fields": null
      },
      {
        "name": "CreateRefPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateRef.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "The newly created ref."
          }
        ]
      },
      {
        "name": "CreateRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateRepository",
        "fields": null
      },
      {
        "name": "CreateRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The new repository."
          }
        ]
      },
      {
        "name": "CreateRepositoryRulesetInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateRepositoryRuleset",
        "fields": null
      },
      {
        "name": "CreateRepositoryRulesetPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateRepositoryRuleset.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "ruleset",
            "type": {
              "name": "RepositoryRuleset"
            },
            "description": "The newly created Ruleset."
          }
        ]
      },
      {
        "name": "CreateSponsorsListingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateSponsorsListing",
        "fields": null
      },
      {
        "name": "CreateSponsorsListingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateSponsorsListing.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorsListing",
            "type": {
              "name": "SponsorsListing"
            },
            "description": "The new GitHub Sponsors profile."
          }
        ]
      },
      {
        "name": "CreateSponsorsTierInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateSponsorsTier",
        "fields": null
      },
      {
        "name": "CreateSponsorsTierPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateSponsorsTier.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorsTier",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "The new tier."
          }
        ]
      },
      {
        "name": "CreateSponsorshipInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateSponsorship",
        "fields": null
      },
      {
        "name": "CreateSponsorshipPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateSponsorship.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorship",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The sponsorship that was started."
          }
        ]
      },
      {
        "name": "CreateSponsorshipsInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateSponsorships",
        "fields": null
      },
      {
        "name": "CreateSponsorshipsPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateSponsorships.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorables",
            "type": {
              "name": null
            },
            "description": "The users and organizations who received a sponsorship."
          }
        ]
      },
      {
        "name": "CreateTeamDiscussionCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateTeamDiscussionComment",
        "fields": null
      },
      {
        "name": "CreateTeamDiscussionCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateTeamDiscussionComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "CreateTeamDiscussionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateTeamDiscussion",
        "fields": null
      },
      {
        "name": "CreateTeamDiscussionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateTeamDiscussion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "CreateUserListInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of CreateUserList",
        "fields": null
      },
      {
        "name": "CreateUserListPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of CreateUserList.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "list",
            "type": {
              "name": "UserList"
            },
            "description": "The list that was just created"
          },
          {
            "name": "viewer",
            "type": {
              "name": "User"
            },
            "description": "The user who created the list"
          }
        ]
      },
      {
        "name": "CreatedCommitContribution",
        "kind": "OBJECT",
        "description": "Represents the contribution a user made by committing to a repository.",
        "fields": [
          {
            "name": "commitCount",
            "type": {
              "name": null
            },
            "description": "How many commits were made on this day to this repository by the user."
          },
          {
            "name": "isRestricted",
            "type": {
              "name": null
            },
            "description": "Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.\n"
          },
          {
            "name": "occurredAt",
            "type": {
              "name": null
            },
            "description": "When this contribution was made."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository the user made a commit in."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this contribution."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this contribution."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made this contribution.\n"
          }
        ]
      },
      {
        "name": "CreatedCommitContributionConnection",
        "kind": "OBJECT",
        "description": "The connection type for CreatedCommitContribution.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of commits across days and repositories in the connection.\n"
          }
        ]
      },
      {
        "name": "CreatedCommitContributionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CreatedCommitContribution"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CreatedIssueContribution",
        "kind": "OBJECT",
        "description": "Represents the contribution a user made on GitHub by opening an issue.",
        "fields": [
          {
            "name": "isRestricted",
            "type": {
              "name": null
            },
            "description": "Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.\n"
          },
          {
            "name": "issue",
            "type": {
              "name": null
            },
            "description": "The issue that was opened."
          },
          {
            "name": "occurredAt",
            "type": {
              "name": null
            },
            "description": "When this contribution was made."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this contribution."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this contribution."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made this contribution.\n"
          }
        ]
      },
      {
        "name": "CreatedIssueContributionConnection",
        "kind": "OBJECT",
        "description": "The connection type for CreatedIssueContribution.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CreatedIssueContributionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CreatedIssueContribution"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CreatedIssueOrRestrictedContribution",
        "kind": "UNION",
        "description": "Represents either a issue the viewer can access or a restricted contribution.",
        "fields": null
      },
      {
        "name": "CreatedPullRequestContribution",
        "kind": "OBJECT",
        "description": "Represents the contribution a user made on GitHub by opening a pull request.",
        "fields": [
          {
            "name": "isRestricted",
            "type": {
              "name": null
            },
            "description": "Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.\n"
          },
          {
            "name": "occurredAt",
            "type": {
              "name": null
            },
            "description": "When this contribution was made."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "The pull request that was opened."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this contribution."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this contribution."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made this contribution.\n"
          }
        ]
      },
      {
        "name": "CreatedPullRequestContributionConnection",
        "kind": "OBJECT",
        "description": "The connection type for CreatedPullRequestContribution.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CreatedPullRequestContributionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CreatedPullRequestContribution"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CreatedPullRequestOrRestrictedContribution",
        "kind": "UNION",
        "description": "Represents either a pull request the viewer can access or a restricted contribution.",
        "fields": null
      },
      {
        "name": "CreatedPullRequestReviewContribution",
        "kind": "OBJECT",
        "description": "Represents the contribution a user made by leaving a review on a pull request.",
        "fields": [
          {
            "name": "isRestricted",
            "type": {
              "name": null
            },
            "description": "Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.\n"
          },
          {
            "name": "occurredAt",
            "type": {
              "name": null
            },
            "description": "When this contribution was made."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "The pull request the user reviewed."
          },
          {
            "name": "pullRequestReview",
            "type": {
              "name": null
            },
            "description": "The review the user left on the pull request."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository containing the pull request that the user reviewed."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this contribution."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this contribution."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made this contribution.\n"
          }
        ]
      },
      {
        "name": "CreatedPullRequestReviewContributionConnection",
        "kind": "OBJECT",
        "description": "The connection type for CreatedPullRequestReviewContribution.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CreatedPullRequestReviewContributionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CreatedPullRequestReviewContribution"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CreatedRepositoryContribution",
        "kind": "OBJECT",
        "description": "Represents the contribution a user made on GitHub by creating a repository.",
        "fields": [
          {
            "name": "isRestricted",
            "type": {
              "name": null
            },
            "description": "Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.\n"
          },
          {
            "name": "occurredAt",
            "type": {
              "name": null
            },
            "description": "When this contribution was made."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository that was created."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this contribution."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this contribution."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made this contribution.\n"
          }
        ]
      },
      {
        "name": "CreatedRepositoryContributionConnection",
        "kind": "OBJECT",
        "description": "The connection type for CreatedRepositoryContribution.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "CreatedRepositoryContributionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "CreatedRepositoryContribution"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "CreatedRepositoryOrRestrictedContribution",
        "kind": "UNION",
        "description": "Represents either a repository the viewer can access or a restricted contribution.",
        "fields": null
      },
      {
        "name": "CrossReferencedEvent",
        "kind": "OBJECT",
        "description": "Represents a mention made by one issue or pull request to another.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the CrossReferencedEvent object"
          },
          {
            "name": "isCrossRepository",
            "type": {
              "name": null
            },
            "description": "Reference originated in a different repository."
          },
          {
            "name": "referencedAt",
            "type": {
              "name": null
            },
            "description": "Identifies when the reference was made."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this pull request."
          },
          {
            "name": "source",
            "type": {
              "name": null
            },
            "description": "Issue or pull request that made the reference."
          },
          {
            "name": "target",
            "type": {
              "name": null
            },
            "description": "Issue or pull request to which the reference was made."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this pull request."
          },
          {
            "name": "willCloseTarget",
            "type": {
              "name": null
            },
            "description": "Checks if the target will be closed when the source is merged."
          }
        ]
      },
      {
        "name": "Date",
        "kind": "SCALAR",
        "description": "An ISO-8601 encoded date string.",
        "fields": null
      },
      {
        "name": "DateTime",
        "kind": "SCALAR",
        "description": "An ISO-8601 encoded UTC date string.",
        "fields": null
      },
      {
        "name": "DeclineTopicSuggestionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeclineTopicSuggestion",
        "fields": null
      },
      {
        "name": "DeclineTopicSuggestionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeclineTopicSuggestion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DefaultRepositoryPermissionField",
        "kind": "ENUM",
        "description": "The possible base permissions for repositories.",
        "fields": null
      },
      {
        "name": "Deletable",
        "kind": "INTERFACE",
        "description": "Entities that can be deleted.",
        "fields": [
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          }
        ]
      },
      {
        "name": "DeleteBranchProtectionRuleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteBranchProtectionRule",
        "fields": null
      },
      {
        "name": "DeleteBranchProtectionRulePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteBranchProtectionRule.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteDeploymentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteDeployment",
        "fields": null
      },
      {
        "name": "DeleteDeploymentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteDeployment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteDiscussionCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteDiscussionComment",
        "fields": null
      },
      {
        "name": "DeleteDiscussionCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteDiscussionComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "comment",
            "type": {
              "name": "DiscussionComment"
            },
            "description": "The discussion comment that was just deleted."
          }
        ]
      },
      {
        "name": "DeleteDiscussionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteDiscussion",
        "fields": null
      },
      {
        "name": "DeleteDiscussionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteDiscussion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion that was just deleted."
          }
        ]
      },
      {
        "name": "DeleteEnvironmentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteEnvironment",
        "fields": null
      },
      {
        "name": "DeleteEnvironmentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteEnvironment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteIpAllowListEntryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteIpAllowListEntry",
        "fields": null
      },
      {
        "name": "DeleteIpAllowListEntryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteIpAllowListEntry.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "ipAllowListEntry",
            "type": {
              "name": "IpAllowListEntry"
            },
            "description": "The IP allow list entry that was deleted."
          }
        ]
      },
      {
        "name": "DeleteIssueCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteIssueComment",
        "fields": null
      },
      {
        "name": "DeleteIssueCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteIssueComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteIssue",
        "fields": null
      },
      {
        "name": "DeleteIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository the issue belonged to"
          }
        ]
      },
      {
        "name": "DeleteLabelInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteLabel",
        "fields": null
      },
      {
        "name": "DeleteLabelPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteLabel.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteLinkedBranchInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteLinkedBranch",
        "fields": null
      },
      {
        "name": "DeleteLinkedBranchPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteLinkedBranch.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The issue the linked branch was unlinked from."
          }
        ]
      },
      {
        "name": "DeletePackageVersionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeletePackageVersion",
        "fields": null
      },
      {
        "name": "DeletePackageVersionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeletePackageVersion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "success",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether or not the operation succeeded."
          }
        ]
      },
      {
        "name": "DeleteProjectCardInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteProjectCard",
        "fields": null
      },
      {
        "name": "DeleteProjectCardPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteProjectCard.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "column",
            "type": {
              "name": "ProjectColumn"
            },
            "description": "The column the deleted card was in."
          },
          {
            "name": "deletedCardId",
            "type": {
              "name": "ID"
            },
            "description": "The deleted card ID."
          }
        ]
      },
      {
        "name": "DeleteProjectColumnInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteProjectColumn",
        "fields": null
      },
      {
        "name": "DeleteProjectColumnPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteProjectColumn.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "deletedColumnId",
            "type": {
              "name": "ID"
            },
            "description": "The deleted column ID."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "The project the deleted column was in."
          }
        ]
      },
      {
        "name": "DeleteProjectInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteProject",
        "fields": null
      },
      {
        "name": "DeleteProjectPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteProject.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "owner",
            "type": {
              "name": "ProjectOwner"
            },
            "description": "The repository or organization the project was removed from."
          }
        ]
      },
      {
        "name": "DeleteProjectV2FieldInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteProjectV2Field",
        "fields": null
      },
      {
        "name": "DeleteProjectV2FieldPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteProjectV2Field.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2Field",
            "type": {
              "name": "ProjectV2FieldConfiguration"
            },
            "description": "The deleted field."
          }
        ]
      },
      {
        "name": "DeleteProjectV2Input",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteProjectV2",
        "fields": null
      },
      {
        "name": "DeleteProjectV2ItemInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteProjectV2Item",
        "fields": null
      },
      {
        "name": "DeleteProjectV2ItemPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteProjectV2Item.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "deletedItemId",
            "type": {
              "name": "ID"
            },
            "description": "The ID of the deleted item."
          }
        ]
      },
      {
        "name": "DeleteProjectV2Payload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteProjectV2.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The deleted Project."
          }
        ]
      },
      {
        "name": "DeleteProjectV2StatusUpdateInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteProjectV2StatusUpdate",
        "fields": null
      },
      {
        "name": "DeleteProjectV2StatusUpdatePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteProjectV2StatusUpdate.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "deletedStatusUpdateId",
            "type": {
              "name": "ID"
            },
            "description": "The ID of the deleted status update."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The project the deleted status update was in."
          }
        ]
      },
      {
        "name": "DeleteProjectV2WorkflowInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteProjectV2Workflow",
        "fields": null
      },
      {
        "name": "DeleteProjectV2WorkflowPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteProjectV2Workflow.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "deletedWorkflowId",
            "type": {
              "name": "ID"
            },
            "description": "The ID of the deleted workflow."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The project the deleted workflow was in."
          }
        ]
      },
      {
        "name": "DeletePullRequestReviewCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeletePullRequestReviewComment",
        "fields": null
      },
      {
        "name": "DeletePullRequestReviewCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeletePullRequestReviewComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequestReview",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The pull request review the deleted comment belonged to."
          },
          {
            "name": "pullRequestReviewComment",
            "type": {
              "name": "PullRequestReviewComment"
            },
            "description": "The deleted pull request review comment."
          }
        ]
      },
      {
        "name": "DeletePullRequestReviewInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeletePullRequestReview",
        "fields": null
      },
      {
        "name": "DeletePullRequestReviewPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeletePullRequestReview.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequestReview",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The deleted pull request review."
          }
        ]
      },
      {
        "name": "DeleteRefInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteRef",
        "fields": null
      },
      {
        "name": "DeleteRefPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteRef.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteRepositoryRulesetInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteRepositoryRuleset",
        "fields": null
      },
      {
        "name": "DeleteRepositoryRulesetPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteRepositoryRuleset.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteTeamDiscussionCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteTeamDiscussionComment",
        "fields": null
      },
      {
        "name": "DeleteTeamDiscussionCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteTeamDiscussionComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteTeamDiscussionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteTeamDiscussion",
        "fields": null
      },
      {
        "name": "DeleteTeamDiscussionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteTeamDiscussion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "DeleteUserListInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteUserList",
        "fields": null
      },
      {
        "name": "DeleteUserListPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteUserList.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The owner of the list that will be deleted"
          }
        ]
      },
      {
        "name": "DeleteVerifiableDomainInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DeleteVerifiableDomain",
        "fields": null
      },
      {
        "name": "DeleteVerifiableDomainPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DeleteVerifiableDomain.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "owner",
            "type": {
              "name": "VerifiableDomainOwner"
            },
            "description": "The owning account from which the domain was deleted."
          }
        ]
      },
      {
        "name": "DemilestonedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'demilestoned' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DemilestonedEvent object"
          },
          {
            "name": "milestoneTitle",
            "type": {
              "name": null
            },
            "description": "Identifies the milestone title associated with the 'demilestoned' event."
          },
          {
            "name": "subject",
            "type": {
              "name": null
            },
            "description": "Object referenced by event."
          }
        ]
      },
      {
        "name": "DependabotUpdate",
        "kind": "OBJECT",
        "description": "A Dependabot Update for a dependency in a repository",
        "fields": [
          {
            "name": "error",
            "type": {
              "name": "DependabotUpdateError"
            },
            "description": "The error from a dependency update"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The associated pull request"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          }
        ]
      },
      {
        "name": "DependabotUpdateError",
        "kind": "OBJECT",
        "description": "An error produced from a Dependabot Update",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body of the error"
          },
          {
            "name": "errorType",
            "type": {
              "name": null
            },
            "description": "The error code"
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "The title of the error"
          }
        ]
      },
      {
        "name": "DependencyGraphDependency",
        "kind": "OBJECT",
        "description": "A dependency manifest entry",
        "fields": [
          {
            "name": "hasDependencies",
            "type": {
              "name": null
            },
            "description": "Does the dependency itself have dependencies?"
          },
          {
            "name": "packageManager",
            "type": {
              "name": "String"
            },
            "description": "The dependency package manager"
          },
          {
            "name": "packageName",
            "type": {
              "name": null
            },
            "description": "The name of the package in the canonical form used by the package manager."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository containing the package"
          },
          {
            "name": "requirements",
            "type": {
              "name": null
            },
            "description": "The dependency version requirements"
          }
        ]
      },
      {
        "name": "DependencyGraphDependencyConnection",
        "kind": "OBJECT",
        "description": "The connection type for DependencyGraphDependency.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DependencyGraphDependencyEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DependencyGraphDependency"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DependencyGraphEcosystem",
        "kind": "ENUM",
        "description": "The possible ecosystems of a dependency graph package.",
        "fields": null
      },
      {
        "name": "DependencyGraphManifest",
        "kind": "OBJECT",
        "description": "Dependency manifest for a repository",
        "fields": [
          {
            "name": "blobPath",
            "type": {
              "name": null
            },
            "description": "Path to view the manifest file blob"
          },
          {
            "name": "dependencies",
            "type": {
              "name": "DependencyGraphDependencyConnection"
            },
            "description": "A list of manifest dependencies"
          },
          {
            "name": "dependenciesCount",
            "type": {
              "name": "Int"
            },
            "description": "The number of dependencies listed in the manifest"
          },
          {
            "name": "exceedsMaxSize",
            "type": {
              "name": null
            },
            "description": "Is the manifest too big to parse?"
          },
          {
            "name": "filename",
            "type": {
              "name": null
            },
            "description": "Fully qualified manifest filename"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DependencyGraphManifest object"
          },
          {
            "name": "parseable",
            "type": {
              "name": null
            },
            "description": "Were we able to parse the manifest?"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository containing the manifest"
          }
        ]
      },
      {
        "name": "DependencyGraphManifestConnection",
        "kind": "OBJECT",
        "description": "The connection type for DependencyGraphManifest.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DependencyGraphManifestEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DependencyGraphManifest"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DeployKey",
        "kind": "OBJECT",
        "description": "A repository deploy key.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enabled",
            "type": {
              "name": null
            },
            "description": "Whether or not the deploy key is enabled by policy at the Enterprise or Organization level."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DeployKey object"
          },
          {
            "name": "key",
            "type": {
              "name": null
            },
            "description": "The deploy key."
          },
          {
            "name": "readOnly",
            "type": {
              "name": null
            },
            "description": "Whether or not the deploy key is read only."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "The deploy key title."
          },
          {
            "name": "verified",
            "type": {
              "name": null
            },
            "description": "Whether or not the deploy key has been verified."
          }
        ]
      },
      {
        "name": "DeployKeyConnection",
        "kind": "OBJECT",
        "description": "The connection type for DeployKey.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DeployKeyEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DeployKey"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DeployedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'deployed' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "deployment",
            "type": {
              "name": null
            },
            "description": "The deployment associated with the 'deployed' event."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DeployedEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "The ref associated with the 'deployed' event."
          }
        ]
      },
      {
        "name": "Deployment",
        "kind": "OBJECT",
        "description": "Represents triggered deployment instance.",
        "fields": [
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the commit sha of the deployment."
          },
          {
            "name": "commitOid",
            "type": {
              "name": null
            },
            "description": "Identifies the oid of the deployment commit, even if the commit has been deleted."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": null
            },
            "description": "Identifies the actor who triggered the deployment."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The deployment description."
          },
          {
            "name": "environment",
            "type": {
              "name": "String"
            },
            "description": "The latest environment to which this deployment was made."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Deployment object"
          },
          {
            "name": "latestEnvironment",
            "type": {
              "name": "String"
            },
            "description": "The latest environment to which this deployment was made."
          },
          {
            "name": "latestStatus",
            "type": {
              "name": "DeploymentStatus"
            },
            "description": "The latest status of this deployment."
          },
          {
            "name": "originalEnvironment",
            "type": {
              "name": "String"
            },
            "description": "The original environment to which this deployment was made."
          },
          {
            "name": "payload",
            "type": {
              "name": "String"
            },
            "description": "Extra information that a deployment system might need."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "Identifies the Ref of the deployment, if the deployment was created by ref."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "Identifies the repository associated with the deployment."
          },
          {
            "name": "state",
            "type": {
              "name": "DeploymentState"
            },
            "description": "The current state of the deployment."
          },
          {
            "name": "statuses",
            "type": {
              "name": "DeploymentStatusConnection"
            },
            "description": "A list of statuses associated with the deployment."
          },
          {
            "name": "task",
            "type": {
              "name": "String"
            },
            "description": "The deployment task."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "DeploymentConnection",
        "kind": "OBJECT",
        "description": "The connection type for Deployment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DeploymentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Deployment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DeploymentEnvironmentChangedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'deployment_environment_changed' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "deploymentStatus",
            "type": {
              "name": null
            },
            "description": "The deployment status that updated the deployment environment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DeploymentEnvironmentChangedEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "DeploymentOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for deployment connections",
        "fields": null
      },
      {
        "name": "DeploymentOrderField",
        "kind": "ENUM",
        "description": "Properties by which deployment connections can be ordered.",
        "fields": null
      },
      {
        "name": "DeploymentProtectionRule",
        "kind": "OBJECT",
        "description": "A protection rule.",
        "fields": [
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "preventSelfReview",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether deployments to this environment can be approved by the user who created the deployment."
          },
          {
            "name": "reviewers",
            "type": {
              "name": null
            },
            "description": "The teams or users that can review the deployment"
          },
          {
            "name": "timeout",
            "type": {
              "name": null
            },
            "description": "The timeout in minutes for this protection rule."
          },
          {
            "name": "type",
            "type": {
              "name": null
            },
            "description": "The type of protection rule."
          }
        ]
      },
      {
        "name": "DeploymentProtectionRuleConnection",
        "kind": "OBJECT",
        "description": "The connection type for DeploymentProtectionRule.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DeploymentProtectionRuleEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DeploymentProtectionRule"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DeploymentProtectionRuleType",
        "kind": "ENUM",
        "description": "The possible protection rule types.",
        "fields": null
      },
      {
        "name": "DeploymentRequest",
        "kind": "OBJECT",
        "description": "A request to deploy a workflow run to an environment.",
        "fields": [
          {
            "name": "currentUserCanApprove",
            "type": {
              "name": null
            },
            "description": "Whether or not the current user can approve the deployment"
          },
          {
            "name": "environment",
            "type": {
              "name": null
            },
            "description": "The target environment of the deployment"
          },
          {
            "name": "reviewers",
            "type": {
              "name": null
            },
            "description": "The teams or users that can review the deployment"
          },
          {
            "name": "waitTimer",
            "type": {
              "name": null
            },
            "description": "The wait timer in minutes configured in the environment"
          },
          {
            "name": "waitTimerStartedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The wait timer in minutes configured in the environment"
          }
        ]
      },
      {
        "name": "DeploymentRequestConnection",
        "kind": "OBJECT",
        "description": "The connection type for DeploymentRequest.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DeploymentRequestEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DeploymentRequest"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DeploymentReview",
        "kind": "OBJECT",
        "description": "A deployment review.",
        "fields": [
          {
            "name": "comment",
            "type": {
              "name": null
            },
            "description": "The comment the user left."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "environments",
            "type": {
              "name": null
            },
            "description": "The environments approved or rejected"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DeploymentReview object"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The decision of the user."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user that reviewed the deployment."
          }
        ]
      },
      {
        "name": "DeploymentReviewConnection",
        "kind": "OBJECT",
        "description": "The connection type for DeploymentReview.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DeploymentReviewEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DeploymentReview"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DeploymentReviewState",
        "kind": "ENUM",
        "description": "The possible states for a deployment review.",
        "fields": null
      },
      {
        "name": "DeploymentReviewer",
        "kind": "UNION",
        "description": "Users and teams.",
        "fields": null
      },
      {
        "name": "DeploymentReviewerConnection",
        "kind": "OBJECT",
        "description": "The connection type for DeploymentReviewer.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DeploymentReviewerEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DeploymentReviewer"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DeploymentState",
        "kind": "ENUM",
        "description": "The possible states in which a deployment can be.",
        "fields": null
      },
      {
        "name": "DeploymentStatus",
        "kind": "OBJECT",
        "description": "Describes the status of a given deployment attempt.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": null
            },
            "description": "Identifies the actor who triggered the deployment."
          },
          {
            "name": "deployment",
            "type": {
              "name": null
            },
            "description": "Identifies the deployment associated with status."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "Identifies the description of the deployment."
          },
          {
            "name": "environment",
            "type": {
              "name": "String"
            },
            "description": "Identifies the environment of the deployment at the time of this deployment status"
          },
          {
            "name": "environmentUrl",
            "type": {
              "name": "URI"
            },
            "description": "Identifies the environment URL of the deployment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DeploymentStatus object"
          },
          {
            "name": "logUrl",
            "type": {
              "name": "URI"
            },
            "description": "Identifies the log URL of the deployment."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "Identifies the current state of the deployment."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "DeploymentStatusConnection",
        "kind": "OBJECT",
        "description": "The connection type for DeploymentStatus.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DeploymentStatusEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DeploymentStatus"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DeploymentStatusState",
        "kind": "ENUM",
        "description": "The possible states for a deployment status.",
        "fields": null
      },
      {
        "name": "DequeuePullRequestInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DequeuePullRequest",
        "fields": null
      },
      {
        "name": "DequeuePullRequestPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DequeuePullRequest.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "mergeQueueEntry",
            "type": {
              "name": "MergeQueueEntry"
            },
            "description": "The merge queue entry of the dequeued pull request."
          }
        ]
      },
      {
        "name": "DiffSide",
        "kind": "ENUM",
        "description": "The possible sides of a diff.",
        "fields": null
      },
      {
        "name": "DisablePullRequestAutoMergeInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DisablePullRequestAutoMerge",
        "fields": null
      },
      {
        "name": "DisablePullRequestAutoMergePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DisablePullRequestAutoMerge.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request auto merge was disabled on."
          }
        ]
      },
      {
        "name": "DisconnectedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'disconnected' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DisconnectedEvent object"
          },
          {
            "name": "isCrossRepository",
            "type": {
              "name": null
            },
            "description": "Reference originated in a different repository."
          },
          {
            "name": "source",
            "type": {
              "name": null
            },
            "description": "Issue or pull request from which the issue was disconnected."
          },
          {
            "name": "subject",
            "type": {
              "name": null
            },
            "description": "Issue or pull request which was disconnected."
          }
        ]
      },
      {
        "name": "Discussion",
        "kind": "OBJECT",
        "description": "A discussion in a repository.",
        "fields": [
          {
            "name": "activeLockReason",
            "type": {
              "name": "LockReason"
            },
            "description": "Reason that the conversation was locked."
          },
          {
            "name": "answer",
            "type": {
              "name": "DiscussionComment"
            },
            "description": "The comment chosen as this discussion's answer, if any."
          },
          {
            "name": "answerChosenAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The time when a user chose this discussion's answer, if answered."
          },
          {
            "name": "answerChosenBy",
            "type": {
              "name": "Actor"
            },
            "description": "The user who chose this discussion's answer, if answered."
          },
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The main text of the discussion post."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "category",
            "type": {
              "name": null
            },
            "description": "The category for this discussion."
          },
          {
            "name": "closed",
            "type": {
              "name": null
            },
            "description": "Indicates if the object is closed (definition of closed may depend on type)"
          },
          {
            "name": "closedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the object was closed."
          },
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "The replies to the discussion."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Discussion object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isAnswered",
            "type": {
              "name": "Boolean"
            },
            "description": "Only return answered/unanswered discussions"
          },
          {
            "name": "labels",
            "type": {
              "name": "LabelConnection"
            },
            "description": "A list of labels associated with the object."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "locked",
            "type": {
              "name": null
            },
            "description": "`true` if the object is locked"
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "The number identifying this discussion within the repository."
          },
          {
            "name": "poll",
            "type": {
              "name": "DiscussionPoll"
            },
            "description": "The poll associated with this discussion, if one exists."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The path for this discussion."
          },
          {
            "name": "stateReason",
            "type": {
              "name": "DiscussionStateReason"
            },
            "description": "Identifies the reason for the discussion's state."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "The title of this discussion."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "upvoteCount",
            "type": {
              "name": null
            },
            "description": "Number of upvotes that this subject has received."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The URL for this discussion."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanClose",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be closed by the viewer."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanLabel",
            "type": {
              "name": null
            },
            "description": "Indicates if the viewer can edit labels for this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanReopen",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be reopened by the viewer."
          },
          {
            "name": "viewerCanSubscribe",
            "type": {
              "name": null
            },
            "description": "Check if the viewer is able to change their subscription status for the repository."
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCanUpvote",
            "type": {
              "name": null
            },
            "description": "Whether or not the current user can add or remove an upvote on this subject."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          },
          {
            "name": "viewerHasUpvoted",
            "type": {
              "name": null
            },
            "description": "Whether or not the current user has already upvoted this subject."
          },
          {
            "name": "viewerSubscription",
            "type": {
              "name": "SubscriptionState"
            },
            "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."
          }
        ]
      },
      {
        "name": "DiscussionCategory",
        "kind": "OBJECT",
        "description": "A category for discussions in a repository.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "A description of this category."
          },
          {
            "name": "emoji",
            "type": {
              "name": null
            },
            "description": "An emoji representing this category."
          },
          {
            "name": "emojiHTML",
            "type": {
              "name": null
            },
            "description": "This category's emoji rendered as HTML."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DiscussionCategory object"
          },
          {
            "name": "isAnswerable",
            "type": {
              "name": null
            },
            "description": "Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of this category."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "slug",
            "type": {
              "name": null
            },
            "description": "The slug of this category."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "DiscussionCategoryConnection",
        "kind": "OBJECT",
        "description": "The connection type for DiscussionCategory.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DiscussionCategoryEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DiscussionCategory"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DiscussionCloseReason",
        "kind": "ENUM",
        "description": "The possible reasons for closing a discussion.",
        "fields": null
      },
      {
        "name": "DiscussionComment",
        "kind": "OBJECT",
        "description": "A comment on a discussion.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body as Markdown."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "deletedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The time when this replied-to comment was deleted"
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion this comment was created in"
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DiscussionComment object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isAnswer",
            "type": {
              "name": null
            },
            "description": "Has this comment been chosen as the answer of its discussion?"
          },
          {
            "name": "isMinimized",
            "type": {
              "name": null
            },
            "description": "Returns whether or not a comment has been minimized."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "minimizedReason",
            "type": {
              "name": "String"
            },
            "description": "Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "replies",
            "type": {
              "name": null
            },
            "description": "The threaded replies to this comment."
          },
          {
            "name": "replyTo",
            "type": {
              "name": "DiscussionComment"
            },
            "description": "The discussion comment this comment is a reply to"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The path for this discussion comment."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "upvoteCount",
            "type": {
              "name": null
            },
            "description": "Number of upvotes that this subject has received."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The URL for this discussion comment."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanMarkAsAnswer",
            "type": {
              "name": null
            },
            "description": "Can the current user mark this comment as an answer?"
          },
          {
            "name": "viewerCanMinimize",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can minimize this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanUnmarkAsAnswer",
            "type": {
              "name": null
            },
            "description": "Can the current user unmark this comment as an answer?"
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCanUpvote",
            "type": {
              "name": null
            },
            "description": "Whether or not the current user can add or remove an upvote on this subject."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          },
          {
            "name": "viewerHasUpvoted",
            "type": {
              "name": null
            },
            "description": "Whether or not the current user has already upvoted this subject."
          }
        ]
      },
      {
        "name": "DiscussionCommentConnection",
        "kind": "OBJECT",
        "description": "The connection type for DiscussionComment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DiscussionCommentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DiscussionComment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DiscussionConnection",
        "kind": "OBJECT",
        "description": "The connection type for Discussion.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DiscussionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Discussion"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DiscussionOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of discussions can be ordered upon return.",
        "fields": null
      },
      {
        "name": "DiscussionOrderField",
        "kind": "ENUM",
        "description": "Properties by which discussion connections can be ordered.",
        "fields": null
      },
      {
        "name": "DiscussionPoll",
        "kind": "OBJECT",
        "description": "A poll for a discussion.",
        "fields": [
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion that this poll belongs to."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DiscussionPoll object"
          },
          {
            "name": "options",
            "type": {
              "name": "DiscussionPollOptionConnection"
            },
            "description": "The options for this poll."
          },
          {
            "name": "question",
            "type": {
              "name": null
            },
            "description": "The question that is being asked by this poll."
          },
          {
            "name": "totalVoteCount",
            "type": {
              "name": null
            },
            "description": "The total number of votes that have been cast for this poll."
          },
          {
            "name": "viewerCanVote",
            "type": {
              "name": null
            },
            "description": "Indicates if the viewer has permission to vote in this poll."
          },
          {
            "name": "viewerHasVoted",
            "type": {
              "name": null
            },
            "description": "Indicates if the viewer has voted for any option in this poll."
          }
        ]
      },
      {
        "name": "DiscussionPollOption",
        "kind": "OBJECT",
        "description": "An option for a discussion poll.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DiscussionPollOption object"
          },
          {
            "name": "option",
            "type": {
              "name": null
            },
            "description": "The text for this option."
          },
          {
            "name": "poll",
            "type": {
              "name": "DiscussionPoll"
            },
            "description": "The discussion poll that this option belongs to."
          },
          {
            "name": "totalVoteCount",
            "type": {
              "name": null
            },
            "description": "The total number of votes that have been cast for this option."
          },
          {
            "name": "viewerHasVoted",
            "type": {
              "name": null
            },
            "description": "Indicates if the viewer has voted for this option in the poll."
          }
        ]
      },
      {
        "name": "DiscussionPollOptionConnection",
        "kind": "OBJECT",
        "description": "The connection type for DiscussionPollOption.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "DiscussionPollOptionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "DiscussionPollOption"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "DiscussionPollOptionOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for discussion poll option connections.",
        "fields": null
      },
      {
        "name": "DiscussionPollOptionOrderField",
        "kind": "ENUM",
        "description": "Properties by which discussion poll option connections can be ordered.",
        "fields": null
      },
      {
        "name": "DiscussionState",
        "kind": "ENUM",
        "description": "The possible states of a discussion.",
        "fields": null
      },
      {
        "name": "DiscussionStateReason",
        "kind": "ENUM",
        "description": "The possible state reasons of a discussion.",
        "fields": null
      },
      {
        "name": "DismissPullRequestReviewInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DismissPullRequestReview",
        "fields": null
      },
      {
        "name": "DismissPullRequestReviewPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DismissPullRequestReview.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequestReview",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The dismissed pull request review."
          }
        ]
      },
      {
        "name": "DismissReason",
        "kind": "ENUM",
        "description": "The possible reasons that a Dependabot alert was dismissed.",
        "fields": null
      },
      {
        "name": "DismissRepositoryVulnerabilityAlertInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of DismissRepositoryVulnerabilityAlert",
        "fields": null
      },
      {
        "name": "DismissRepositoryVulnerabilityAlertPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of DismissRepositoryVulnerabilityAlert.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repositoryVulnerabilityAlert",
            "type": {
              "name": "RepositoryVulnerabilityAlert"
            },
            "description": "The Dependabot alert that was dismissed"
          }
        ]
      },
      {
        "name": "DraftIssue",
        "kind": "OBJECT",
        "description": "A draft issue within a project.",
        "fields": [
          {
            "name": "assignees",
            "type": {
              "name": null
            },
            "description": "A list of users to assigned to this draft issue."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body of the draft issue."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body of the draft issue rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body of the draft issue rendered to text."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created this draft issue."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the DraftIssue object"
          },
          {
            "name": "projectV2Items",
            "type": {
              "name": null
            },
            "description": "List of items linked with the draft issue (currently draft issue can be linked to only one item)."
          },
          {
            "name": "projectsV2",
            "type": {
              "name": null
            },
            "description": "Projects that link to this draft issue (currently draft issue can be linked to only one project)."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "The title of the draft issue"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "DraftPullRequestReviewComment",
        "kind": "INPUT_OBJECT",
        "description": "Specifies a review comment to be left with a Pull Request Review.",
        "fields": null
      },
      {
        "name": "DraftPullRequestReviewThread",
        "kind": "INPUT_OBJECT",
        "description": "Specifies a review comment thread to be left with a Pull Request Review.",
        "fields": null
      },
      {
        "name": "EPSS",
        "kind": "OBJECT",
        "description": "The Exploit Prediction Scoring System",
        "fields": [
          {
            "name": "percentage",
            "type": {
              "name": "Float"
            },
            "description": "The EPSS percentage represents the likelihood of a CVE being exploited."
          },
          {
            "name": "percentile",
            "type": {
              "name": "Float"
            },
            "description": "The EPSS percentile represents the relative rank of the CVE's likelihood of being exploited compared to other CVEs."
          }
        ]
      },
      {
        "name": "EnablePullRequestAutoMergeInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of EnablePullRequestAutoMerge",
        "fields": null
      },
      {
        "name": "EnablePullRequestAutoMergePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of EnablePullRequestAutoMerge.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request auto-merge was enabled on."
          }
        ]
      },
      {
        "name": "EnqueuePullRequestInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of EnqueuePullRequest",
        "fields": null
      },
      {
        "name": "EnqueuePullRequestPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of EnqueuePullRequest.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "mergeQueueEntry",
            "type": {
              "name": "MergeQueueEntry"
            },
            "description": "The merge queue entry for the enqueued pull request."
          }
        ]
      },
      {
        "name": "Enterprise",
        "kind": "OBJECT",
        "description": "An account to manage multiple organizations with consolidated policy and billing.",
        "fields": [
          {
            "name": "announcementBanner",
            "type": {
              "name": "AnnouncementBanner"
            },
            "description": "The announcement banner set on this enterprise, if any. Only visible to members of the enterprise."
          },
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the enterprise's public avatar."
          },
          {
            "name": "billingEmail",
            "type": {
              "name": "String"
            },
            "description": "The enterprise's billing email."
          },
          {
            "name": "billingInfo",
            "type": {
              "name": "EnterpriseBillingInfo"
            },
            "description": "Enterprise billing information visible to enterprise billing managers."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The description of the enterprise."
          },
          {
            "name": "descriptionHTML",
            "type": {
              "name": null
            },
            "description": "The description of the enterprise as HTML."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Enterprise object"
          },
          {
            "name": "location",
            "type": {
              "name": "String"
            },
            "description": "The location of the enterprise."
          },
          {
            "name": "members",
            "type": {
              "name": null
            },
            "description": "A list of users who are members of this enterprise."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the enterprise."
          },
          {
            "name": "organizations",
            "type": {
              "name": null
            },
            "description": "A list of organizations that belong to this enterprise."
          },
          {
            "name": "ownerInfo",
            "type": {
              "name": "EnterpriseOwnerInfo"
            },
            "description": "Enterprise information visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope."
          },
          {
            "name": "readme",
            "type": {
              "name": "String"
            },
            "description": "The raw content of the enterprise README."
          },
          {
            "name": "readmeHTML",
            "type": {
              "name": null
            },
            "description": "The content of the enterprise README as HTML."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "ruleset",
            "type": {
              "name": "RepositoryRuleset"
            },
            "description": "Returns a single ruleset from the current enterprise by ID."
          },
          {
            "name": "rulesets",
            "type": {
              "name": "RepositoryRulesetConnection"
            },
            "description": "A list of rulesets for this enterprise."
          },
          {
            "name": "slug",
            "type": {
              "name": null
            },
            "description": "The URL-friendly identifier for the enterprise."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "viewerIsAdmin",
            "type": {
              "name": null
            },
            "description": "Is the current viewer an admin of this enterprise?"
          },
          {
            "name": "websiteUrl",
            "type": {
              "name": "URI"
            },
            "description": "The URL of the enterprise website."
          }
        ]
      },
      {
        "name": "EnterpriseAdministratorConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseAdministratorEdge",
        "kind": "OBJECT",
        "description": "A User who is an administrator of an enterprise.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "User"
            },
            "description": "The item at the end of the edge."
          },
          {
            "name": "role",
            "type": {
              "name": null
            },
            "description": "The role of the administrator."
          }
        ]
      },
      {
        "name": "EnterpriseAdministratorInvitation",
        "kind": "OBJECT",
        "description": "An invitation for a user to become an owner or billing manager of an enterprise.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The email of the person who was invited to the enterprise."
          },
          {
            "name": "enterprise",
            "type": {
              "name": null
            },
            "description": "The enterprise the invitation is for."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseAdministratorInvitation object"
          },
          {
            "name": "invitee",
            "type": {
              "name": "User"
            },
            "description": "The user who was invited to the enterprise."
          },
          {
            "name": "inviter",
            "type": {
              "name": "User"
            },
            "description": "The user who created the invitation."
          },
          {
            "name": "role",
            "type": {
              "name": null
            },
            "description": "The invitee's pending role in the enterprise (owner or billing_manager)."
          }
        ]
      },
      {
        "name": "EnterpriseAdministratorInvitationConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseAdministratorInvitation.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseAdministratorInvitationEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseAdministratorInvitation"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseAdministratorInvitationOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for enterprise administrator invitation connections",
        "fields": null
      },
      {
        "name": "EnterpriseAdministratorInvitationOrderField",
        "kind": "ENUM",
        "description": "Properties by which enterprise administrator invitation connections can be ordered.",
        "fields": null
      },
      {
        "name": "EnterpriseAdministratorRole",
        "kind": "ENUM",
        "description": "The possible administrator roles in an enterprise account.",
        "fields": null
      },
      {
        "name": "EnterpriseAllowPrivateRepositoryForkingPolicyValue",
        "kind": "ENUM",
        "description": "The possible values for the enterprise allow private repository forking policy value.",
        "fields": null
      },
      {
        "name": "EnterpriseAuditEntryData",
        "kind": "INTERFACE",
        "description": "Metadata for an audit entry containing enterprise account information.",
        "fields": [
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          }
        ]
      },
      {
        "name": "EnterpriseBillingInfo",
        "kind": "OBJECT",
        "description": "Enterprise billing information visible to enterprise billing managers and owners.",
        "fields": [
          {
            "name": "allLicensableUsersCount",
            "type": {
              "name": null
            },
            "description": "The number of licenseable users/emails across the enterprise."
          },
          {
            "name": "assetPacks",
            "type": {
              "name": null
            },
            "description": "The number of data packs used by all organizations owned by the enterprise."
          },
          {
            "name": "bandwidthQuota",
            "type": {
              "name": null
            },
            "description": "The bandwidth quota in GB for all organizations owned by the enterprise."
          },
          {
            "name": "bandwidthUsage",
            "type": {
              "name": null
            },
            "description": "The bandwidth usage in GB for all organizations owned by the enterprise."
          },
          {
            "name": "bandwidthUsagePercentage",
            "type": {
              "name": null
            },
            "description": "The bandwidth usage as a percentage of the bandwidth quota."
          },
          {
            "name": "storageQuota",
            "type": {
              "name": null
            },
            "description": "The storage quota in GB for all organizations owned by the enterprise."
          },
          {
            "name": "storageUsage",
            "type": {
              "name": null
            },
            "description": "The storage usage in GB for all organizations owned by the enterprise."
          },
          {
            "name": "storageUsagePercentage",
            "type": {
              "name": null
            },
            "description": "The storage usage as a percentage of the storage quota."
          },
          {
            "name": "totalAvailableLicenses",
            "type": {
              "name": null
            },
            "description": "The number of available licenses across all owned organizations based on the unique number of billable users."
          },
          {
            "name": "totalLicenses",
            "type": {
              "name": null
            },
            "description": "The total number of licenses allocated."
          }
        ]
      },
      {
        "name": "EnterpriseConnection",
        "kind": "OBJECT",
        "description": "The connection type for Enterprise.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseDefaultRepositoryPermissionSettingValue",
        "kind": "ENUM",
        "description": "The possible values for the enterprise base repository permission setting.",
        "fields": null
      },
      {
        "name": "EnterpriseDisallowedMethodsSettingValue",
        "kind": "ENUM",
        "description": "The possible values for an enabled/no policy enterprise setting.",
        "fields": null
      },
      {
        "name": "EnterpriseEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Enterprise"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseEnabledDisabledSettingValue",
        "kind": "ENUM",
        "description": "The possible values for an enabled/disabled enterprise setting.",
        "fields": null
      },
      {
        "name": "EnterpriseEnabledSettingValue",
        "kind": "ENUM",
        "description": "The possible values for an enabled/no policy enterprise setting.",
        "fields": null
      },
      {
        "name": "EnterpriseFailedInvitationConnection",
        "kind": "OBJECT",
        "description": "The connection type for OrganizationInvitation.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          },
          {
            "name": "totalUniqueUserCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of unique users in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseFailedInvitationEdge",
        "kind": "OBJECT",
        "description": "A failed invitation to be a member in an enterprise organization.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "OrganizationInvitation"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseIdentityProvider",
        "kind": "OBJECT",
        "description": "An identity provider configured to provision identities for an enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.",
        "fields": [
          {
            "name": "digestMethod",
            "type": {
              "name": "SamlDigestAlgorithm"
            },
            "description": "The digest algorithm used to sign SAML requests for the identity provider."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise this identity provider belongs to."
          },
          {
            "name": "externalIdentities",
            "type": {
              "name": null
            },
            "description": "ExternalIdentities provisioned by this identity provider."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseIdentityProvider object"
          },
          {
            "name": "idpCertificate",
            "type": {
              "name": "X509Certificate"
            },
            "description": "The x509 certificate used by the identity provider to sign assertions and responses."
          },
          {
            "name": "issuer",
            "type": {
              "name": "String"
            },
            "description": "The Issuer Entity ID for the SAML identity provider."
          },
          {
            "name": "recoveryCodes",
            "type": {
              "name": null
            },
            "description": "Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable."
          },
          {
            "name": "signatureMethod",
            "type": {
              "name": "SamlSignatureAlgorithm"
            },
            "description": "The signature algorithm used to sign SAML requests for the identity provider."
          },
          {
            "name": "ssoUrl",
            "type": {
              "name": "URI"
            },
            "description": "The URL endpoint for the identity provider's SAML SSO."
          }
        ]
      },
      {
        "name": "EnterpriseMember",
        "kind": "UNION",
        "description": "An object that is a member of an enterprise.",
        "fields": null
      },
      {
        "name": "EnterpriseMemberConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseMember.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseMemberEdge",
        "kind": "OBJECT",
        "description": "A User who is a member of an enterprise through one or more organizations.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseMember"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseMemberInvitation",
        "kind": "OBJECT",
        "description": "An invitation for a user to become an unaffiliated member of an enterprise.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The email of the person who was invited to the enterprise."
          },
          {
            "name": "enterprise",
            "type": {
              "name": null
            },
            "description": "The enterprise the invitation is for."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseMemberInvitation object"
          },
          {
            "name": "invitee",
            "type": {
              "name": "User"
            },
            "description": "The user who was invited to the enterprise."
          },
          {
            "name": "inviter",
            "type": {
              "name": "User"
            },
            "description": "The user who created the invitation."
          }
        ]
      },
      {
        "name": "EnterpriseMemberInvitationConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseMemberInvitation.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseMemberInvitationEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseMemberInvitation"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseMemberInvitationOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for enterprise administrator invitation connections",
        "fields": null
      },
      {
        "name": "EnterpriseMemberInvitationOrderField",
        "kind": "ENUM",
        "description": "Properties by which enterprise member invitation connections can be ordered.",
        "fields": null
      },
      {
        "name": "EnterpriseMemberOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for enterprise member connections.",
        "fields": null
      },
      {
        "name": "EnterpriseMemberOrderField",
        "kind": "ENUM",
        "description": "Properties by which enterprise member connections can be ordered.",
        "fields": null
      },
      {
        "name": "EnterpriseMembersCanCreateRepositoriesSettingValue",
        "kind": "ENUM",
        "description": "The possible values for the enterprise members can create repositories setting.",
        "fields": null
      },
      {
        "name": "EnterpriseMembersCanMakePurchasesSettingValue",
        "kind": "ENUM",
        "description": "The possible values for the members can make purchases setting.",
        "fields": null
      },
      {
        "name": "EnterpriseMembershipType",
        "kind": "ENUM",
        "description": "The possible values we have for filtering Platform::Objects::User#enterprises.",
        "fields": null
      },
      {
        "name": "EnterpriseOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for enterprises.",
        "fields": null
      },
      {
        "name": "EnterpriseOrderField",
        "kind": "ENUM",
        "description": "Properties by which enterprise connections can be ordered.",
        "fields": null
      },
      {
        "name": "EnterpriseOrganizationMembershipConnection",
        "kind": "OBJECT",
        "description": "The connection type for Organization.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseOrganizationMembershipEdge",
        "kind": "OBJECT",
        "description": "An enterprise organization that a user is a member of.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Organization"
            },
            "description": "The item at the end of the edge."
          },
          {
            "name": "role",
            "type": {
              "name": null
            },
            "description": "The role of the user in the enterprise membership."
          }
        ]
      },
      {
        "name": "EnterpriseOutsideCollaboratorConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseOutsideCollaboratorEdge",
        "kind": "OBJECT",
        "description": "A User who is an outside collaborator of an enterprise through one or more organizations.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "User"
            },
            "description": "The item at the end of the edge."
          },
          {
            "name": "repositories",
            "type": {
              "name": null
            },
            "description": "The enterprise organization repositories this user is a member of."
          }
        ]
      },
      {
        "name": "EnterpriseOwnerInfo",
        "kind": "OBJECT",
        "description": "Enterprise information visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.",
        "fields": [
          {
            "name": "admins",
            "type": {
              "name": null
            },
            "description": "A list of all of the administrators for this enterprise."
          },
          {
            "name": "affiliatedUsersWithTwoFactorDisabled",
            "type": {
              "name": null
            },
            "description": "A list of users in the enterprise who currently have two-factor authentication disabled."
          },
          {
            "name": "affiliatedUsersWithTwoFactorDisabledExist",
            "type": {
              "name": null
            },
            "description": "Whether or not affiliated users with two-factor authentication disabled exist in the enterprise."
          },
          {
            "name": "allowPrivateRepositoryForkingSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise."
          },
          {
            "name": "allowPrivateRepositoryForkingSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided private repository forking setting value."
          },
          {
            "name": "allowPrivateRepositoryForkingSettingPolicyValue",
            "type": {
              "name": "EnterpriseAllowPrivateRepositoryForkingPolicyValue"
            },
            "description": "The value for the allow private repository forking policy on the enterprise."
          },
          {
            "name": "defaultRepositoryPermissionSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for base repository permissions for organizations in this enterprise."
          },
          {
            "name": "defaultRepositoryPermissionSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided base repository permission."
          },
          {
            "name": "domains",
            "type": {
              "name": null
            },
            "description": "A list of domains owned by the enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with admin:enterprise scope."
          },
          {
            "name": "enterpriseServerInstallations",
            "type": {
              "name": null
            },
            "description": "Enterprise Server installations owned by the enterprise."
          },
          {
            "name": "failedInvitations",
            "type": {
              "name": null
            },
            "description": "A list of failed invitations in the enterprise."
          },
          {
            "name": "ipAllowListEnabledSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether the enterprise has an IP allow list enabled."
          },
          {
            "name": "ipAllowListEntries",
            "type": {
              "name": null
            },
            "description": "The IP addresses that are allowed to access resources owned by the enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with admin:enterprise scope."
          },
          {
            "name": "ipAllowListForInstalledAppsEnabledSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled."
          },
          {
            "name": "isUpdatingDefaultRepositoryPermission",
            "type": {
              "name": null
            },
            "description": "Whether or not the base repository permission is currently being updated."
          },
          {
            "name": "isUpdatingTwoFactorRequirement",
            "type": {
              "name": null
            },
            "description": "Whether the two-factor authentication requirement is currently being enforced."
          },
          {
            "name": "membersCanChangeRepositoryVisibilitySetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether organization members with admin permissions on a repository can change repository visibility."
          },
          {
            "name": "membersCanChangeRepositoryVisibilitySettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided can change repository visibility setting value."
          },
          {
            "name": "membersCanCreateInternalRepositoriesSetting",
            "type": {
              "name": "Boolean"
            },
            "description": "The setting value for whether members of organizations in the enterprise can create internal repositories."
          },
          {
            "name": "membersCanCreatePrivateRepositoriesSetting",
            "type": {
              "name": "Boolean"
            },
            "description": "The setting value for whether members of organizations in the enterprise can create private repositories."
          },
          {
            "name": "membersCanCreatePublicRepositoriesSetting",
            "type": {
              "name": "Boolean"
            },
            "description": "The setting value for whether members of organizations in the enterprise can create public repositories."
          },
          {
            "name": "membersCanCreateRepositoriesSetting",
            "type": {
              "name": "EnterpriseMembersCanCreateRepositoriesSettingValue"
            },
            "description": "The setting value for whether members of organizations in the enterprise can create repositories."
          },
          {
            "name": "membersCanCreateRepositoriesSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided repository creation setting value."
          },
          {
            "name": "membersCanDeleteIssuesSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether members with admin permissions for repositories can delete issues."
          },
          {
            "name": "membersCanDeleteIssuesSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided members can delete issues setting value."
          },
          {
            "name": "membersCanDeleteRepositoriesSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether members with admin permissions for repositories can delete or transfer repositories."
          },
          {
            "name": "membersCanDeleteRepositoriesSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided members can delete repositories setting value."
          },
          {
            "name": "membersCanInviteCollaboratorsSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether members of organizations in the enterprise can invite outside collaborators."
          },
          {
            "name": "membersCanInviteCollaboratorsSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided members can invite collaborators setting value."
          },
          {
            "name": "membersCanMakePurchasesSetting",
            "type": {
              "name": null
            },
            "description": "Indicates whether members of this enterprise's organizations can purchase additional services for those organizations."
          },
          {
            "name": "membersCanUpdateProtectedBranchesSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether members with admin permissions for repositories can update protected branches."
          },
          {
            "name": "membersCanUpdateProtectedBranchesSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided members can update protected branches setting value."
          },
          {
            "name": "membersCanViewDependencyInsightsSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether members can view dependency insights."
          },
          {
            "name": "membersCanViewDependencyInsightsSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided members can view dependency insights setting value."
          },
          {
            "name": "notificationDeliveryRestrictionEnabledSetting",
            "type": {
              "name": null
            },
            "description": "Indicates if email notification delivery for this enterprise is restricted to verified or approved domains."
          },
          {
            "name": "oidcProvider",
            "type": {
              "name": "OIDCProvider"
            },
            "description": "The OIDC Identity Provider for the enterprise."
          },
          {
            "name": "organizationProjectsSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether organization projects are enabled for organizations in this enterprise."
          },
          {
            "name": "organizationProjectsSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided organization projects setting value."
          },
          {
            "name": "outsideCollaborators",
            "type": {
              "name": null
            },
            "description": "A list of outside collaborators across the repositories in the enterprise."
          },
          {
            "name": "pendingAdminInvitations",
            "type": {
              "name": null
            },
            "description": "A list of pending administrator invitations for the enterprise."
          },
          {
            "name": "pendingCollaboratorInvitations",
            "type": {
              "name": null
            },
            "description": "A list of pending collaborator invitations across the repositories in the enterprise."
          },
          {
            "name": "pendingMemberInvitations",
            "type": {
              "name": null
            },
            "description": "A list of pending member invitations for organizations in the enterprise."
          },
          {
            "name": "pendingUnaffiliatedMemberInvitations",
            "type": {
              "name": null
            },
            "description": "A list of pending unaffiliated member invitations for the enterprise."
          },
          {
            "name": "repositoryDeployKeySetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether deploy keys are enabled for repositories in organizations in this enterprise."
          },
          {
            "name": "repositoryDeployKeySettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided deploy keys setting value."
          },
          {
            "name": "repositoryProjectsSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether repository projects are enabled in this enterprise."
          },
          {
            "name": "repositoryProjectsSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided repository projects setting value."
          },
          {
            "name": "samlIdentityProvider",
            "type": {
              "name": "EnterpriseIdentityProvider"
            },
            "description": "The SAML Identity Provider for the enterprise."
          },
          {
            "name": "samlIdentityProviderSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the SAML single sign-on setting value."
          },
          {
            "name": "supportEntitlements",
            "type": {
              "name": null
            },
            "description": "A list of members with a support entitlement."
          },
          {
            "name": "teamDiscussionsSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether team discussions are enabled for organizations in this enterprise."
          },
          {
            "name": "teamDiscussionsSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the provided team discussions setting value."
          },
          {
            "name": "twoFactorDisallowedMethodsSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for what methods of two-factor authentication the enterprise prevents its users from having."
          },
          {
            "name": "twoFactorRequiredSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether the enterprise requires two-factor authentication for its organizations and users."
          },
          {
            "name": "twoFactorRequiredSettingOrganizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations configured with the two-factor authentication setting value."
          }
        ]
      },
      {
        "name": "EnterprisePendingMemberInvitationConnection",
        "kind": "OBJECT",
        "description": "The connection type for OrganizationInvitation.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          },
          {
            "name": "totalUniqueUserCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of unique users in the connection."
          }
        ]
      },
      {
        "name": "EnterprisePendingMemberInvitationEdge",
        "kind": "OBJECT",
        "description": "An invitation to be a member in an enterprise organization.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "OrganizationInvitation"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseRepositoryInfo",
        "kind": "OBJECT",
        "description": "A subset of repository information queryable from an enterprise.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseRepositoryInfo object"
          },
          {
            "name": "isPrivate",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is private or internal."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The repository's name."
          },
          {
            "name": "nameWithOwner",
            "type": {
              "name": null
            },
            "description": "The repository's name with owner."
          }
        ]
      },
      {
        "name": "EnterpriseRepositoryInfoConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseRepositoryInfo.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseRepositoryInfoEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseRepositoryInfo"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseServerInstallation",
        "kind": "OBJECT",
        "description": "An Enterprise Server installation.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "customerName",
            "type": {
              "name": null
            },
            "description": "The customer name to which the Enterprise Server installation belongs."
          },
          {
            "name": "hostName",
            "type": {
              "name": null
            },
            "description": "The host name of the Enterprise Server installation."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseServerInstallation object"
          },
          {
            "name": "isConnected",
            "type": {
              "name": null
            },
            "description": "Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "userAccounts",
            "type": {
              "name": null
            },
            "description": "User accounts on this Enterprise Server installation."
          },
          {
            "name": "userAccountsUploads",
            "type": {
              "name": null
            },
            "description": "User accounts uploads for the Enterprise Server installation."
          }
        ]
      },
      {
        "name": "EnterpriseServerInstallationConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseServerInstallation.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseServerInstallationEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseServerInstallation"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseServerInstallationMembershipConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseServerInstallation.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseServerInstallationMembershipEdge",
        "kind": "OBJECT",
        "description": "An Enterprise Server installation that a user is a member of.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseServerInstallation"
            },
            "description": "The item at the end of the edge."
          },
          {
            "name": "role",
            "type": {
              "name": null
            },
            "description": "The role of the user in the enterprise membership."
          }
        ]
      },
      {
        "name": "EnterpriseServerInstallationOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for Enterprise Server installation connections.",
        "fields": null
      },
      {
        "name": "EnterpriseServerInstallationOrderField",
        "kind": "ENUM",
        "description": "Properties by which Enterprise Server installation connections can be ordered.",
        "fields": null
      },
      {
        "name": "EnterpriseServerUserAccount",
        "kind": "OBJECT",
        "description": "A user account on an Enterprise Server installation.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "emails",
            "type": {
              "name": null
            },
            "description": "User emails belonging to this user account."
          },
          {
            "name": "enterpriseServerInstallation",
            "type": {
              "name": null
            },
            "description": "The Enterprise Server installation on which this user account exists."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseServerUserAccount object"
          },
          {
            "name": "isSiteAdmin",
            "type": {
              "name": null
            },
            "description": "Whether the user account is a site administrator on the Enterprise Server installation."
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "The login of the user account on the Enterprise Server installation."
          },
          {
            "name": "profileName",
            "type": {
              "name": "String"
            },
            "description": "The profile name of the user account on the Enterprise Server installation."
          },
          {
            "name": "remoteCreatedAt",
            "type": {
              "name": null
            },
            "description": "The date and time when the user account was created on the Enterprise Server installation."
          },
          {
            "name": "remoteUserId",
            "type": {
              "name": null
            },
            "description": "The ID of the user account on the Enterprise Server installation."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseServerUserAccount.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseServerUserAccount"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountEmail",
        "kind": "OBJECT",
        "description": "An email belonging to a user account on an Enterprise Server installation.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "email",
            "type": {
              "name": null
            },
            "description": "The email address."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseServerUserAccountEmail object"
          },
          {
            "name": "isPrimary",
            "type": {
              "name": null
            },
            "description": "Indicates whether this is the primary email of the associated user account."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "userAccount",
            "type": {
              "name": null
            },
            "description": "The user account to which the email belongs."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountEmailConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseServerUserAccountEmail.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountEmailEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseServerUserAccountEmail"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountEmailOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for Enterprise Server user account email connections.",
        "fields": null
      },
      {
        "name": "EnterpriseServerUserAccountEmailOrderField",
        "kind": "ENUM",
        "description": "Properties by which Enterprise Server user account email connections can be ordered.",
        "fields": null
      },
      {
        "name": "EnterpriseServerUserAccountOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for Enterprise Server user account connections.",
        "fields": null
      },
      {
        "name": "EnterpriseServerUserAccountOrderField",
        "kind": "ENUM",
        "description": "Properties by which Enterprise Server user account connections can be ordered.",
        "fields": null
      },
      {
        "name": "EnterpriseServerUserAccountsUpload",
        "kind": "OBJECT",
        "description": "A user accounts upload from an Enterprise Server installation.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enterprise",
            "type": {
              "name": null
            },
            "description": "The enterprise to which this upload belongs."
          },
          {
            "name": "enterpriseServerInstallation",
            "type": {
              "name": null
            },
            "description": "The Enterprise Server installation for which this upload was generated."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseServerUserAccountsUpload object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the file uploaded."
          },
          {
            "name": "syncState",
            "type": {
              "name": null
            },
            "description": "The synchronization state of the upload"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountsUploadConnection",
        "kind": "OBJECT",
        "description": "The connection type for EnterpriseServerUserAccountsUpload.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountsUploadEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "EnterpriseServerUserAccountsUpload"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnterpriseServerUserAccountsUploadOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for Enterprise Server user accounts upload connections.",
        "fields": null
      },
      {
        "name": "EnterpriseServerUserAccountsUploadOrderField",
        "kind": "ENUM",
        "description": "Properties by which Enterprise Server user accounts upload connections can be ordered.",
        "fields": null
      },
      {
        "name": "EnterpriseServerUserAccountsUploadSyncState",
        "kind": "ENUM",
        "description": "Synchronization state of the Enterprise Server user accounts upload",
        "fields": null
      },
      {
        "name": "EnterpriseUserAccount",
        "kind": "OBJECT",
        "description": "An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.",
        "fields": [
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the enterprise user account's public avatar."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enterprise",
            "type": {
              "name": null
            },
            "description": "The enterprise in which this user account exists."
          },
          {
            "name": "enterpriseInstallations",
            "type": {
              "name": null
            },
            "description": "A list of Enterprise Server installations this user is a member of."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the EnterpriseUserAccount object"
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "An identifier for the enterprise user account, a login or email address"
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The name of the enterprise user account"
          },
          {
            "name": "organizations",
            "type": {
              "name": null
            },
            "description": "A list of enterprise organizations this user is a member of."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this user."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this user."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user within the enterprise."
          }
        ]
      },
      {
        "name": "EnterpriseUserAccountMembershipRole",
        "kind": "ENUM",
        "description": "The possible roles for enterprise membership.",
        "fields": null
      },
      {
        "name": "EnterpriseUserDeployment",
        "kind": "ENUM",
        "description": "The possible GitHub Enterprise deployments where this user can exist.",
        "fields": null
      },
      {
        "name": "Environment",
        "kind": "OBJECT",
        "description": "An environment.",
        "fields": [
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Environment object"
          },
          {
            "name": "isPinned",
            "type": {
              "name": "Boolean"
            },
            "description": "Indicates whether or not this environment is currently pinned to the repository"
          },
          {
            "name": "latestCompletedDeployment",
            "type": {
              "name": "Deployment"
            },
            "description": "The latest completed deployment with status success, failure, or error if it exists"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the environment"
          },
          {
            "name": "pinnedPosition",
            "type": {
              "name": "Int"
            },
            "description": "The position of the environment if it is pinned, null if it is not pinned"
          },
          {
            "name": "protectionRules",
            "type": {
              "name": null
            },
            "description": "The protection rules defined for this environment"
          }
        ]
      },
      {
        "name": "EnvironmentConnection",
        "kind": "OBJECT",
        "description": "The connection type for Environment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "EnvironmentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Environment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "EnvironmentOrderField",
        "kind": "ENUM",
        "description": "Properties by which environments connections can be ordered",
        "fields": null
      },
      {
        "name": "EnvironmentPinnedFilterField",
        "kind": "ENUM",
        "description": "Properties by which environments connections can be ordered",
        "fields": null
      },
      {
        "name": "Environments",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for environments",
        "fields": null
      },
      {
        "name": "ExternalIdentity",
        "kind": "OBJECT",
        "description": "An external identity provisioned by SAML SSO or SCIM. If SAML is configured on the organization, the external identity is visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members. If SAML is configured on the enterprise, the external identity is visible to (1) enterprise owners, (2) enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.",
        "fields": [
          {
            "name": "guid",
            "type": {
              "name": null
            },
            "description": "The GUID for this identity"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ExternalIdentity object"
          },
          {
            "name": "organizationInvitation",
            "type": {
              "name": "OrganizationInvitation"
            },
            "description": "Organization invitation for this SCIM-provisioned external identity"
          },
          {
            "name": "samlIdentity",
            "type": {
              "name": "ExternalIdentitySamlAttributes"
            },
            "description": "SAML Identity attributes"
          },
          {
            "name": "scimIdentity",
            "type": {
              "name": "ExternalIdentityScimAttributes"
            },
            "description": "SCIM Identity attributes"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member."
          }
        ]
      },
      {
        "name": "ExternalIdentityAttribute",
        "kind": "OBJECT",
        "description": "An attribute for the External Identity attributes collection",
        "fields": [
          {
            "name": "metadata",
            "type": {
              "name": "String"
            },
            "description": "The attribute metadata as JSON"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The attribute name"
          },
          {
            "name": "value",
            "type": {
              "name": null
            },
            "description": "The attribute value"
          }
        ]
      },
      {
        "name": "ExternalIdentityConnection",
        "kind": "OBJECT",
        "description": "The connection type for ExternalIdentity.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ExternalIdentityEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ExternalIdentity"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ExternalIdentitySamlAttributes",
        "kind": "OBJECT",
        "description": "SAML attributes for the External Identity",
        "fields": [
          {
            "name": "attributes",
            "type": {
              "name": null
            },
            "description": "SAML Identity attributes"
          },
          {
            "name": "emails",
            "type": {
              "name": null
            },
            "description": "The emails associated with the SAML identity"
          },
          {
            "name": "familyName",
            "type": {
              "name": "String"
            },
            "description": "Family name of the SAML identity"
          },
          {
            "name": "givenName",
            "type": {
              "name": "String"
            },
            "description": "Given name of the SAML identity"
          },
          {
            "name": "groups",
            "type": {
              "name": null
            },
            "description": "The groups linked to this identity in IDP"
          },
          {
            "name": "nameId",
            "type": {
              "name": "String"
            },
            "description": "The NameID of the SAML identity"
          },
          {
            "name": "username",
            "type": {
              "name": "String"
            },
            "description": "The userName of the SAML identity"
          }
        ]
      },
      {
        "name": "ExternalIdentityScimAttributes",
        "kind": "OBJECT",
        "description": "SCIM attributes for the External Identity",
        "fields": [
          {
            "name": "emails",
            "type": {
              "name": null
            },
            "description": "The emails associated with the SCIM identity"
          },
          {
            "name": "familyName",
            "type": {
              "name": "String"
            },
            "description": "Family name of the SCIM identity"
          },
          {
            "name": "givenName",
            "type": {
              "name": "String"
            },
            "description": "Given name of the SCIM identity"
          },
          {
            "name": "groups",
            "type": {
              "name": null
            },
            "description": "The groups linked to this identity in IDP"
          },
          {
            "name": "username",
            "type": {
              "name": "String"
            },
            "description": "The userName of the SCIM identity"
          }
        ]
      },
      {
        "name": "FileAddition",
        "kind": "INPUT_OBJECT",
        "description": "A command to add a file at the given path with the given contents as part of a commit.  Any existing file at that that path will be replaced.",
        "fields": null
      },
      {
        "name": "FileChanges",
        "kind": "INPUT_OBJECT",
        "description": "A description of a set of changes to a file tree to be made as part of\na git commit, modeled as zero or more file `additions` and zero or more\nfile `deletions`.\n\nBoth fields are optional; omitting both will produce a commit with no\nfile changes.\n\n`deletions` and `additions` describe changes to files identified\nby their path in the git tree using unix-style path separators, i.e.\n`/`.  The root of a git tree is an empty string, so paths are not\nslash-prefixed.\n\n`path` values must be unique across all `additions` and `deletions`\nprovided.  Any duplication will result in a validation error.\n\n### Encoding\n\nFile contents must be provided in full for each `FileAddition`.\n\nThe `contents` of a `FileAddition` must be encoded using RFC 4648\ncompliant base64, i.e. correct padding is required and no characters\noutside the standard alphabet may be used.  Invalid base64\nencoding will be rejected with a validation error.\n\nThe encoded contents may be binary.\n\nFor text files, no assumptions are made about the character encoding of\nthe file contents (after base64 decoding).  No charset transcoding or\nline-ending normalization will be performed; it is the client's\nresponsibility to manage the character encoding of files they provide.\nHowever, for maximum compatibility we recommend using UTF-8 encoding\nand ensuring that all files in a repository use a consistent\nline-ending convention (`\\n` or `\\r\\n`), and that all files end\nwith a newline.\n\n### Modeling file changes\n\nEach of the the five types of conceptual changes that can be made in a\ngit commit can be described using the `FileChanges` type as follows:\n\n1. New file addition: create file `hello world\\n` at path `docs/README.txt`:\n\n       {\n         \"additions\" [\n           {\n             \"path\": \"docs/README.txt\",\n             \"contents\": base64encode(\"hello world\\n\")\n           }\n         ]\n       }\n\n2. Existing file modification: change existing `docs/README.txt` to have new\n   content `new content here\\n`:\n\n       {\n         \"additions\" [\n           {\n             \"path\": \"docs/README.txt\",\n             \"contents\": base64encode(\"new content here\\n\")\n           }\n         ]\n       }\n\n3. Existing file deletion: remove existing file `docs/README.txt`.\n   Note that the path is required to exist -- specifying a\n   path that does not exist on the given branch will abort the\n   commit and return an error.\n\n       {\n         \"deletions\" [\n           {\n             \"path\": \"docs/README.txt\"\n           }\n         ]\n       }\n\n\n4. File rename with no changes: rename `docs/README.txt` with\n   previous content `hello world\\n` to the same content at\n   `newdocs/README.txt`:\n\n       {\n         \"deletions\" [\n           {\n             \"path\": \"docs/README.txt\",\n           }\n         ],\n         \"additions\" [\n           {\n             \"path\": \"newdocs/README.txt\",\n             \"contents\": base64encode(\"hello world\\n\")\n           }\n         ]\n       }\n\n\n5. File rename with changes: rename `docs/README.txt` with\n   previous content `hello world\\n` to a file at path\n   `newdocs/README.txt` with content `new contents\\n`:\n\n       {\n         \"deletions\" [\n           {\n             \"path\": \"docs/README.txt\",\n           }\n         ],\n         \"additions\" [\n           {\n             \"path\": \"newdocs/README.txt\",\n             \"contents\": base64encode(\"new contents\\n\")\n           }\n         ]\n       }\n",
        "fields": null
      },
      {
        "name": "FileDeletion",
        "kind": "INPUT_OBJECT",
        "description": "A command to delete the file at the given path as part of a commit.",
        "fields": null
      },
      {
        "name": "FileExtensionRestrictionParameters",
        "kind": "OBJECT",
        "description": "Prevent commits that include files with specified file extensions from being pushed to the commit graph.",
        "fields": [
          {
            "name": "restrictedFileExtensions",
            "type": {
              "name": null
            },
            "description": "The file extensions that are restricted from being pushed to the commit graph."
          }
        ]
      },
      {
        "name": "FileExtensionRestrictionParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Prevent commits that include files with specified file extensions from being pushed to the commit graph.",
        "fields": null
      },
      {
        "name": "FilePathRestrictionParameters",
        "kind": "OBJECT",
        "description": "Prevent commits that include changes in specified file paths from being pushed to the commit graph.",
        "fields": [
          {
            "name": "restrictedFilePaths",
            "type": {
              "name": null
            },
            "description": "The file paths that are restricted from being pushed to the commit graph."
          }
        ]
      },
      {
        "name": "FilePathRestrictionParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Prevent commits that include changes in specified file paths from being pushed to the commit graph.",
        "fields": null
      },
      {
        "name": "FileViewedState",
        "kind": "ENUM",
        "description": "The possible viewed states of a file .",
        "fields": null
      },
      {
        "name": "Float",
        "kind": "SCALAR",
        "description": "Represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
        "fields": null
      },
      {
        "name": "FollowOrganizationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of FollowOrganization",
        "fields": null
      },
      {
        "name": "FollowOrganizationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of FollowOrganization.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization that was followed."
          }
        ]
      },
      {
        "name": "FollowUserInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of FollowUser",
        "fields": null
      },
      {
        "name": "FollowUserPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of FollowUser.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user that was followed."
          }
        ]
      },
      {
        "name": "FollowerConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "FollowingConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "FundingLink",
        "kind": "OBJECT",
        "description": "A funding platform link for a repository.",
        "fields": [
          {
            "name": "platform",
            "type": {
              "name": null
            },
            "description": "The funding platform this link is for."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The configured URL for this funding link."
          }
        ]
      },
      {
        "name": "FundingPlatform",
        "kind": "ENUM",
        "description": "The possible funding platforms for repository funding links.",
        "fields": null
      },
      {
        "name": "GenericHovercardContext",
        "kind": "OBJECT",
        "description": "A generic hovercard context with a message and icon",
        "fields": [
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "A string describing this context"
          },
          {
            "name": "octicon",
            "type": {
              "name": null
            },
            "description": "An octicon to accompany this context"
          }
        ]
      },
      {
        "name": "Gist",
        "kind": "OBJECT",
        "description": "A Gist.",
        "fields": [
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "A list of comments associated with the gist"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The gist description."
          },
          {
            "name": "files",
            "type": {
              "name": null
            },
            "description": "The files in this gist."
          },
          {
            "name": "forks",
            "type": {
              "name": null
            },
            "description": "A list of forks associated with the gist"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Gist object"
          },
          {
            "name": "isFork",
            "type": {
              "name": null
            },
            "description": "Identifies if the gist is a fork."
          },
          {
            "name": "isPublic",
            "type": {
              "name": null
            },
            "description": "Whether the gist is public or not."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The gist name."
          },
          {
            "name": "owner",
            "type": {
              "name": "RepositoryOwner"
            },
            "description": "The gist owner."
          },
          {
            "name": "pushedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the gist was last pushed to."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTML path to this resource."
          },
          {
            "name": "stargazerCount",
            "type": {
              "name": null
            },
            "description": "Returns a count of how many stargazers there are on this object\n"
          },
          {
            "name": "stargazers",
            "type": {
              "name": null
            },
            "description": "A list of users who have starred this starrable."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this Gist."
          },
          {
            "name": "viewerHasStarred",
            "type": {
              "name": null
            },
            "description": "Returns a boolean indicating whether the viewing user has starred this starrable."
          }
        ]
      },
      {
        "name": "GistComment",
        "kind": "OBJECT",
        "description": "Represents a comment on an Gist.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the gist."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "Identifies the comment body."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "gist",
            "type": {
              "name": null
            },
            "description": "The associated gist."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the GistComment object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isMinimized",
            "type": {
              "name": null
            },
            "description": "Returns whether or not a comment has been minimized."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "minimizedReason",
            "type": {
              "name": "String"
            },
            "description": "Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanMinimize",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can minimize this object."
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          }
        ]
      },
      {
        "name": "GistCommentConnection",
        "kind": "OBJECT",
        "description": "The connection type for GistComment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "GistCommentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "GistComment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "GistConnection",
        "kind": "OBJECT",
        "description": "The connection type for Gist.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "GistEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Gist"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "GistFile",
        "kind": "OBJECT",
        "description": "A file in a gist.",
        "fields": [
          {
            "name": "encodedName",
            "type": {
              "name": "String"
            },
            "description": "The file name encoded to remove characters that are invalid in URL paths."
          },
          {
            "name": "encoding",
            "type": {
              "name": "String"
            },
            "description": "The gist file encoding."
          },
          {
            "name": "extension",
            "type": {
              "name": "String"
            },
            "description": "The file extension from the file name."
          },
          {
            "name": "isImage",
            "type": {
              "name": null
            },
            "description": "Indicates if this file is an image."
          },
          {
            "name": "isTruncated",
            "type": {
              "name": null
            },
            "description": "Whether the file's contents were truncated."
          },
          {
            "name": "language",
            "type": {
              "name": "Language"
            },
            "description": "The programming language this file is written in."
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The gist file name."
          },
          {
            "name": "size",
            "type": {
              "name": "Int"
            },
            "description": "The gist file size in bytes."
          },
          {
            "name": "text",
            "type": {
              "name": "String"
            },
            "description": "UTF8 text data or null if the file is binary"
          }
        ]
      },
      {
        "name": "GistOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for gist connections",
        "fields": null
      },
      {
        "name": "GistOrderField",
        "kind": "ENUM",
        "description": "Properties by which gist connections can be ordered.",
        "fields": null
      },
      {
        "name": "GistPrivacy",
        "kind": "ENUM",
        "description": "The privacy of a Gist",
        "fields": null
      },
      {
        "name": "GitActor",
        "kind": "OBJECT",
        "description": "Represents an actor in a Git commit (ie. an author or committer).",
        "fields": [
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the author's public avatar."
          },
          {
            "name": "date",
            "type": {
              "name": "GitTimestamp"
            },
            "description": "The timestamp of the Git action (authoring or committing)."
          },
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The email in the Git commit."
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The name in the Git commit."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The GitHub user corresponding to the email field. Null if no such user exists."
          }
        ]
      },
      {
        "name": "GitActorConnection",
        "kind": "OBJECT",
        "description": "The connection type for GitActor.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "GitActorEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "GitActor"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "GitHubMetadata",
        "kind": "OBJECT",
        "description": "Represents information about the GitHub instance.",
        "fields": [
          {
            "name": "gitHubServicesSha",
            "type": {
              "name": null
            },
            "description": "Returns a String that's a SHA of `github-services`"
          },
          {
            "name": "gitIpAddresses",
            "type": {
              "name": null
            },
            "description": "IP addresses that users connect to for git operations"
          },
          {
            "name": "githubEnterpriseImporterIpAddresses",
            "type": {
              "name": null
            },
            "description": "IP addresses that GitHub Enterprise Importer uses for outbound connections"
          },
          {
            "name": "hookIpAddresses",
            "type": {
              "name": null
            },
            "description": "IP addresses that service hooks are sent from"
          },
          {
            "name": "importerIpAddresses",
            "type": {
              "name": null
            },
            "description": "IP addresses that the importer connects from"
          },
          {
            "name": "isPasswordAuthenticationVerifiable",
            "type": {
              "name": null
            },
            "description": "Whether or not users are verified"
          },
          {
            "name": "pagesIpAddresses",
            "type": {
              "name": null
            },
            "description": "IP addresses for GitHub Pages' A records"
          }
        ]
      },
      {
        "name": "GitObject",
        "kind": "INTERFACE",
        "description": "Represents a Git object.",
        "fields": [
          {
            "name": "abbreviatedOid",
            "type": {
              "name": null
            },
            "description": "An abbreviated version of the Git object ID"
          },
          {
            "name": "commitResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this Git object"
          },
          {
            "name": "commitUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this Git object"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the GitObject object"
          },
          {
            "name": "oid",
            "type": {
              "name": null
            },
            "description": "The Git object ID"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The Repository the Git object belongs to"
          }
        ]
      },
      {
        "name": "GitObjectID",
        "kind": "SCALAR",
        "description": "A Git object ID.",
        "fields": null
      },
      {
        "name": "GitRefname",
        "kind": "SCALAR",
        "description": "A fully qualified reference name (e.g. `refs/heads/master`).",
        "fields": null
      },
      {
        "name": "GitSSHRemote",
        "kind": "SCALAR",
        "description": "Git SSH string",
        "fields": null
      },
      {
        "name": "GitSignature",
        "kind": "INTERFACE",
        "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
        "fields": [
          {
            "name": "email",
            "type": {
              "name": null
            },
            "description": "Email used to sign this object."
          },
          {
            "name": "isValid",
            "type": {
              "name": null
            },
            "description": "True if the signature is valid and verified by GitHub."
          },
          {
            "name": "payload",
            "type": {
              "name": null
            },
            "description": "Payload for GPG signing object. Raw ODB object without the signature header."
          },
          {
            "name": "signature",
            "type": {
              "name": null
            },
            "description": "ASCII-armored signature header from object."
          },
          {
            "name": "signer",
            "type": {
              "name": "User"
            },
            "description": "GitHub user corresponding to the email signing this commit."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."
          },
          {
            "name": "verifiedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The date the signature was verified, if valid"
          },
          {
            "name": "wasSignedByGitHub",
            "type": {
              "name": null
            },
            "description": "True if the signature was made with GitHub's signing key."
          }
        ]
      },
      {
        "name": "GitSignatureState",
        "kind": "ENUM",
        "description": "The state of a Git signature.",
        "fields": null
      },
      {
        "name": "GitTimestamp",
        "kind": "SCALAR",
        "description": "An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.",
        "fields": null
      },
      {
        "name": "GpgSignature",
        "kind": "OBJECT",
        "description": "Represents a GPG signature on a Commit or Tag.",
        "fields": [
          {
            "name": "email",
            "type": {
              "name": null
            },
            "description": "Email used to sign this object."
          },
          {
            "name": "isValid",
            "type": {
              "name": null
            },
            "description": "True if the signature is valid and verified by GitHub."
          },
          {
            "name": "keyId",
            "type": {
              "name": "String"
            },
            "description": "Hex-encoded ID of the key that signed this object."
          },
          {
            "name": "payload",
            "type": {
              "name": null
            },
            "description": "Payload for GPG signing object. Raw ODB object without the signature header."
          },
          {
            "name": "signature",
            "type": {
              "name": null
            },
            "description": "ASCII-armored signature header from object."
          },
          {
            "name": "signer",
            "type": {
              "name": "User"
            },
            "description": "GitHub user corresponding to the email signing this commit."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."
          },
          {
            "name": "verifiedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The date the signature was verified, if valid"
          },
          {
            "name": "wasSignedByGitHub",
            "type": {
              "name": null
            },
            "description": "True if the signature was made with GitHub's signing key."
          }
        ]
      },
      {
        "name": "GrantEnterpriseOrganizationsMigratorRoleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of GrantEnterpriseOrganizationsMigratorRole",
        "fields": null
      },
      {
        "name": "GrantEnterpriseOrganizationsMigratorRolePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "organizations",
            "type": {
              "name": "OrganizationConnection"
            },
            "description": "The organizations that had the migrator role applied to for the given user."
          }
        ]
      },
      {
        "name": "GrantMigratorRoleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of GrantMigratorRole",
        "fields": null
      },
      {
        "name": "GrantMigratorRolePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of GrantMigratorRole.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "success",
            "type": {
              "name": "Boolean"
            },
            "description": "Did the operation succeed?"
          }
        ]
      },
      {
        "name": "HTML",
        "kind": "SCALAR",
        "description": "A string containing HTML code.",
        "fields": null
      },
      {
        "name": "HeadRefDeletedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'head_ref_deleted' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "headRef",
            "type": {
              "name": "Ref"
            },
            "description": "Identifies the Ref associated with the `head_ref_deleted` event."
          },
          {
            "name": "headRefName",
            "type": {
              "name": null
            },
            "description": "Identifies the name of the Ref associated with the `head_ref_deleted` event."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the HeadRefDeletedEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "HeadRefForcePushedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'head_ref_force_pushed' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "afterCommit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the after commit SHA for the 'head_ref_force_pushed' event."
          },
          {
            "name": "beforeCommit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the before commit SHA for the 'head_ref_force_pushed' event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the HeadRefForcePushedEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "Identifies the fully qualified ref name for the 'head_ref_force_pushed' event."
          }
        ]
      },
      {
        "name": "HeadRefRestoredEvent",
        "kind": "OBJECT",
        "description": "Represents a 'head_ref_restored' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the HeadRefRestoredEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          }
        ]
      },
      {
        "name": "Hovercard",
        "kind": "OBJECT",
        "description": "Detail needed to display a hovercard for a user",
        "fields": [
          {
            "name": "contexts",
            "type": {
              "name": null
            },
            "description": "Each of the contexts for this hovercard"
          }
        ]
      },
      {
        "name": "HovercardContext",
        "kind": "INTERFACE",
        "description": "An individual line of a hovercard",
        "fields": [
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "A string describing this context"
          },
          {
            "name": "octicon",
            "type": {
              "name": null
            },
            "description": "An octicon to accompany this context"
          }
        ]
      },
      {
        "name": "ID",
        "kind": "SCALAR",
        "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
        "fields": null
      },
      {
        "name": "IdentityProviderConfigurationState",
        "kind": "ENUM",
        "description": "The possible states in which authentication can be configured with an identity provider.",
        "fields": null
      },
      {
        "name": "ImportProjectInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ImportProject",
        "fields": null
      },
      {
        "name": "ImportProjectPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ImportProject.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "The new Project!"
          }
        ]
      },
      {
        "name": "Int",
        "kind": "SCALAR",
        "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
        "fields": null
      },
      {
        "name": "InviteEnterpriseAdminInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of InviteEnterpriseAdmin",
        "fields": null
      },
      {
        "name": "InviteEnterpriseAdminPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of InviteEnterpriseAdmin.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "invitation",
            "type": {
              "name": "EnterpriseAdministratorInvitation"
            },
            "description": "The created enterprise administrator invitation."
          }
        ]
      },
      {
        "name": "InviteEnterpriseMemberInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of InviteEnterpriseMember",
        "fields": null
      },
      {
        "name": "InviteEnterpriseMemberPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of InviteEnterpriseMember.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "invitation",
            "type": {
              "name": "EnterpriseMemberInvitation"
            },
            "description": "The created enterprise member invitation."
          }
        ]
      },
      {
        "name": "IpAllowListEnabledSettingValue",
        "kind": "ENUM",
        "description": "The possible values for the IP allow list enabled setting.",
        "fields": null
      },
      {
        "name": "IpAllowListEntry",
        "kind": "OBJECT",
        "description": "An IP address or range of addresses that is allowed to access an owner's resources.",
        "fields": [
          {
            "name": "allowListValue",
            "type": {
              "name": null
            },
            "description": "A single IP address or range of IP addresses in CIDR notation."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the IpAllowListEntry object"
          },
          {
            "name": "isActive",
            "type": {
              "name": null
            },
            "description": "Whether the entry is currently active."
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The name of the IP allow list entry."
          },
          {
            "name": "owner",
            "type": {
              "name": null
            },
            "description": "The owner of the IP allow list entry."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "IpAllowListEntryConnection",
        "kind": "OBJECT",
        "description": "The connection type for IpAllowListEntry.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "IpAllowListEntryEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "IpAllowListEntry"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "IpAllowListEntryOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for IP allow list entry connections.",
        "fields": null
      },
      {
        "name": "IpAllowListEntryOrderField",
        "kind": "ENUM",
        "description": "Properties by which IP allow list entry connections can be ordered.",
        "fields": null
      },
      {
        "name": "IpAllowListForInstalledAppsEnabledSettingValue",
        "kind": "ENUM",
        "description": "The possible values for the IP allow list configuration for installed GitHub Apps setting.",
        "fields": null
      },
      {
        "name": "IpAllowListOwner",
        "kind": "UNION",
        "description": "Types that can own an IP allow list.",
        "fields": null
      },
      {
        "name": "Issue",
        "kind": "OBJECT",
        "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
        "fields": [
          {
            "name": "activeLockReason",
            "type": {
              "name": "LockReason"
            },
            "description": "Reason that the conversation was locked."
          },
          {
            "name": "assignees",
            "type": {
              "name": null
            },
            "description": "A list of Users assigned to this object."
          },
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "Identifies the body of the issue."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyResourcePath",
            "type": {
              "name": null
            },
            "description": "The http path for this issue body"
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "Identifies the body of the issue rendered to text."
          },
          {
            "name": "bodyUrl",
            "type": {
              "name": null
            },
            "description": "The http URL for this issue body"
          },
          {
            "name": "closed",
            "type": {
              "name": null
            },
            "description": "Indicates if the object is closed (definition of closed may depend on type)"
          },
          {
            "name": "closedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the object was closed."
          },
          {
            "name": "closedByPullRequestsReferences",
            "type": {
              "name": "PullRequestConnection"
            },
            "description": "List of open pull requests referenced from this issue"
          },
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "A list of comments associated with the Issue."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "hovercard",
            "type": {
              "name": null
            },
            "description": "The hovercard information for this issue"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Issue object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isPinned",
            "type": {
              "name": "Boolean"
            },
            "description": "Indicates whether or not this issue is currently pinned to the repository issues list"
          },
          {
            "name": "isReadByViewer",
            "type": {
              "name": "Boolean"
            },
            "description": "Is this issue read by the viewer"
          },
          {
            "name": "labels",
            "type": {
              "name": "LabelConnection"
            },
            "description": "A list of labels associated with the object."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "linkedBranches",
            "type": {
              "name": null
            },
            "description": "Branches linked to this issue."
          },
          {
            "name": "locked",
            "type": {
              "name": null
            },
            "description": "`true` if the object is locked"
          },
          {
            "name": "milestone",
            "type": {
              "name": "Milestone"
            },
            "description": "Identifies the milestone associated with the issue."
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "Identifies the issue number."
          },
          {
            "name": "parent",
            "type": {
              "name": "Issue"
            },
            "description": "The parent entity of the issue."
          },
          {
            "name": "participants",
            "type": {
              "name": null
            },
            "description": "A list of Users that are participating in the Issue conversation."
          },
          {
            "name": "projectCards",
            "type": {
              "name": null
            },
            "description": "List of project cards associated with this issue."
          },
          {
            "name": "projectItems",
            "type": {
              "name": null
            },
            "description": "List of project items associated with this issue."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "Find a project by number."
          },
          {
            "name": "projectsV2",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this issue"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "Identifies the state of the issue."
          },
          {
            "name": "stateReason",
            "type": {
              "name": "IssueStateReason"
            },
            "description": "Identifies the reason for the issue state."
          },
          {
            "name": "subIssues",
            "type": {
              "name": null
            },
            "description": "A list of sub-issues associated with the Issue."
          },
          {
            "name": "subIssuesSummary",
            "type": {
              "name": null
            },
            "description": "Summary of the state of an issue's sub-issues"
          },
          {
            "name": "timelineItems",
            "type": {
              "name": null
            },
            "description": "A list of events, comments, commits, etc. associated with the issue."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "Identifies the issue title."
          },
          {
            "name": "titleHTML",
            "type": {
              "name": null
            },
            "description": "Identifies the issue title rendered to HTML."
          },
          {
            "name": "trackedInIssues",
            "type": {
              "name": null
            },
            "description": "A list of issues that track this issue"
          },
          {
            "name": "trackedIssues",
            "type": {
              "name": null
            },
            "description": "A list of issues tracked inside the current issue"
          },
          {
            "name": "trackedIssuesCount",
            "type": {
              "name": null
            },
            "description": "The number of tracked issues for this issue"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this issue"
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanClose",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be closed by the viewer."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanLabel",
            "type": {
              "name": null
            },
            "description": "Indicates if the viewer can edit labels for this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanReopen",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be reopened by the viewer."
          },
          {
            "name": "viewerCanSubscribe",
            "type": {
              "name": null
            },
            "description": "Check if the viewer is able to change their subscription status for the repository."
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          },
          {
            "name": "viewerSubscription",
            "type": {
              "name": "SubscriptionState"
            },
            "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."
          },
          {
            "name": "viewerThreadSubscriptionFormAction",
            "type": {
              "name": "ThreadSubscriptionFormAction"
            },
            "description": "Identifies the viewer's thread subscription form action."
          },
          {
            "name": "viewerThreadSubscriptionStatus",
            "type": {
              "name": "ThreadSubscriptionState"
            },
            "description": "Identifies the viewer's thread subscription status."
          }
        ]
      },
      {
        "name": "IssueClosedStateReason",
        "kind": "ENUM",
        "description": "The possible state reasons of a closed issue.",
        "fields": null
      },
      {
        "name": "IssueComment",
        "kind": "OBJECT",
        "description": "Represents a comment on an Issue.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body as Markdown."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the IssueComment object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isMinimized",
            "type": {
              "name": null
            },
            "description": "Returns whether or not a comment has been minimized."
          },
          {
            "name": "issue",
            "type": {
              "name": null
            },
            "description": "Identifies the issue associated with the comment."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "minimizedReason",
            "type": {
              "name": "String"
            },
            "description": "Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "Returns the pull request associated with the comment, if this comment was made on a\npull request.\n"
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this issue comment"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this issue comment"
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanMinimize",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can minimize this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          }
        ]
      },
      {
        "name": "IssueCommentConnection",
        "kind": "OBJECT",
        "description": "The connection type for IssueComment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "IssueCommentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "IssueComment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "IssueCommentOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of issue comments can be ordered upon return.",
        "fields": null
      },
      {
        "name": "IssueCommentOrderField",
        "kind": "ENUM",
        "description": "Properties by which issue comment connections can be ordered.",
        "fields": null
      },
      {
        "name": "IssueConnection",
        "kind": "OBJECT",
        "description": "The connection type for Issue.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "IssueContributionsByRepository",
        "kind": "OBJECT",
        "description": "This aggregates issues opened by a user within one repository.",
        "fields": [
          {
            "name": "contributions",
            "type": {
              "name": null
            },
            "description": "The issue contributions."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository in which the issues were opened."
          }
        ]
      },
      {
        "name": "IssueEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Issue"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "IssueFilters",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which to filter lists of issues.",
        "fields": null
      },
      {
        "name": "IssueOrPullRequest",
        "kind": "UNION",
        "description": "Used for return value of Repository.issueOrPullRequest.",
        "fields": null
      },
      {
        "name": "IssueOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of issues can be ordered upon return.",
        "fields": null
      },
      {
        "name": "IssueOrderField",
        "kind": "ENUM",
        "description": "Properties by which issue connections can be ordered.",
        "fields": null
      },
      {
        "name": "IssueState",
        "kind": "ENUM",
        "description": "The possible states of an issue.",
        "fields": null
      },
      {
        "name": "IssueStateReason",
        "kind": "ENUM",
        "description": "The possible state reasons of an issue.",
        "fields": null
      },
      {
        "name": "IssueTemplate",
        "kind": "OBJECT",
        "description": "A repository issue template.",
        "fields": [
          {
            "name": "about",
            "type": {
              "name": "String"
            },
            "description": "The template purpose."
          },
          {
            "name": "assignees",
            "type": {
              "name": null
            },
            "description": "The suggested assignees."
          },
          {
            "name": "body",
            "type": {
              "name": "String"
            },
            "description": "The suggested issue body."
          },
          {
            "name": "filename",
            "type": {
              "name": null
            },
            "description": "The template filename."
          },
          {
            "name": "labels",
            "type": {
              "name": "LabelConnection"
            },
            "description": "The suggested issue labels"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The template name."
          },
          {
            "name": "title",
            "type": {
              "name": "String"
            },
            "description": "The suggested issue title."
          }
        ]
      },
      {
        "name": "IssueTimelineConnection",
        "kind": "OBJECT",
        "description": "The connection type for IssueTimelineItem.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "IssueTimelineItem",
        "kind": "UNION",
        "description": "An item in an issue timeline",
        "fields": null
      },
      {
        "name": "IssueTimelineItemEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "IssueTimelineItem"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "IssueTimelineItems",
        "kind": "UNION",
        "description": "An item in an issue timeline",
        "fields": null
      },
      {
        "name": "IssueTimelineItemsConnection",
        "kind": "OBJECT",
        "description": "The connection type for IssueTimelineItems.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "filteredCount",
            "type": {
              "name": null
            },
            "description": "Identifies the count of items after applying `before` and `after` filters."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageCount",
            "type": {
              "name": null
            },
            "description": "Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the timeline was last updated."
          }
        ]
      },
      {
        "name": "IssueTimelineItemsEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "IssueTimelineItems"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "IssueTimelineItemsItemType",
        "kind": "ENUM",
        "description": "The possible item types found in a timeline.",
        "fields": null
      },
      {
        "name": "JoinedGitHubContribution",
        "kind": "OBJECT",
        "description": "Represents a user signing up for a GitHub account.",
        "fields": [
          {
            "name": "isRestricted",
            "type": {
              "name": null
            },
            "description": "Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.\n"
          },
          {
            "name": "occurredAt",
            "type": {
              "name": null
            },
            "description": "When this contribution was made."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this contribution."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this contribution."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made this contribution.\n"
          }
        ]
      },
      {
        "name": "Label",
        "kind": "OBJECT",
        "description": "A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.",
        "fields": [
          {
            "name": "color",
            "type": {
              "name": null
            },
            "description": "Identifies the label color."
          },
          {
            "name": "createdAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the label was created."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "A brief description of this label."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Label object"
          },
          {
            "name": "isDefault",
            "type": {
              "name": null
            },
            "description": "Indicates whether or not this is a default label."
          },
          {
            "name": "issues",
            "type": {
              "name": null
            },
            "description": "A list of issues associated with this label."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "Identifies the label name."
          },
          {
            "name": "pullRequests",
            "type": {
              "name": null
            },
            "description": "A list of pull requests associated with this label."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this label."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this label."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the label was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this label."
          }
        ]
      },
      {
        "name": "LabelConnection",
        "kind": "OBJECT",
        "description": "The connection type for Label.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "LabelEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Label"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "LabelOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of labels can be ordered upon return.",
        "fields": null
      },
      {
        "name": "LabelOrderField",
        "kind": "ENUM",
        "description": "Properties by which label connections can be ordered.",
        "fields": null
      },
      {
        "name": "Labelable",
        "kind": "INTERFACE",
        "description": "An object that can have labels assigned to it.",
        "fields": [
          {
            "name": "labels",
            "type": {
              "name": "LabelConnection"
            },
            "description": "A list of labels associated with the object."
          },
          {
            "name": "viewerCanLabel",
            "type": {
              "name": null
            },
            "description": "Indicates if the viewer can edit labels for this object."
          }
        ]
      },
      {
        "name": "LabeledEvent",
        "kind": "OBJECT",
        "description": "Represents a 'labeled' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the LabeledEvent object"
          },
          {
            "name": "label",
            "type": {
              "name": null
            },
            "description": "Identifies the label associated with the 'labeled' event."
          },
          {
            "name": "labelable",
            "type": {
              "name": null
            },
            "description": "Identifies the `Labelable` associated with the event."
          }
        ]
      },
      {
        "name": "Language",
        "kind": "OBJECT",
        "description": "Represents a given language found in repositories.",
        "fields": [
          {
            "name": "color",
            "type": {
              "name": "String"
            },
            "description": "The color defined for the current language."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Language object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the current language."
          }
        ]
      },
      {
        "name": "LanguageConnection",
        "kind": "OBJECT",
        "description": "A list of languages associated with the parent.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          },
          {
            "name": "totalSize",
            "type": {
              "name": null
            },
            "description": "The total size in bytes of files written in that language."
          }
        ]
      },
      {
        "name": "LanguageEdge",
        "kind": "OBJECT",
        "description": "Represents the language of a repository.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "node",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "size",
            "type": {
              "name": null
            },
            "description": "The number of bytes of code written in the language."
          }
        ]
      },
      {
        "name": "LanguageOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for language connections.",
        "fields": null
      },
      {
        "name": "LanguageOrderField",
        "kind": "ENUM",
        "description": "Properties by which language connections can be ordered.",
        "fields": null
      },
      {
        "name": "License",
        "kind": "OBJECT",
        "description": "A repository's open source license",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The full text of the license"
          },
          {
            "name": "conditions",
            "type": {
              "name": null
            },
            "description": "The conditions set by the license"
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "A human-readable description of the license"
          },
          {
            "name": "featured",
            "type": {
              "name": null
            },
            "description": "Whether the license should be featured"
          },
          {
            "name": "hidden",
            "type": {
              "name": null
            },
            "description": "Whether the license should be displayed in license pickers"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the License object"
          },
          {
            "name": "implementation",
            "type": {
              "name": "String"
            },
            "description": "Instructions on how to implement the license"
          },
          {
            "name": "key",
            "type": {
              "name": null
            },
            "description": "The lowercased SPDX ID of the license"
          },
          {
            "name": "limitations",
            "type": {
              "name": null
            },
            "description": "The limitations set by the license"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The license full name specified by <https://spdx.org/licenses>"
          },
          {
            "name": "nickname",
            "type": {
              "name": "String"
            },
            "description": "Customary short name if applicable (e.g, GPLv3)"
          },
          {
            "name": "permissions",
            "type": {
              "name": null
            },
            "description": "The permissions set by the license"
          },
          {
            "name": "pseudoLicense",
            "type": {
              "name": null
            },
            "description": "Whether the license is a pseudo-license placeholder (e.g., other, no-license)"
          },
          {
            "name": "spdxId",
            "type": {
              "name": "String"
            },
            "description": "Short identifier specified by <https://spdx.org/licenses>"
          },
          {
            "name": "url",
            "type": {
              "name": "URI"
            },
            "description": "URL to the license on <https://choosealicense.com>"
          }
        ]
      },
      {
        "name": "LicenseRule",
        "kind": "OBJECT",
        "description": "Describes a License's conditions, permissions, and limitations",
        "fields": [
          {
            "name": "description",
            "type": {
              "name": null
            },
            "description": "A description of the rule"
          },
          {
            "name": "key",
            "type": {
              "name": null
            },
            "description": "The machine-readable rule key"
          },
          {
            "name": "label",
            "type": {
              "name": null
            },
            "description": "The human-readable rule label"
          }
        ]
      },
      {
        "name": "LinkProjectV2ToRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of LinkProjectV2ToRepository",
        "fields": null
      },
      {
        "name": "LinkProjectV2ToRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of LinkProjectV2ToRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository the project is linked to."
          }
        ]
      },
      {
        "name": "LinkProjectV2ToTeamInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of LinkProjectV2ToTeam",
        "fields": null
      },
      {
        "name": "LinkProjectV2ToTeamPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of LinkProjectV2ToTeam.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team the project is linked to"
          }
        ]
      },
      {
        "name": "LinkRepositoryToProjectInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of LinkRepositoryToProject",
        "fields": null
      },
      {
        "name": "LinkRepositoryToProjectPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of LinkRepositoryToProject.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "The linked Project."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The linked Repository."
          }
        ]
      },
      {
        "name": "LinkedBranch",
        "kind": "OBJECT",
        "description": "A branch linked to an issue.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the LinkedBranch object"
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "The branch's ref."
          }
        ]
      },
      {
        "name": "LinkedBranchConnection",
        "kind": "OBJECT",
        "description": "A list of branches linked to an issue.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "LinkedBranchEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "LinkedBranch"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "LockLockableInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of LockLockable",
        "fields": null
      },
      {
        "name": "LockLockablePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of LockLockable.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "lockedRecord",
            "type": {
              "name": "Lockable"
            },
            "description": "The item that was locked."
          }
        ]
      },
      {
        "name": "LockReason",
        "kind": "ENUM",
        "description": "The possible reasons that an issue or pull request was locked.",
        "fields": null
      },
      {
        "name": "Lockable",
        "kind": "INTERFACE",
        "description": "An object that can be locked.",
        "fields": [
          {
            "name": "activeLockReason",
            "type": {
              "name": "LockReason"
            },
            "description": "Reason that the conversation was locked."
          },
          {
            "name": "locked",
            "type": {
              "name": null
            },
            "description": "`true` if the object is locked"
          }
        ]
      },
      {
        "name": "LockedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'locked' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the LockedEvent object"
          },
          {
            "name": "lockReason",
            "type": {
              "name": "LockReason"
            },
            "description": "Reason that the conversation was locked (optional)."
          },
          {
            "name": "lockable",
            "type": {
              "name": null
            },
            "description": "Object that was locked."
          }
        ]
      },
      {
        "name": "Mannequin",
        "kind": "OBJECT",
        "description": "A placeholder user for attribution of imported data on GitHub.",
        "fields": [
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the GitHub App's public avatar."
          },
          {
            "name": "claimant",
            "type": {
              "name": "User"
            },
            "description": "The user that has claimed the data attributed to this mannequin."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The mannequin's email on the source instance."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Mannequin object"
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "The username of the actor."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTML path to this resource."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The URL to this resource."
          }
        ]
      },
      {
        "name": "MannequinConnection",
        "kind": "OBJECT",
        "description": "A list of mannequins.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "MannequinEdge",
        "kind": "OBJECT",
        "description": "Represents a mannequin.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Mannequin"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "MannequinOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for mannequins.",
        "fields": null
      },
      {
        "name": "MannequinOrderField",
        "kind": "ENUM",
        "description": "Properties by which mannequins can be ordered.",
        "fields": null
      },
      {
        "name": "MarkDiscussionCommentAsAnswerInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MarkDiscussionCommentAsAnswer",
        "fields": null
      },
      {
        "name": "MarkDiscussionCommentAsAnswerPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MarkDiscussionCommentAsAnswer.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion that includes the chosen comment."
          }
        ]
      },
      {
        "name": "MarkFileAsViewedInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MarkFileAsViewed",
        "fields": null
      },
      {
        "name": "MarkFileAsViewedPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MarkFileAsViewed.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The updated pull request."
          }
        ]
      },
      {
        "name": "MarkProjectV2AsTemplateInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MarkProjectV2AsTemplate",
        "fields": null
      },
      {
        "name": "MarkProjectV2AsTemplatePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MarkProjectV2AsTemplate.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The project."
          }
        ]
      },
      {
        "name": "MarkPullRequestReadyForReviewInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MarkPullRequestReadyForReview",
        "fields": null
      },
      {
        "name": "MarkPullRequestReadyForReviewPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MarkPullRequestReadyForReview.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request that is ready for review."
          }
        ]
      },
      {
        "name": "MarkedAsDuplicateEvent",
        "kind": "OBJECT",
        "description": "Represents a 'marked_as_duplicate' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "canonical",
            "type": {
              "name": "IssueOrPullRequest"
            },
            "description": "The authoritative issue or pull request which has been duplicated by another."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "duplicate",
            "type": {
              "name": "IssueOrPullRequest"
            },
            "description": "The issue or pull request which has been marked as a duplicate of another."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MarkedAsDuplicateEvent object"
          },
          {
            "name": "isCrossRepository",
            "type": {
              "name": null
            },
            "description": "Canonical and duplicate belong to different repositories."
          }
        ]
      },
      {
        "name": "MarketplaceCategory",
        "kind": "OBJECT",
        "description": "A public description of a Marketplace category.",
        "fields": [
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The category's description."
          },
          {
            "name": "howItWorks",
            "type": {
              "name": "String"
            },
            "description": "The technical description of how apps listed in this category work with GitHub."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MarketplaceCategory object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The category's name."
          },
          {
            "name": "primaryListingCount",
            "type": {
              "name": null
            },
            "description": "How many Marketplace listings have this as their primary category."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this Marketplace category."
          },
          {
            "name": "secondaryListingCount",
            "type": {
              "name": null
            },
            "description": "How many Marketplace listings have this as their secondary category."
          },
          {
            "name": "slug",
            "type": {
              "name": null
            },
            "description": "The short name of the category used in its URL."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this Marketplace category."
          }
        ]
      },
      {
        "name": "MarketplaceListing",
        "kind": "OBJECT",
        "description": "A listing in the GitHub integration marketplace.",
        "fields": [
          {
            "name": "app",
            "type": {
              "name": "App"
            },
            "description": "The GitHub App this listing represents."
          },
          {
            "name": "companyUrl",
            "type": {
              "name": "URI"
            },
            "description": "URL to the listing owner's company site."
          },
          {
            "name": "configurationResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for configuring access to the listing's integration or OAuth app"
          },
          {
            "name": "configurationUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for configuring access to the listing's integration or OAuth app"
          },
          {
            "name": "documentationUrl",
            "type": {
              "name": "URI"
            },
            "description": "URL to the listing's documentation."
          },
          {
            "name": "extendedDescription",
            "type": {
              "name": "String"
            },
            "description": "The listing's detailed description."
          },
          {
            "name": "extendedDescriptionHTML",
            "type": {
              "name": null
            },
            "description": "The listing's detailed description rendered to HTML."
          },
          {
            "name": "fullDescription",
            "type": {
              "name": null
            },
            "description": "The listing's introductory description."
          },
          {
            "name": "fullDescriptionHTML",
            "type": {
              "name": null
            },
            "description": "The listing's introductory description rendered to HTML."
          },
          {
            "name": "hasPublishedFreeTrialPlans",
            "type": {
              "name": null
            },
            "description": "Does this listing have any plans with a free trial?"
          },
          {
            "name": "hasTermsOfService",
            "type": {
              "name": null
            },
            "description": "Does this listing have a terms of service link?"
          },
          {
            "name": "hasVerifiedOwner",
            "type": {
              "name": null
            },
            "description": "Whether the creator of the app is a verified org"
          },
          {
            "name": "howItWorks",
            "type": {
              "name": "String"
            },
            "description": "A technical description of how this app works with GitHub."
          },
          {
            "name": "howItWorksHTML",
            "type": {
              "name": null
            },
            "description": "The listing's technical description rendered to HTML."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MarketplaceListing object"
          },
          {
            "name": "installationUrl",
            "type": {
              "name": "URI"
            },
            "description": "URL to install the product to the viewer's account or organization."
          },
          {
            "name": "installedForViewer",
            "type": {
              "name": null
            },
            "description": "Whether this listing's app has been installed for the current viewer"
          },
          {
            "name": "isArchived",
            "type": {
              "name": null
            },
            "description": "Whether this listing has been removed from the Marketplace."
          },
          {
            "name": "isDraft",
            "type": {
              "name": null
            },
            "description": "Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace."
          },
          {
            "name": "isPaid",
            "type": {
              "name": null
            },
            "description": "Whether the product this listing represents is available as part of a paid plan."
          },
          {
            "name": "isPublic",
            "type": {
              "name": null
            },
            "description": "Whether this listing has been approved for display in the Marketplace."
          },
          {
            "name": "isRejected",
            "type": {
              "name": null
            },
            "description": "Whether this listing has been rejected by GitHub for display in the Marketplace."
          },
          {
            "name": "isUnverified",
            "type": {
              "name": null
            },
            "description": "Whether this listing has been approved for unverified display in the Marketplace."
          },
          {
            "name": "isUnverifiedPending",
            "type": {
              "name": null
            },
            "description": "Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace."
          },
          {
            "name": "isVerificationPendingFromDraft",
            "type": {
              "name": null
            },
            "description": "Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace."
          },
          {
            "name": "isVerificationPendingFromUnverified",
            "type": {
              "name": null
            },
            "description": "Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace."
          },
          {
            "name": "isVerified",
            "type": {
              "name": null
            },
            "description": "Whether this listing has been approved for verified display in the Marketplace."
          },
          {
            "name": "logoBackgroundColor",
            "type": {
              "name": null
            },
            "description": "The hex color code, without the leading '#', for the logo background."
          },
          {
            "name": "logoUrl",
            "type": {
              "name": "URI"
            },
            "description": "URL for the listing's logo image."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The listing's full name."
          },
          {
            "name": "normalizedShortDescription",
            "type": {
              "name": null
            },
            "description": "The listing's very short description without a trailing period or ampersands."
          },
          {
            "name": "pricingUrl",
            "type": {
              "name": "URI"
            },
            "description": "URL to the listing's detailed pricing."
          },
          {
            "name": "primaryCategory",
            "type": {
              "name": null
            },
            "description": "The category that best describes the listing."
          },
          {
            "name": "privacyPolicyUrl",
            "type": {
              "name": null
            },
            "description": "URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for the Marketplace listing."
          },
          {
            "name": "screenshotUrls",
            "type": {
              "name": null
            },
            "description": "The URLs for the listing's screenshots."
          },
          {
            "name": "secondaryCategory",
            "type": {
              "name": "MarketplaceCategory"
            },
            "description": "An alternate category that describes the listing."
          },
          {
            "name": "shortDescription",
            "type": {
              "name": null
            },
            "description": "The listing's very short description."
          },
          {
            "name": "slug",
            "type": {
              "name": null
            },
            "description": "The short name of the listing used in its URL."
          },
          {
            "name": "statusUrl",
            "type": {
              "name": "URI"
            },
            "description": "URL to the listing's status page."
          },
          {
            "name": "supportEmail",
            "type": {
              "name": "String"
            },
            "description": "An email address for support for this listing's app."
          },
          {
            "name": "supportUrl",
            "type": {
              "name": null
            },
            "description": "Either a URL or an email address for support for this listing's app, may return an empty string for listings that do not require a support URL."
          },
          {
            "name": "termsOfServiceUrl",
            "type": {
              "name": "URI"
            },
            "description": "URL to the listing's terms of service."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for the Marketplace listing."
          },
          {
            "name": "viewerCanAddPlans",
            "type": {
              "name": null
            },
            "description": "Can the current viewer add plans for this Marketplace listing."
          },
          {
            "name": "viewerCanApprove",
            "type": {
              "name": null
            },
            "description": "Can the current viewer approve this Marketplace listing."
          },
          {
            "name": "viewerCanDelist",
            "type": {
              "name": null
            },
            "description": "Can the current viewer delist this Marketplace listing."
          },
          {
            "name": "viewerCanEdit",
            "type": {
              "name": null
            },
            "description": "Can the current viewer edit this Marketplace listing."
          },
          {
            "name": "viewerCanEditCategories",
            "type": {
              "name": null
            },
            "description": "Can the current viewer edit the primary and secondary category of this\nMarketplace listing.\n"
          },
          {
            "name": "viewerCanEditPlans",
            "type": {
              "name": null
            },
            "description": "Can the current viewer edit the plans for this Marketplace listing."
          },
          {
            "name": "viewerCanRedraft",
            "type": {
              "name": null
            },
            "description": "Can the current viewer return this Marketplace listing to draft state\nso it becomes editable again.\n"
          },
          {
            "name": "viewerCanReject",
            "type": {
              "name": null
            },
            "description": "Can the current viewer reject this Marketplace listing by returning it to\nan editable draft state or rejecting it entirely.\n"
          },
          {
            "name": "viewerCanRequestApproval",
            "type": {
              "name": null
            },
            "description": "Can the current viewer request this listing be reviewed for display in\nthe Marketplace as verified.\n"
          },
          {
            "name": "viewerHasPurchased",
            "type": {
              "name": null
            },
            "description": "Indicates whether the current user has an active subscription to this Marketplace listing.\n"
          },
          {
            "name": "viewerHasPurchasedForAllOrganizations",
            "type": {
              "name": null
            },
            "description": "Indicates if the current user has purchased a subscription to this Marketplace listing\nfor all of the organizations the user owns.\n"
          },
          {
            "name": "viewerIsListingAdmin",
            "type": {
              "name": null
            },
            "description": "Does the current viewer role allow them to administer this Marketplace listing.\n"
          }
        ]
      },
      {
        "name": "MarketplaceListingConnection",
        "kind": "OBJECT",
        "description": "Look up Marketplace Listings",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "MarketplaceListingEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "MarketplaceListing"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "MaxFilePathLengthParameters",
        "kind": "OBJECT",
        "description": "Prevent commits that include file paths that exceed a specified character limit from being pushed to the commit graph.",
        "fields": [
          {
            "name": "maxFilePathLength",
            "type": {
              "name": null
            },
            "description": "The maximum amount of characters allowed in file paths"
          }
        ]
      },
      {
        "name": "MaxFilePathLengthParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Prevent commits that include file paths that exceed a specified character limit from being pushed to the commit graph.",
        "fields": null
      },
      {
        "name": "MaxFileSizeParameters",
        "kind": "OBJECT",
        "description": "Prevent commits that exceed a specified file size limit from being pushed to the commit.",
        "fields": [
          {
            "name": "maxFileSize",
            "type": {
              "name": null
            },
            "description": "The maximum file size allowed in megabytes. This limit does not apply to Git Large File Storage (Git LFS)."
          }
        ]
      },
      {
        "name": "MaxFileSizeParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Prevent commits that exceed a specified file size limit from being pushed to the commit.",
        "fields": null
      },
      {
        "name": "MemberFeatureRequestNotification",
        "kind": "OBJECT",
        "description": "Represents a member feature request notification",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "Represents member feature request body containing entity name and the number of feature requests"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MemberFeatureRequestNotification object"
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "Represents member feature request notification title"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "MemberStatusable",
        "kind": "INTERFACE",
        "description": "Entities that have members who can set status messages.",
        "fields": [
          {
            "name": "memberStatuses",
            "type": {
              "name": null
            },
            "description": "Get the status messages members of this entity have set that are either public or visible only to the organization."
          }
        ]
      },
      {
        "name": "MembersCanDeleteReposClearAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a members_can_delete_repos.clear event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MembersCanDeleteReposClearAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "MembersCanDeleteReposDisableAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a members_can_delete_repos.disable event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MembersCanDeleteReposDisableAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "MembersCanDeleteReposEnableAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a members_can_delete_repos.enable event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MembersCanDeleteReposEnableAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "MentionedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'mentioned' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MentionedEvent object"
          }
        ]
      },
      {
        "name": "MergeBranchInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MergeBranch",
        "fields": null
      },
      {
        "name": "MergeBranchPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MergeBranch.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "mergeCommit",
            "type": {
              "name": "Commit"
            },
            "description": "The resulting merge Commit."
          }
        ]
      },
      {
        "name": "MergeCommitMessage",
        "kind": "ENUM",
        "description": "The possible default commit messages for merges.",
        "fields": null
      },
      {
        "name": "MergeCommitTitle",
        "kind": "ENUM",
        "description": "The possible default commit titles for merges.",
        "fields": null
      },
      {
        "name": "MergePullRequestInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MergePullRequest",
        "fields": null
      },
      {
        "name": "MergePullRequestPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MergePullRequest.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request that was merged."
          }
        ]
      },
      {
        "name": "MergeQueue",
        "kind": "OBJECT",
        "description": "The queue of pull request entries to be merged into a protected branch in a repository.",
        "fields": [
          {
            "name": "configuration",
            "type": {
              "name": "MergeQueueConfiguration"
            },
            "description": "The configuration for this merge queue"
          },
          {
            "name": "entries",
            "type": {
              "name": "MergeQueueEntryConnection"
            },
            "description": "The entries in the queue"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MergeQueue object"
          },
          {
            "name": "nextEntryEstimatedTimeToMerge",
            "type": {
              "name": "Int"
            },
            "description": "The estimated time in seconds until a newly added entry would be merged"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository this merge queue belongs to"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this merge queue"
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this merge queue"
          }
        ]
      },
      {
        "name": "MergeQueueConfiguration",
        "kind": "OBJECT",
        "description": "Configuration for a MergeQueue",
        "fields": [
          {
            "name": "checkResponseTimeout",
            "type": {
              "name": "Int"
            },
            "description": "The amount of time in minutes to wait for a check response before considering it a failure."
          },
          {
            "name": "maximumEntriesToBuild",
            "type": {
              "name": "Int"
            },
            "description": "The maximum number of entries to build at once."
          },
          {
            "name": "maximumEntriesToMerge",
            "type": {
              "name": "Int"
            },
            "description": "The maximum number of entries to merge at once."
          },
          {
            "name": "mergeMethod",
            "type": {
              "name": "PullRequestMergeMethod"
            },
            "description": "The merge method to use for this queue."
          },
          {
            "name": "mergingStrategy",
            "type": {
              "name": "MergeQueueMergingStrategy"
            },
            "description": "The strategy to use when merging entries."
          },
          {
            "name": "minimumEntriesToMerge",
            "type": {
              "name": "Int"
            },
            "description": "The minimum number of entries required to merge at once."
          },
          {
            "name": "minimumEntriesToMergeWaitTime",
            "type": {
              "name": "Int"
            },
            "description": "The amount of time in minutes to wait before ignoring the minumum number of entries in the queue requirement and merging a collection of entries"
          }
        ]
      },
      {
        "name": "MergeQueueEntry",
        "kind": "OBJECT",
        "description": "Entries in a MergeQueue",
        "fields": [
          {
            "name": "baseCommit",
            "type": {
              "name": "Commit"
            },
            "description": "The base commit for this entry"
          },
          {
            "name": "enqueuedAt",
            "type": {
              "name": null
            },
            "description": "The date and time this entry was added to the merge queue"
          },
          {
            "name": "enqueuer",
            "type": {
              "name": null
            },
            "description": "The actor that enqueued this entry"
          },
          {
            "name": "estimatedTimeToMerge",
            "type": {
              "name": "Int"
            },
            "description": "The estimated time in seconds until this entry will be merged"
          },
          {
            "name": "headCommit",
            "type": {
              "name": "Commit"
            },
            "description": "The head commit for this entry"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MergeQueueEntry object"
          },
          {
            "name": "jump",
            "type": {
              "name": null
            },
            "description": "Whether this pull request should jump the queue"
          },
          {
            "name": "mergeQueue",
            "type": {
              "name": "MergeQueue"
            },
            "description": "The merge queue that this entry belongs to"
          },
          {
            "name": "position",
            "type": {
              "name": null
            },
            "description": "The position of this entry in the queue"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request that will be added to a merge group"
          },
          {
            "name": "solo",
            "type": {
              "name": null
            },
            "description": "Does this pull request need to be deployed on its own"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of this entry in the queue"
          }
        ]
      },
      {
        "name": "MergeQueueEntryConnection",
        "kind": "OBJECT",
        "description": "The connection type for MergeQueueEntry.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "MergeQueueEntryEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "MergeQueueEntry"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "MergeQueueEntryState",
        "kind": "ENUM",
        "description": "The possible states for a merge queue entry.",
        "fields": null
      },
      {
        "name": "MergeQueueGroupingStrategy",
        "kind": "ENUM",
        "description": "When set to ALLGREEN, the merge commit created by merge queue for each PR in the group must pass all required checks to merge. When set to HEADGREEN, only the commit at the head of the merge group, i.e. the commit containing changes from all of the PRs in the group, must pass its required checks to merge.",
        "fields": null
      },
      {
        "name": "MergeQueueMergeMethod",
        "kind": "ENUM",
        "description": "Method to use when merging changes from queued pull requests.",
        "fields": null
      },
      {
        "name": "MergeQueueMergingStrategy",
        "kind": "ENUM",
        "description": "The possible merging strategies for a merge queue.",
        "fields": null
      },
      {
        "name": "MergeQueueParameters",
        "kind": "OBJECT",
        "description": "Merges must be performed via a merge queue.",
        "fields": [
          {
            "name": "checkResponseTimeoutMinutes",
            "type": {
              "name": null
            },
            "description": "Maximum time for a required status check to report a conclusion. After this much time has elapsed, checks that have not reported a conclusion will be assumed to have failed"
          },
          {
            "name": "groupingStrategy",
            "type": {
              "name": null
            },
            "description": "When set to ALLGREEN, the merge commit created by merge queue for each PR in the group must pass all required checks to merge. When set to HEADGREEN, only the commit at the head of the merge group, i.e. the commit containing changes from all of the PRs in the group, must pass its required checks to merge."
          },
          {
            "name": "maxEntriesToBuild",
            "type": {
              "name": null
            },
            "description": "Limit the number of queued pull requests requesting checks and workflow runs at the same time."
          },
          {
            "name": "maxEntriesToMerge",
            "type": {
              "name": null
            },
            "description": "The maximum number of PRs that will be merged together in a group."
          },
          {
            "name": "mergeMethod",
            "type": {
              "name": null
            },
            "description": "Method to use when merging changes from queued pull requests."
          },
          {
            "name": "minEntriesToMerge",
            "type": {
              "name": null
            },
            "description": "The minimum number of PRs that will be merged together in a group."
          },
          {
            "name": "minEntriesToMergeWaitMinutes",
            "type": {
              "name": null
            },
            "description": "The time merge queue should wait after the first PR is added to the queue for the minimum group size to be met. After this time has elapsed, the minimum group size will be ignored and a smaller group will be merged."
          }
        ]
      },
      {
        "name": "MergeQueueParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Merges must be performed via a merge queue.",
        "fields": null
      },
      {
        "name": "MergeStateStatus",
        "kind": "ENUM",
        "description": "Detailed status information about a pull request merge.",
        "fields": null
      },
      {
        "name": "MergeableState",
        "kind": "ENUM",
        "description": "Whether or not a PullRequest can be merged.",
        "fields": null
      },
      {
        "name": "MergedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'merged' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the commit associated with the `merge` event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MergedEvent object"
          },
          {
            "name": "mergeRef",
            "type": {
              "name": "Ref"
            },
            "description": "Identifies the Ref associated with the `merge` event."
          },
          {
            "name": "mergeRefName",
            "type": {
              "name": null
            },
            "description": "Identifies the name of the Ref associated with the `merge` event."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this merged event."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this merged event."
          }
        ]
      },
      {
        "name": "Migration",
        "kind": "INTERFACE",
        "description": "Represents a GitHub Enterprise Importer (GEI) migration.",
        "fields": [
          {
            "name": "continueOnError",
            "type": {
              "name": null
            },
            "description": "The migration flag to continue on error."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "String"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "failureReason",
            "type": {
              "name": "String"
            },
            "description": "The reason the migration failed."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Migration object"
          },
          {
            "name": "migrationLogUrl",
            "type": {
              "name": "URI"
            },
            "description": "The URL for the migration log (expires 1 day after migration completes)."
          },
          {
            "name": "migrationSource",
            "type": {
              "name": null
            },
            "description": "The migration source."
          },
          {
            "name": "repositoryName",
            "type": {
              "name": null
            },
            "description": "The target repository name."
          },
          {
            "name": "sourceUrl",
            "type": {
              "name": null
            },
            "description": "The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The migration state."
          },
          {
            "name": "warningsCount",
            "type": {
              "name": null
            },
            "description": "The number of warnings encountered for this migration. To review the warnings, check the [Migration Log](https://docs.github.com/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer)."
          }
        ]
      },
      {
        "name": "MigrationSource",
        "kind": "OBJECT",
        "description": "A GitHub Enterprise Importer (GEI) migration source.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MigrationSource object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The migration source name."
          },
          {
            "name": "type",
            "type": {
              "name": null
            },
            "description": "The migration source type."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`."
          }
        ]
      },
      {
        "name": "MigrationSourceType",
        "kind": "ENUM",
        "description": "Represents the different GitHub Enterprise Importer (GEI) migration sources.",
        "fields": null
      },
      {
        "name": "MigrationState",
        "kind": "ENUM",
        "description": "The GitHub Enterprise Importer (GEI) migration state.",
        "fields": null
      },
      {
        "name": "Milestone",
        "kind": "OBJECT",
        "description": "Represents a Milestone object on a given repository.",
        "fields": [
          {
            "name": "closed",
            "type": {
              "name": null
            },
            "description": "Indicates if the object is closed (definition of closed may depend on type)"
          },
          {
            "name": "closedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the object was closed."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who created the milestone."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "Identifies the description of the milestone."
          },
          {
            "name": "dueOn",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the due date of the milestone."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Milestone object"
          },
          {
            "name": "issues",
            "type": {
              "name": null
            },
            "description": "A list of issues associated with the milestone."
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "Identifies the number of the milestone."
          },
          {
            "name": "progressPercentage",
            "type": {
              "name": null
            },
            "description": "Identifies the percentage complete for the milestone"
          },
          {
            "name": "pullRequests",
            "type": {
              "name": null
            },
            "description": "A list of pull requests associated with the milestone."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this milestone."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this milestone"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "Identifies the state of the milestone."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "Identifies the title of the milestone."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this milestone"
          },
          {
            "name": "viewerCanClose",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be closed by the viewer."
          },
          {
            "name": "viewerCanReopen",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be reopened by the viewer."
          }
        ]
      },
      {
        "name": "MilestoneConnection",
        "kind": "OBJECT",
        "description": "The connection type for Milestone.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "MilestoneEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Milestone"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "MilestoneItem",
        "kind": "UNION",
        "description": "Types that can be inside a Milestone.",
        "fields": null
      },
      {
        "name": "MilestoneOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for milestone connections.",
        "fields": null
      },
      {
        "name": "MilestoneOrderField",
        "kind": "ENUM",
        "description": "Properties by which milestone connections can be ordered.",
        "fields": null
      },
      {
        "name": "MilestoneState",
        "kind": "ENUM",
        "description": "The possible states of a milestone.",
        "fields": null
      },
      {
        "name": "MilestonedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'milestoned' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MilestonedEvent object"
          },
          {
            "name": "milestoneTitle",
            "type": {
              "name": null
            },
            "description": "Identifies the milestone title associated with the 'milestoned' event."
          },
          {
            "name": "subject",
            "type": {
              "name": null
            },
            "description": "Object referenced by event."
          }
        ]
      },
      {
        "name": "Minimizable",
        "kind": "INTERFACE",
        "description": "Entities that can be minimized.",
        "fields": [
          {
            "name": "isMinimized",
            "type": {
              "name": null
            },
            "description": "Returns whether or not a comment has been minimized."
          },
          {
            "name": "minimizedReason",
            "type": {
              "name": "String"
            },
            "description": "Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation."
          },
          {
            "name": "viewerCanMinimize",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can minimize this object."
          }
        ]
      },
      {
        "name": "MinimizeCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MinimizeComment",
        "fields": null
      },
      {
        "name": "MinimizeCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MinimizeComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "minimizedComment",
            "type": {
              "name": "Minimizable"
            },
            "description": "The comment that was minimized."
          }
        ]
      },
      {
        "name": "MoveProjectCardInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MoveProjectCard",
        "fields": null
      },
      {
        "name": "MoveProjectCardPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MoveProjectCard.",
        "fields": [
          {
            "name": "cardEdge",
            "type": {
              "name": "ProjectCardEdge"
            },
            "description": "The new edge of the moved card."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "MoveProjectColumnInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of MoveProjectColumn",
        "fields": null
      },
      {
        "name": "MoveProjectColumnPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of MoveProjectColumn.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "columnEdge",
            "type": {
              "name": "ProjectColumnEdge"
            },
            "description": "The new edge of the moved column."
          }
        ]
      },
      {
        "name": "MovedColumnsInProjectEvent",
        "kind": "OBJECT",
        "description": "Represents a 'moved_columns_in_project' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the MovedColumnsInProjectEvent object"
          },
          {
            "name": "previousProjectColumnName",
            "type": {
              "name": null
            },
            "description": "Column name the issue or pull request was moved from."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "Project referenced by event."
          },
          {
            "name": "projectCard",
            "type": {
              "name": "ProjectCard"
            },
            "description": "Project card referenced by this project event."
          },
          {
            "name": "projectColumnName",
            "type": {
              "name": null
            },
            "description": "Column name the issue or pull request was moved to."
          }
        ]
      },
      {
        "name": "Mutation",
        "kind": "OBJECT",
        "description": "The root query for implementing GraphQL mutations.",
        "fields": [
          {
            "name": "abortQueuedMigrations",
            "type": {
              "name": "AbortQueuedMigrationsPayload"
            },
            "description": "Clear all of a customer's queued migrations"
          },
          {
            "name": "abortRepositoryMigration",
            "type": {
              "name": "AbortRepositoryMigrationPayload"
            },
            "description": "Abort a repository migration queued or in progress."
          },
          {
            "name": "acceptEnterpriseAdministratorInvitation",
            "type": {
              "name": "AcceptEnterpriseAdministratorInvitationPayload"
            },
            "description": "Accepts a pending invitation for a user to become an administrator of an enterprise."
          },
          {
            "name": "acceptEnterpriseMemberInvitation",
            "type": {
              "name": "AcceptEnterpriseMemberInvitationPayload"
            },
            "description": "Accepts a pending invitation for a user to become an unaffiliated member of an enterprise."
          },
          {
            "name": "acceptTopicSuggestion",
            "type": {
              "name": "AcceptTopicSuggestionPayload"
            },
            "description": "Applies a suggested topic to the repository."
          },
          {
            "name": "accessUserNamespaceRepository",
            "type": {
              "name": "AccessUserNamespaceRepositoryPayload"
            },
            "description": "Access user namespace repository for a temporary duration."
          },
          {
            "name": "addAssigneesToAssignable",
            "type": {
              "name": "AddAssigneesToAssignablePayload"
            },
            "description": "Adds assignees to an assignable object."
          },
          {
            "name": "addComment",
            "type": {
              "name": "AddCommentPayload"
            },
            "description": "Adds a comment to an Issue or Pull Request."
          },
          {
            "name": "addDiscussionComment",
            "type": {
              "name": "AddDiscussionCommentPayload"
            },
            "description": "Adds a comment to a Discussion, possibly as a reply to another comment."
          },
          {
            "name": "addDiscussionPollVote",
            "type": {
              "name": "AddDiscussionPollVotePayload"
            },
            "description": "Vote for an option in a discussion poll."
          },
          {
            "name": "addEnterpriseOrganizationMember",
            "type": {
              "name": "AddEnterpriseOrganizationMemberPayload"
            },
            "description": "Adds enterprise members to an organization within the enterprise."
          },
          {
            "name": "addEnterpriseSupportEntitlement",
            "type": {
              "name": "AddEnterpriseSupportEntitlementPayload"
            },
            "description": "Adds a support entitlement to an enterprise member."
          },
          {
            "name": "addLabelsToLabelable",
            "type": {
              "name": "AddLabelsToLabelablePayload"
            },
            "description": "Adds labels to a labelable object."
          },
          {
            "name": "addProjectCard",
            "type": {
              "name": "AddProjectCardPayload"
            },
            "description": "Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both."
          },
          {
            "name": "addProjectColumn",
            "type": {
              "name": "AddProjectColumnPayload"
            },
            "description": "Adds a column to a Project."
          },
          {
            "name": "addProjectV2DraftIssue",
            "type": {
              "name": "AddProjectV2DraftIssuePayload"
            },
            "description": "Creates a new draft issue and add it to a Project."
          },
          {
            "name": "addProjectV2ItemById",
            "type": {
              "name": "AddProjectV2ItemByIdPayload"
            },
            "description": "Links an existing content instance to a Project."
          },
          {
            "name": "addPullRequestReview",
            "type": {
              "name": "AddPullRequestReviewPayload"
            },
            "description": "Adds a review to a Pull Request."
          },
          {
            "name": "addPullRequestReviewComment",
            "type": {
              "name": "AddPullRequestReviewCommentPayload"
            },
            "description": "Adds a comment to a review."
          },
          {
            "name": "addPullRequestReviewThread",
            "type": {
              "name": "AddPullRequestReviewThreadPayload"
            },
            "description": "Adds a new thread to a pending Pull Request Review."
          },
          {
            "name": "addPullRequestReviewThreadReply",
            "type": {
              "name": "AddPullRequestReviewThreadReplyPayload"
            },
            "description": "Adds a reply to an existing Pull Request Review Thread."
          },
          {
            "name": "addReaction",
            "type": {
              "name": "AddReactionPayload"
            },
            "description": "Adds a reaction to a subject."
          },
          {
            "name": "addStar",
            "type": {
              "name": "AddStarPayload"
            },
            "description": "Adds a star to a Starrable."
          },
          {
            "name": "addSubIssue",
            "type": {
              "name": "AddSubIssuePayload"
            },
            "description": "Adds a sub-issue to a given issue"
          },
          {
            "name": "addUpvote",
            "type": {
              "name": "AddUpvotePayload"
            },
            "description": "Add an upvote to a discussion or discussion comment."
          },
          {
            "name": "addVerifiableDomain",
            "type": {
              "name": "AddVerifiableDomainPayload"
            },
            "description": "Adds a verifiable domain to an owning account."
          },
          {
            "name": "approveDeployments",
            "type": {
              "name": "ApproveDeploymentsPayload"
            },
            "description": "Approve all pending deployments under one or more environments"
          },
          {
            "name": "approveVerifiableDomain",
            "type": {
              "name": "ApproveVerifiableDomainPayload"
            },
            "description": "Approve a verifiable domain for notification delivery."
          },
          {
            "name": "archiveProjectV2Item",
            "type": {
              "name": "ArchiveProjectV2ItemPayload"
            },
            "description": "Archives a ProjectV2Item"
          },
          {
            "name": "archiveRepository",
            "type": {
              "name": "ArchiveRepositoryPayload"
            },
            "description": "Marks a repository as archived."
          },
          {
            "name": "cancelEnterpriseAdminInvitation",
            "type": {
              "name": "CancelEnterpriseAdminInvitationPayload"
            },
            "description": "Cancels a pending invitation for an administrator to join an enterprise."
          },
          {
            "name": "cancelEnterpriseMemberInvitation",
            "type": {
              "name": "CancelEnterpriseMemberInvitationPayload"
            },
            "description": "Cancels a pending invitation for an unaffiliated member to join an enterprise."
          },
          {
            "name": "cancelSponsorship",
            "type": {
              "name": "CancelSponsorshipPayload"
            },
            "description": "Cancel an active sponsorship."
          },
          {
            "name": "changeUserStatus",
            "type": {
              "name": "ChangeUserStatusPayload"
            },
            "description": "Update your status on GitHub."
          },
          {
            "name": "clearLabelsFromLabelable",
            "type": {
              "name": "ClearLabelsFromLabelablePayload"
            },
            "description": "Clears all labels from a labelable object."
          },
          {
            "name": "clearProjectV2ItemFieldValue",
            "type": {
              "name": "ClearProjectV2ItemFieldValuePayload"
            },
            "description": "This mutation clears the value of a field for an item in a Project. Currently only text, number, date, assignees, labels, single-select, iteration and milestone fields are supported."
          },
          {
            "name": "cloneProject",
            "type": {
              "name": "CloneProjectPayload"
            },
            "description": "Creates a new project by cloning configuration from an existing project."
          },
          {
            "name": "cloneTemplateRepository",
            "type": {
              "name": "CloneTemplateRepositoryPayload"
            },
            "description": "Create a new repository with the same files and directory structure as a template repository."
          },
          {
            "name": "closeDiscussion",
            "type": {
              "name": "CloseDiscussionPayload"
            },
            "description": "Close a discussion."
          },
          {
            "name": "closeIssue",
            "type": {
              "name": "CloseIssuePayload"
            },
            "description": "Close an issue."
          },
          {
            "name": "closePullRequest",
            "type": {
              "name": "ClosePullRequestPayload"
            },
            "description": "Close a pull request."
          },
          {
            "name": "convertProjectCardNoteToIssue",
            "type": {
              "name": "ConvertProjectCardNoteToIssuePayload"
            },
            "description": "Convert a project note card to one associated with a newly created issue."
          },
          {
            "name": "convertProjectV2DraftIssueItemToIssue",
            "type": {
              "name": "ConvertProjectV2DraftIssueItemToIssuePayload"
            },
            "description": "Converts a projectV2 draft issue item to an issue."
          },
          {
            "name": "convertPullRequestToDraft",
            "type": {
              "name": "ConvertPullRequestToDraftPayload"
            },
            "description": "Converts a pull request to draft"
          },
          {
            "name": "copyProjectV2",
            "type": {
              "name": "CopyProjectV2Payload"
            },
            "description": "Copy a project."
          },
          {
            "name": "createAttributionInvitation",
            "type": {
              "name": "CreateAttributionInvitationPayload"
            },
            "description": "Invites a user to claim reattributable data"
          },
          {
            "name": "createBranchProtectionRule",
            "type": {
              "name": "CreateBranchProtectionRulePayload"
            },
            "description": "Create a new branch protection rule"
          },
          {
            "name": "createCheckRun",
            "type": {
              "name": "CreateCheckRunPayload"
            },
            "description": "Create a check run."
          },
          {
            "name": "createCheckSuite",
            "type": {
              "name": "CreateCheckSuitePayload"
            },
            "description": "Create a check suite"
          },
          {
            "name": "createCommitOnBranch",
            "type": {
              "name": "CreateCommitOnBranchPayload"
            },
            "description": "Appends a commit to the given branch as the authenticated user.\n\nThis mutation creates a commit whose parent is the HEAD of the provided\nbranch and also updates that branch to point to the new commit.\nIt can be thought of as similar to `git commit`.\n\n### Locating a Branch\n\nCommits are appended to a `branch` of type `Ref`.\nThis must refer to a git branch (i.e.  the fully qualified path must\nbegin with `refs/heads/`, although including this prefix is optional.\n\nCallers may specify the `branch` to commit to either by its global node\nID or by passing both of `repositoryNameWithOwner` and `refName`.  For\nmore details see the documentation for `CommittableBranch`.\n\n### Describing Changes\n\n`fileChanges` are specified as a `FilesChanges` object describing\n`FileAdditions` and `FileDeletions`.\n\nPlease see the documentation for `FileChanges` for more information on\nhow to use this argument to describe any set of file changes.\n\n### Authorship\n\nSimilar to the web commit interface, this mutation does not support\nspecifying the author or committer of the commit and will not add\nsupport for this in the future.\n\nA commit created by a successful execution of this mutation will be\nauthored by the owner of the credential which authenticates the API\nrequest.  The committer will be identical to that of commits authored\nusing the web interface.\n\nIf you need full control over author and committer information, please\nuse the Git Database REST API instead.\n\n### Commit Signing\n\nCommits made using this mutation are automatically signed by GitHub if\nsupported and will be marked as verified in the user interface.\n"
          },
          {
            "name": "createDeployment",
            "type": {
              "name": "CreateDeploymentPayload"
            },
            "description": "Creates a new deployment event."
          },
          {
            "name": "createDeploymentStatus",
            "type": {
              "name": "CreateDeploymentStatusPayload"
            },
            "description": "Create a deployment status."
          },
          {
            "name": "createDiscussion",
            "type": {
              "name": "CreateDiscussionPayload"
            },
            "description": "Create a discussion."
          },
          {
            "name": "createEnterpriseOrganization",
            "type": {
              "name": "CreateEnterpriseOrganizationPayload"
            },
            "description": "Creates an organization as part of an enterprise account. A personal access token used to create an organization is implicitly permitted to update the organization it created, if the organization is part of an enterprise that has SAML enabled or uses Enterprise Managed Users. If the organization is not part of such an enterprise, and instead has SAML enabled for it individually, the token will then require SAML authorization to continue working against that organization."
          },
          {
            "name": "createEnvironment",
            "type": {
              "name": "CreateEnvironmentPayload"
            },
            "description": "Creates an environment or simply returns it if already exists."
          },
          {
            "name": "createIpAllowListEntry",
            "type": {
              "name": "CreateIpAllowListEntryPayload"
            },
            "description": "Creates a new IP allow list entry."
          },
          {
            "name": "createIssue",
            "type": {
              "name": "CreateIssuePayload"
            },
            "description": "Creates a new issue."
          },
          {
            "name": "createLabel",
            "type": {
              "name": "CreateLabelPayload"
            },
            "description": "Creates a new label."
          },
          {
            "name": "createLinkedBranch",
            "type": {
              "name": "CreateLinkedBranchPayload"
            },
            "description": "Create a branch linked to an issue."
          },
          {
            "name": "createMigrationSource",
            "type": {
              "name": "CreateMigrationSourcePayload"
            },
            "description": "Creates a GitHub Enterprise Importer (GEI) migration source."
          },
          {
            "name": "createProject",
            "type": {
              "name": "CreateProjectPayload"
            },
            "description": "Creates a new project."
          },
          {
            "name": "createProjectV2",
            "type": {
              "name": "CreateProjectV2Payload"
            },
            "description": "Creates a new project."
          },
          {
            "name": "createProjectV2Field",
            "type": {
              "name": "CreateProjectV2FieldPayload"
            },
            "description": "Create a new project field."
          },
          {
            "name": "createProjectV2StatusUpdate",
            "type": {
              "name": "CreateProjectV2StatusUpdatePayload"
            },
            "description": "Creates a status update within a Project."
          },
          {
            "name": "createPullRequest",
            "type": {
              "name": "CreatePullRequestPayload"
            },
            "description": "Create a new pull request"
          },
          {
            "name": "createRef",
            "type": {
              "name": "CreateRefPayload"
            },
            "description": "Create a new Git Ref."
          },
          {
            "name": "createRepository",
            "type": {
              "name": "CreateRepositoryPayload"
            },
            "description": "Create a new repository."
          },
          {
            "name": "createRepositoryRuleset",
            "type": {
              "name": "CreateRepositoryRulesetPayload"
            },
            "description": "Create a repository ruleset"
          },
          {
            "name": "createSponsorsListing",
            "type": {
              "name": "CreateSponsorsListingPayload"
            },
            "description": "Create a GitHub Sponsors profile to allow others to sponsor you or your organization."
          },
          {
            "name": "createSponsorsTier",
            "type": {
              "name": "CreateSponsorsTierPayload"
            },
            "description": "Create a new payment tier for your GitHub Sponsors profile."
          },
          {
            "name": "createSponsorship",
            "type": {
              "name": "CreateSponsorshipPayload"
            },
            "description": "Start a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship."
          },
          {
            "name": "createSponsorships",
            "type": {
              "name": "CreateSponsorshipsPayload"
            },
            "description": "Make many sponsorships for different sponsorable users or organizations at once. Can only sponsor those who have a public GitHub Sponsors profile."
          },
          {
            "name": "createTeamDiscussion",
            "type": {
              "name": "CreateTeamDiscussionPayload"
            },
            "description": "Creates a new team discussion."
          },
          {
            "name": "createTeamDiscussionComment",
            "type": {
              "name": "CreateTeamDiscussionCommentPayload"
            },
            "description": "Creates a new team discussion comment."
          },
          {
            "name": "createUserList",
            "type": {
              "name": "CreateUserListPayload"
            },
            "description": "Creates a new user list."
          },
          {
            "name": "declineTopicSuggestion",
            "type": {
              "name": "DeclineTopicSuggestionPayload"
            },
            "description": "Rejects a suggested topic for the repository."
          },
          {
            "name": "deleteBranchProtectionRule",
            "type": {
              "name": "DeleteBranchProtectionRulePayload"
            },
            "description": "Delete a branch protection rule"
          },
          {
            "name": "deleteDeployment",
            "type": {
              "name": "DeleteDeploymentPayload"
            },
            "description": "Deletes a deployment."
          },
          {
            "name": "deleteDiscussion",
            "type": {
              "name": "DeleteDiscussionPayload"
            },
            "description": "Delete a discussion and all of its replies."
          },
          {
            "name": "deleteDiscussionComment",
            "type": {
              "name": "DeleteDiscussionCommentPayload"
            },
            "description": "Delete a discussion comment. If it has replies, wipe it instead."
          },
          {
            "name": "deleteEnvironment",
            "type": {
              "name": "DeleteEnvironmentPayload"
            },
            "description": "Deletes an environment"
          },
          {
            "name": "deleteIpAllowListEntry",
            "type": {
              "name": "DeleteIpAllowListEntryPayload"
            },
            "description": "Deletes an IP allow list entry."
          },
          {
            "name": "deleteIssue",
            "type": {
              "name": "DeleteIssuePayload"
            },
            "description": "Deletes an Issue object."
          },
          {
            "name": "deleteIssueComment",
            "type": {
              "name": "DeleteIssueCommentPayload"
            },
            "description": "Deletes an IssueComment object."
          },
          {
            "name": "deleteLabel",
            "type": {
              "name": "DeleteLabelPayload"
            },
            "description": "Deletes a label."
          },
          {
            "name": "deleteLinkedBranch",
            "type": {
              "name": "DeleteLinkedBranchPayload"
            },
            "description": "Unlink a branch from an issue."
          },
          {
            "name": "deletePackageVersion",
            "type": {
              "name": "DeletePackageVersionPayload"
            },
            "description": "Delete a package version."
          },
          {
            "name": "deleteProject",
            "type": {
              "name": "DeleteProjectPayload"
            },
            "description": "Deletes a project."
          },
          {
            "name": "deleteProjectCard",
            "type": {
              "name": "DeleteProjectCardPayload"
            },
            "description": "Deletes a project card."
          },
          {
            "name": "deleteProjectColumn",
            "type": {
              "name": "DeleteProjectColumnPayload"
            },
            "description": "Deletes a project column."
          },
          {
            "name": "deleteProjectV2",
            "type": {
              "name": "DeleteProjectV2Payload"
            },
            "description": "Delete a project."
          },
          {
            "name": "deleteProjectV2Field",
            "type": {
              "name": "DeleteProjectV2FieldPayload"
            },
            "description": "Delete a project field."
          },
          {
            "name": "deleteProjectV2Item",
            "type": {
              "name": "DeleteProjectV2ItemPayload"
            },
            "description": "Deletes an item from a Project."
          },
          {
            "name": "deleteProjectV2StatusUpdate",
            "type": {
              "name": "DeleteProjectV2StatusUpdatePayload"
            },
            "description": "Deletes a project status update."
          },
          {
            "name": "deleteProjectV2Workflow",
            "type": {
              "name": "DeleteProjectV2WorkflowPayload"
            },
            "description": "Deletes a project workflow."
          },
          {
            "name": "deletePullRequestReview",
            "type": {
              "name": "DeletePullRequestReviewPayload"
            },
            "description": "Deletes a pull request review."
          },
          {
            "name": "deletePullRequestReviewComment",
            "type": {
              "name": "DeletePullRequestReviewCommentPayload"
            },
            "description": "Deletes a pull request review comment."
          },
          {
            "name": "deleteRef",
            "type": {
              "name": "DeleteRefPayload"
            },
            "description": "Delete a Git Ref."
          },
          {
            "name": "deleteRepositoryRuleset",
            "type": {
              "name": "DeleteRepositoryRulesetPayload"
            },
            "description": "Delete a repository ruleset"
          },
          {
            "name": "deleteTeamDiscussion",
            "type": {
              "name": "DeleteTeamDiscussionPayload"
            },
            "description": "Deletes a team discussion."
          },
          {
            "name": "deleteTeamDiscussionComment",
            "type": {
              "name": "DeleteTeamDiscussionCommentPayload"
            },
            "description": "Deletes a team discussion comment."
          },
          {
            "name": "deleteUserList",
            "type": {
              "name": "DeleteUserListPayload"
            },
            "description": "Deletes a user list."
          },
          {
            "name": "deleteVerifiableDomain",
            "type": {
              "name": "DeleteVerifiableDomainPayload"
            },
            "description": "Deletes a verifiable domain."
          },
          {
            "name": "dequeuePullRequest",
            "type": {
              "name": "DequeuePullRequestPayload"
            },
            "description": "Remove a pull request from the merge queue."
          },
          {
            "name": "disablePullRequestAutoMerge",
            "type": {
              "name": "DisablePullRequestAutoMergePayload"
            },
            "description": "Disable auto merge on the given pull request"
          },
          {
            "name": "dismissPullRequestReview",
            "type": {
              "name": "DismissPullRequestReviewPayload"
            },
            "description": "Dismisses an approved or rejected pull request review."
          },
          {
            "name": "dismissRepositoryVulnerabilityAlert",
            "type": {
              "name": "DismissRepositoryVulnerabilityAlertPayload"
            },
            "description": "Dismisses the Dependabot alert."
          },
          {
            "name": "enablePullRequestAutoMerge",
            "type": {
              "name": "EnablePullRequestAutoMergePayload"
            },
            "description": "Enable the default auto-merge on a pull request."
          },
          {
            "name": "enqueuePullRequest",
            "type": {
              "name": "EnqueuePullRequestPayload"
            },
            "description": "Add a pull request to the merge queue."
          },
          {
            "name": "followOrganization",
            "type": {
              "name": "FollowOrganizationPayload"
            },
            "description": "Follow an organization."
          },
          {
            "name": "followUser",
            "type": {
              "name": "FollowUserPayload"
            },
            "description": "Follow a user."
          },
          {
            "name": "grantEnterpriseOrganizationsMigratorRole",
            "type": {
              "name": "GrantEnterpriseOrganizationsMigratorRolePayload"
            },
            "description": "Grant the migrator role to a user for all organizations under an enterprise account."
          },
          {
            "name": "grantMigratorRole",
            "type": {
              "name": "GrantMigratorRolePayload"
            },
            "description": "Grant the migrator role to a user or a team."
          },
          {
            "name": "importProject",
            "type": {
              "name": "ImportProjectPayload"
            },
            "description": "Creates a new project by importing columns and a list of issues/PRs."
          },
          {
            "name": "inviteEnterpriseAdmin",
            "type": {
              "name": "InviteEnterpriseAdminPayload"
            },
            "description": "Invite someone to become an administrator of the enterprise."
          },
          {
            "name": "inviteEnterpriseMember",
            "type": {
              "name": "InviteEnterpriseMemberPayload"
            },
            "description": "Invite someone to become an unaffiliated member of the enterprise."
          },
          {
            "name": "linkProjectV2ToRepository",
            "type": {
              "name": "LinkProjectV2ToRepositoryPayload"
            },
            "description": "Links a project to a repository."
          },
          {
            "name": "linkProjectV2ToTeam",
            "type": {
              "name": "LinkProjectV2ToTeamPayload"
            },
            "description": "Links a project to a team."
          },
          {
            "name": "linkRepositoryToProject",
            "type": {
              "name": "LinkRepositoryToProjectPayload"
            },
            "description": "Creates a repository link for a project."
          },
          {
            "name": "lockLockable",
            "type": {
              "name": "LockLockablePayload"
            },
            "description": "Lock a lockable object"
          },
          {
            "name": "markDiscussionCommentAsAnswer",
            "type": {
              "name": "MarkDiscussionCommentAsAnswerPayload"
            },
            "description": "Mark a discussion comment as the chosen answer for discussions in an answerable category."
          },
          {
            "name": "markFileAsViewed",
            "type": {
              "name": "MarkFileAsViewedPayload"
            },
            "description": "Mark a pull request file as viewed"
          },
          {
            "name": "markProjectV2AsTemplate",
            "type": {
              "name": "MarkProjectV2AsTemplatePayload"
            },
            "description": "Mark a project as a template. Note that only projects which are owned by an Organization can be marked as a template."
          },
          {
            "name": "markPullRequestReadyForReview",
            "type": {
              "name": "MarkPullRequestReadyForReviewPayload"
            },
            "description": "Marks a pull request ready for review."
          },
          {
            "name": "mergeBranch",
            "type": {
              "name": "MergeBranchPayload"
            },
            "description": "Merge a head into a branch."
          },
          {
            "name": "mergePullRequest",
            "type": {
              "name": "MergePullRequestPayload"
            },
            "description": "Merge a pull request."
          },
          {
            "name": "minimizeComment",
            "type": {
              "name": "MinimizeCommentPayload"
            },
            "description": "Minimizes a comment on an Issue, Commit, Pull Request, or Gist"
          },
          {
            "name": "moveProjectCard",
            "type": {
              "name": "MoveProjectCardPayload"
            },
            "description": "Moves a project card to another place."
          },
          {
            "name": "moveProjectColumn",
            "type": {
              "name": "MoveProjectColumnPayload"
            },
            "description": "Moves a project column to another place."
          },
          {
            "name": "pinEnvironment",
            "type": {
              "name": "PinEnvironmentPayload"
            },
            "description": "Pin an environment to a repository"
          },
          {
            "name": "pinIssue",
            "type": {
              "name": "PinIssuePayload"
            },
            "description": "Pin an issue to a repository"
          },
          {
            "name": "publishSponsorsTier",
            "type": {
              "name": "PublishSponsorsTierPayload"
            },
            "description": "Publish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile."
          },
          {
            "name": "regenerateEnterpriseIdentityProviderRecoveryCodes",
            "type": {
              "name": "RegenerateEnterpriseIdentityProviderRecoveryCodesPayload"
            },
            "description": "Regenerates the identity provider recovery codes for an enterprise"
          },
          {
            "name": "regenerateVerifiableDomainToken",
            "type": {
              "name": "RegenerateVerifiableDomainTokenPayload"
            },
            "description": "Regenerates a verifiable domain's verification token."
          },
          {
            "name": "rejectDeployments",
            "type": {
              "name": "RejectDeploymentsPayload"
            },
            "description": "Reject all pending deployments under one or more environments"
          },
          {
            "name": "removeAssigneesFromAssignable",
            "type": {
              "name": "RemoveAssigneesFromAssignablePayload"
            },
            "description": "Removes assignees from an assignable object."
          },
          {
            "name": "removeEnterpriseAdmin",
            "type": {
              "name": "RemoveEnterpriseAdminPayload"
            },
            "description": "Removes an administrator from the enterprise."
          },
          {
            "name": "removeEnterpriseIdentityProvider",
            "type": {
              "name": "RemoveEnterpriseIdentityProviderPayload"
            },
            "description": "Removes the identity provider from an enterprise. Owners of enterprises both with and without Enterprise Managed Users may use this mutation."
          },
          {
            "name": "removeEnterpriseMember",
            "type": {
              "name": "RemoveEnterpriseMemberPayload"
            },
            "description": "Removes a user from all organizations within the enterprise"
          },
          {
            "name": "removeEnterpriseOrganization",
            "type": {
              "name": "RemoveEnterpriseOrganizationPayload"
            },
            "description": "Removes an organization from the enterprise"
          },
          {
            "name": "removeEnterpriseSupportEntitlement",
            "type": {
              "name": "RemoveEnterpriseSupportEntitlementPayload"
            },
            "description": "Removes a support entitlement from an enterprise member."
          },
          {
            "name": "removeLabelsFromLabelable",
            "type": {
              "name": "RemoveLabelsFromLabelablePayload"
            },
            "description": "Removes labels from a Labelable object."
          },
          {
            "name": "removeOutsideCollaborator",
            "type": {
              "name": "RemoveOutsideCollaboratorPayload"
            },
            "description": "Removes outside collaborator from all repositories in an organization."
          },
          {
            "name": "removeReaction",
            "type": {
              "name": "RemoveReactionPayload"
            },
            "description": "Removes a reaction from a subject."
          },
          {
            "name": "removeStar",
            "type": {
              "name": "RemoveStarPayload"
            },
            "description": "Removes a star from a Starrable."
          },
          {
            "name": "removeSubIssue",
            "type": {
              "name": "RemoveSubIssuePayload"
            },
            "description": "Removes a sub-issue from a given issue"
          },
          {
            "name": "removeUpvote",
            "type": {
              "name": "RemoveUpvotePayload"
            },
            "description": "Remove an upvote to a discussion or discussion comment."
          },
          {
            "name": "reopenDiscussion",
            "type": {
              "name": "ReopenDiscussionPayload"
            },
            "description": "Reopen a discussion."
          },
          {
            "name": "reopenIssue",
            "type": {
              "name": "ReopenIssuePayload"
            },
            "description": "Reopen a issue."
          },
          {
            "name": "reopenPullRequest",
            "type": {
              "name": "ReopenPullRequestPayload"
            },
            "description": "Reopen a pull request."
          },
          {
            "name": "reorderEnvironment",
            "type": {
              "name": "ReorderEnvironmentPayload"
            },
            "description": "Reorder a pinned repository environment"
          },
          {
            "name": "reprioritizeSubIssue",
            "type": {
              "name": "ReprioritizeSubIssuePayload"
            },
            "description": "Reprioritizes a sub-issue to a different position in the parent list."
          },
          {
            "name": "requestReviews",
            "type": {
              "name": "RequestReviewsPayload"
            },
            "description": "Set review requests on a pull request."
          },
          {
            "name": "rerequestCheckSuite",
            "type": {
              "name": "RerequestCheckSuitePayload"
            },
            "description": "Rerequests an existing check suite."
          },
          {
            "name": "resolveReviewThread",
            "type": {
              "name": "ResolveReviewThreadPayload"
            },
            "description": "Marks a review thread as resolved."
          },
          {
            "name": "retireSponsorsTier",
            "type": {
              "name": "RetireSponsorsTierPayload"
            },
            "description": "Retire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships."
          },
          {
            "name": "revertPullRequest",
            "type": {
              "name": "RevertPullRequestPayload"
            },
            "description": "Create a pull request that reverts the changes from a merged pull request."
          },
          {
            "name": "revokeEnterpriseOrganizationsMigratorRole",
            "type": {
              "name": "RevokeEnterpriseOrganizationsMigratorRolePayload"
            },
            "description": "Revoke the migrator role to a user for all organizations under an enterprise account."
          },
          {
            "name": "revokeMigratorRole",
            "type": {
              "name": "RevokeMigratorRolePayload"
            },
            "description": "Revoke the migrator role from a user or a team."
          },
          {
            "name": "setEnterpriseIdentityProvider",
            "type": {
              "name": "SetEnterpriseIdentityProviderPayload"
            },
            "description": "Creates or updates the identity provider for an enterprise."
          },
          {
            "name": "setOrganizationInteractionLimit",
            "type": {
              "name": "SetOrganizationInteractionLimitPayload"
            },
            "description": "Set an organization level interaction limit for an organization's public repositories."
          },
          {
            "name": "setRepositoryInteractionLimit",
            "type": {
              "name": "SetRepositoryInteractionLimitPayload"
            },
            "description": "Sets an interaction limit setting for a repository."
          },
          {
            "name": "setUserInteractionLimit",
            "type": {
              "name": "SetUserInteractionLimitPayload"
            },
            "description": "Set a user level interaction limit for an user's public repositories."
          },
          {
            "name": "startOrganizationMigration",
            "type": {
              "name": "StartOrganizationMigrationPayload"
            },
            "description": "Starts a GitHub Enterprise Importer organization migration."
          },
          {
            "name": "startRepositoryMigration",
            "type": {
              "name": "StartRepositoryMigrationPayload"
            },
            "description": "Starts a GitHub Enterprise Importer (GEI) repository migration."
          },
          {
            "name": "submitPullRequestReview",
            "type": {
              "name": "SubmitPullRequestReviewPayload"
            },
            "description": "Submits a pending pull request review."
          },
          {
            "name": "transferEnterpriseOrganization",
            "type": {
              "name": "TransferEnterpriseOrganizationPayload"
            },
            "description": "Transfer an organization from one enterprise to another enterprise."
          },
          {
            "name": "transferIssue",
            "type": {
              "name": "TransferIssuePayload"
            },
            "description": "Transfer an issue to a different repository"
          },
          {
            "name": "unarchiveProjectV2Item",
            "type": {
              "name": "UnarchiveProjectV2ItemPayload"
            },
            "description": "Unarchives a ProjectV2Item"
          },
          {
            "name": "unarchiveRepository",
            "type": {
              "name": "UnarchiveRepositoryPayload"
            },
            "description": "Unarchives a repository."
          },
          {
            "name": "unfollowOrganization",
            "type": {
              "name": "UnfollowOrganizationPayload"
            },
            "description": "Unfollow an organization."
          },
          {
            "name": "unfollowUser",
            "type": {
              "name": "UnfollowUserPayload"
            },
            "description": "Unfollow a user."
          },
          {
            "name": "unlinkProjectV2FromRepository",
            "type": {
              "name": "UnlinkProjectV2FromRepositoryPayload"
            },
            "description": "Unlinks a project from a repository."
          },
          {
            "name": "unlinkProjectV2FromTeam",
            "type": {
              "name": "UnlinkProjectV2FromTeamPayload"
            },
            "description": "Unlinks a project to a team."
          },
          {
            "name": "unlinkRepositoryFromProject",
            "type": {
              "name": "UnlinkRepositoryFromProjectPayload"
            },
            "description": "Deletes a repository link from a project."
          },
          {
            "name": "unlockLockable",
            "type": {
              "name": "UnlockLockablePayload"
            },
            "description": "Unlock a lockable object"
          },
          {
            "name": "unmarkDiscussionCommentAsAnswer",
            "type": {
              "name": "UnmarkDiscussionCommentAsAnswerPayload"
            },
            "description": "Unmark a discussion comment as the chosen answer for discussions in an answerable category."
          },
          {
            "name": "unmarkFileAsViewed",
            "type": {
              "name": "UnmarkFileAsViewedPayload"
            },
            "description": "Unmark a pull request file as viewed"
          },
          {
            "name": "unmarkIssueAsDuplicate",
            "type": {
              "name": "UnmarkIssueAsDuplicatePayload"
            },
            "description": "Unmark an issue as a duplicate of another issue."
          },
          {
            "name": "unmarkProjectV2AsTemplate",
            "type": {
              "name": "UnmarkProjectV2AsTemplatePayload"
            },
            "description": "Unmark a project as a template."
          },
          {
            "name": "unminimizeComment",
            "type": {
              "name": "UnminimizeCommentPayload"
            },
            "description": "Unminimizes a comment on an Issue, Commit, Pull Request, or Gist"
          },
          {
            "name": "unpinIssue",
            "type": {
              "name": "UnpinIssuePayload"
            },
            "description": "Unpin a pinned issue from a repository"
          },
          {
            "name": "unresolveReviewThread",
            "type": {
              "name": "UnresolveReviewThreadPayload"
            },
            "description": "Marks a review thread as unresolved."
          },
          {
            "name": "updateBranchProtectionRule",
            "type": {
              "name": "UpdateBranchProtectionRulePayload"
            },
            "description": "Update a branch protection rule"
          },
          {
            "name": "updateCheckRun",
            "type": {
              "name": "UpdateCheckRunPayload"
            },
            "description": "Update a check run"
          },
          {
            "name": "updateCheckSuitePreferences",
            "type": {
              "name": "UpdateCheckSuitePreferencesPayload"
            },
            "description": "Modifies the settings of an existing check suite"
          },
          {
            "name": "updateDiscussion",
            "type": {
              "name": "UpdateDiscussionPayload"
            },
            "description": "Update a discussion"
          },
          {
            "name": "updateDiscussionComment",
            "type": {
              "name": "UpdateDiscussionCommentPayload"
            },
            "description": "Update the contents of a comment on a Discussion"
          },
          {
            "name": "updateEnterpriseAdministratorRole",
            "type": {
              "name": "UpdateEnterpriseAdministratorRolePayload"
            },
            "description": "Updates the role of an enterprise administrator."
          },
          {
            "name": "updateEnterpriseAllowPrivateRepositoryForkingSetting",
            "type": {
              "name": "UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload"
            },
            "description": "Sets whether private repository forks are enabled for an enterprise."
          },
          {
            "name": "updateEnterpriseDefaultRepositoryPermissionSetting",
            "type": {
              "name": "UpdateEnterpriseDefaultRepositoryPermissionSettingPayload"
            },
            "description": "Sets the base repository permission for organizations in an enterprise."
          },
          {
            "name": "updateEnterpriseDeployKeySetting",
            "type": {
              "name": "UpdateEnterpriseDeployKeySettingPayload"
            },
            "description": "Sets whether deploy keys are allowed to be created and used for an enterprise."
          },
          {
            "name": "updateEnterpriseMembersCanChangeRepositoryVisibilitySetting",
            "type": {
              "name": "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload"
            },
            "description": "Sets whether organization members with admin permissions on a repository can change repository visibility."
          },
          {
            "name": "updateEnterpriseMembersCanCreateRepositoriesSetting",
            "type": {
              "name": "UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload"
            },
            "description": "Sets the members can create repositories setting for an enterprise."
          },
          {
            "name": "updateEnterpriseMembersCanDeleteIssuesSetting",
            "type": {
              "name": "UpdateEnterpriseMembersCanDeleteIssuesSettingPayload"
            },
            "description": "Sets the members can delete issues setting for an enterprise."
          },
          {
            "name": "updateEnterpriseMembersCanDeleteRepositoriesSetting",
            "type": {
              "name": "UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload"
            },
            "description": "Sets the members can delete repositories setting for an enterprise."
          },
          {
            "name": "updateEnterpriseMembersCanInviteCollaboratorsSetting",
            "type": {
              "name": "UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload"
            },
            "description": "Sets whether members can invite collaborators are enabled for an enterprise."
          },
          {
            "name": "updateEnterpriseMembersCanMakePurchasesSetting",
            "type": {
              "name": "UpdateEnterpriseMembersCanMakePurchasesSettingPayload"
            },
            "description": "Sets whether or not an organization owner can make purchases."
          },
          {
            "name": "updateEnterpriseMembersCanUpdateProtectedBranchesSetting",
            "type": {
              "name": "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload"
            },
            "description": "Sets the members can update protected branches setting for an enterprise."
          },
          {
            "name": "updateEnterpriseMembersCanViewDependencyInsightsSetting",
            "type": {
              "name": "UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload"
            },
            "description": "Sets the members can view dependency insights for an enterprise."
          },
          {
            "name": "updateEnterpriseOrganizationProjectsSetting",
            "type": {
              "name": "UpdateEnterpriseOrganizationProjectsSettingPayload"
            },
            "description": "Sets whether organization projects are enabled for an enterprise."
          },
          {
            "name": "updateEnterpriseOwnerOrganizationRole",
            "type": {
              "name": "UpdateEnterpriseOwnerOrganizationRolePayload"
            },
            "description": "Updates the role of an enterprise owner with an organization."
          },
          {
            "name": "updateEnterpriseProfile",
            "type": {
              "name": "UpdateEnterpriseProfilePayload"
            },
            "description": "Updates an enterprise's profile."
          },
          {
            "name": "updateEnterpriseRepositoryProjectsSetting",
            "type": {
              "name": "UpdateEnterpriseRepositoryProjectsSettingPayload"
            },
            "description": "Sets whether repository projects are enabled for a enterprise."
          },
          {
            "name": "updateEnterpriseTeamDiscussionsSetting",
            "type": {
              "name": "UpdateEnterpriseTeamDiscussionsSettingPayload"
            },
            "description": "Sets whether team discussions are enabled for an enterprise."
          },
          {
            "name": "updateEnterpriseTwoFactorAuthenticationDisallowedMethodsSetting",
            "type": {
              "name": "UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayload"
            },
            "description": "Sets the two-factor authentication methods that users of an enterprise may not use."
          },
          {
            "name": "updateEnterpriseTwoFactorAuthenticationRequiredSetting",
            "type": {
              "name": "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload"
            },
            "description": "Sets whether two factor authentication is required for all users in an enterprise."
          },
          {
            "name": "updateEnvironment",
            "type": {
              "name": "UpdateEnvironmentPayload"
            },
            "description": "Updates an environment."
          },
          {
            "name": "updateIpAllowListEnabledSetting",
            "type": {
              "name": "UpdateIpAllowListEnabledSettingPayload"
            },
            "description": "Sets whether an IP allow list is enabled on an owner."
          },
          {
            "name": "updateIpAllowListEntry",
            "type": {
              "name": "UpdateIpAllowListEntryPayload"
            },
            "description": "Updates an IP allow list entry."
          },
          {
            "name": "updateIpAllowListForInstalledAppsEnabledSetting",
            "type": {
              "name": "UpdateIpAllowListForInstalledAppsEnabledSettingPayload"
            },
            "description": "Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner."
          },
          {
            "name": "updateIssue",
            "type": {
              "name": "UpdateIssuePayload"
            },
            "description": "Updates an Issue."
          },
          {
            "name": "updateIssueComment",
            "type": {
              "name": "UpdateIssueCommentPayload"
            },
            "description": "Updates an IssueComment object."
          },
          {
            "name": "updateLabel",
            "type": {
              "name": "UpdateLabelPayload"
            },
            "description": "Updates an existing label."
          },
          {
            "name": "updateNotificationRestrictionSetting",
            "type": {
              "name": "UpdateNotificationRestrictionSettingPayload"
            },
            "description": "Update the setting to restrict notifications to only verified or approved domains available to an owner."
          },
          {
            "name": "updateOrganizationAllowPrivateRepositoryForkingSetting",
            "type": {
              "name": "UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload"
            },
            "description": "Sets whether private repository forks are enabled for an organization."
          },
          {
            "name": "updateOrganizationWebCommitSignoffSetting",
            "type": {
              "name": "UpdateOrganizationWebCommitSignoffSettingPayload"
            },
            "description": "Sets whether contributors are required to sign off on web-based commits for repositories in an organization."
          },
          {
            "name": "updatePatreonSponsorability",
            "type": {
              "name": "UpdatePatreonSponsorabilityPayload"
            },
            "description": "Toggle the setting for your GitHub Sponsors profile that allows other GitHub accounts to sponsor you on GitHub while paying for the sponsorship on Patreon. Only applicable when you have a GitHub Sponsors profile and have connected your GitHub account with Patreon."
          },
          {
            "name": "updateProject",
            "type": {
              "name": "UpdateProjectPayload"
            },
            "description": "Updates an existing project."
          },
          {
            "name": "updateProjectCard",
            "type": {
              "name": "UpdateProjectCardPayload"
            },
            "description": "Updates an existing project card."
          },
          {
            "name": "updateProjectColumn",
            "type": {
              "name": "UpdateProjectColumnPayload"
            },
            "description": "Updates an existing project column."
          },
          {
            "name": "updateProjectV2",
            "type": {
              "name": "UpdateProjectV2Payload"
            },
            "description": "Updates an existing project."
          },
          {
            "name": "updateProjectV2Collaborators",
            "type": {
              "name": "UpdateProjectV2CollaboratorsPayload"
            },
            "description": "Update the collaborators on a team or a project"
          },
          {
            "name": "updateProjectV2DraftIssue",
            "type": {
              "name": "UpdateProjectV2DraftIssuePayload"
            },
            "description": "Updates a draft issue within a Project."
          },
          {
            "name": "updateProjectV2Field",
            "type": {
              "name": "UpdateProjectV2FieldPayload"
            },
            "description": "Update a project field."
          },
          {
            "name": "updateProjectV2ItemFieldValue",
            "type": {
              "name": "UpdateProjectV2ItemFieldValuePayload"
            },
            "description": "This mutation updates the value of a field for an item in a Project. Currently only single-select, text, number, date, and iteration fields are supported."
          },
          {
            "name": "updateProjectV2ItemPosition",
            "type": {
              "name": "UpdateProjectV2ItemPositionPayload"
            },
            "description": "This mutation updates the position of the item in the project, where the position represents the priority of an item."
          },
          {
            "name": "updateProjectV2StatusUpdate",
            "type": {
              "name": "UpdateProjectV2StatusUpdatePayload"
            },
            "description": "Updates a status update within a Project."
          },
          {
            "name": "updatePullRequest",
            "type": {
              "name": "UpdatePullRequestPayload"
            },
            "description": "Update a pull request"
          },
          {
            "name": "updatePullRequestBranch",
            "type": {
              "name": "UpdatePullRequestBranchPayload"
            },
            "description": "Merge or Rebase HEAD from upstream branch into pull request branch"
          },
          {
            "name": "updatePullRequestReview",
            "type": {
              "name": "UpdatePullRequestReviewPayload"
            },
            "description": "Updates the body of a pull request review."
          },
          {
            "name": "updatePullRequestReviewComment",
            "type": {
              "name": "UpdatePullRequestReviewCommentPayload"
            },
            "description": "Updates a pull request review comment."
          },
          {
            "name": "updateRef",
            "type": {
              "name": "UpdateRefPayload"
            },
            "description": "Update a Git Ref."
          },
          {
            "name": "updateRefs",
            "type": {
              "name": "UpdateRefsPayload"
            },
            "description": "Creates, updates and/or deletes multiple refs in a repository.\n\nThis mutation takes a list of `RefUpdate`s and performs these updates\non the repository. All updates are performed atomically, meaning that\nif one of them is rejected, no other ref will be modified.\n\n`RefUpdate.beforeOid` specifies that the given reference needs to point\nto the given value before performing any updates. A value of\n`0000000000000000000000000000000000000000` can be used to verify that\nthe references should not exist.\n\n`RefUpdate.afterOid` specifies the value that the given reference\nwill point to after performing all updates. A value of\n`0000000000000000000000000000000000000000` can be used to delete a\nreference.\n\nIf `RefUpdate.force` is set to `true`, a non-fast-forward updates\nfor the given reference will be allowed.\n"
          },
          {
            "name": "updateRepository",
            "type": {
              "name": "UpdateRepositoryPayload"
            },
            "description": "Update information about a repository."
          },
          {
            "name": "updateRepositoryRuleset",
            "type": {
              "name": "UpdateRepositoryRulesetPayload"
            },
            "description": "Update a repository ruleset"
          },
          {
            "name": "updateRepositoryWebCommitSignoffSetting",
            "type": {
              "name": "UpdateRepositoryWebCommitSignoffSettingPayload"
            },
            "description": "Sets whether contributors are required to sign off on web-based commits for a repository."
          },
          {
            "name": "updateSponsorshipPreferences",
            "type": {
              "name": "UpdateSponsorshipPreferencesPayload"
            },
            "description": "Change visibility of your sponsorship and opt in or out of email updates from the maintainer."
          },
          {
            "name": "updateSubscription",
            "type": {
              "name": "UpdateSubscriptionPayload"
            },
            "description": "Updates the state for subscribable subjects."
          },
          {
            "name": "updateTeamDiscussion",
            "type": {
              "name": "UpdateTeamDiscussionPayload"
            },
            "description": "Updates a team discussion."
          },
          {
            "name": "updateTeamDiscussionComment",
            "type": {
              "name": "UpdateTeamDiscussionCommentPayload"
            },
            "description": "Updates a discussion comment."
          },
          {
            "name": "updateTeamReviewAssignment",
            "type": {
              "name": "UpdateTeamReviewAssignmentPayload"
            },
            "description": "Updates team review assignment."
          },
          {
            "name": "updateTeamsRepository",
            "type": {
              "name": "UpdateTeamsRepositoryPayload"
            },
            "description": "Update team repository."
          },
          {
            "name": "updateTopics",
            "type": {
              "name": "UpdateTopicsPayload"
            },
            "description": "Replaces the repository's topics with the given topics."
          },
          {
            "name": "updateUserList",
            "type": {
              "name": "UpdateUserListPayload"
            },
            "description": "Updates an existing user list."
          },
          {
            "name": "updateUserListsForItem",
            "type": {
              "name": "UpdateUserListsForItemPayload"
            },
            "description": "Updates which of the viewer's lists an item belongs to"
          },
          {
            "name": "verifyVerifiableDomain",
            "type": {
              "name": "VerifyVerifiableDomainPayload"
            },
            "description": "Verify that a verifiable domain has the expected DNS record."
          }
        ]
      },
      {
        "name": "Node",
        "kind": "INTERFACE",
        "description": "An object with an ID.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "ID of the object."
          }
        ]
      },
      {
        "name": "NotificationRestrictionSettingValue",
        "kind": "ENUM",
        "description": "The possible values for the notification restriction setting.",
        "fields": null
      },
      {
        "name": "OIDCProvider",
        "kind": "OBJECT",
        "description": "An OIDC identity provider configured to provision identities for an enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.",
        "fields": [
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise this identity provider belongs to."
          },
          {
            "name": "externalIdentities",
            "type": {
              "name": null
            },
            "description": "ExternalIdentities provisioned by this identity provider."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OIDCProvider object"
          },
          {
            "name": "providerType",
            "type": {
              "name": null
            },
            "description": "The OIDC identity provider type"
          },
          {
            "name": "tenantId",
            "type": {
              "name": null
            },
            "description": "The id of the tenant this provider is attached to"
          }
        ]
      },
      {
        "name": "OIDCProviderType",
        "kind": "ENUM",
        "description": "The OIDC identity provider type",
        "fields": null
      },
      {
        "name": "OauthApplicationAuditEntryData",
        "kind": "INTERFACE",
        "description": "Metadata for an audit entry with action oauth_application.*",
        "fields": [
          {
            "name": "oauthApplicationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the OAuth application."
          },
          {
            "name": "oauthApplicationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the OAuth application"
          },
          {
            "name": "oauthApplicationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the OAuth application"
          }
        ]
      },
      {
        "name": "OauthApplicationCreateAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a oauth_application.create event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "applicationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The application URL of the OAuth application."
          },
          {
            "name": "callbackUrl",
            "type": {
              "name": "URI"
            },
            "description": "The callback URL of the OAuth application."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OauthApplicationCreateAuditEntry object"
          },
          {
            "name": "oauthApplicationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the OAuth application."
          },
          {
            "name": "oauthApplicationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the OAuth application"
          },
          {
            "name": "oauthApplicationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the OAuth application"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "rateLimit",
            "type": {
              "name": "Int"
            },
            "description": "The rate limit of the OAuth application."
          },
          {
            "name": "state",
            "type": {
              "name": "OauthApplicationCreateAuditEntryState"
            },
            "description": "The state of the OAuth application."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OauthApplicationCreateAuditEntryState",
        "kind": "ENUM",
        "description": "The state of an OAuth application when it was created.",
        "fields": null
      },
      {
        "name": "OperationType",
        "kind": "ENUM",
        "description": "The corresponding operation type for the action",
        "fields": null
      },
      {
        "name": "OrderDirection",
        "kind": "ENUM",
        "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
        "fields": null
      },
      {
        "name": "OrgAddBillingManagerAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.add_billing_manager",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgAddBillingManagerAuditEntry object"
          },
          {
            "name": "invitationEmail",
            "type": {
              "name": "String"
            },
            "description": "The email address used to invite a billing manager for the organization."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgAddMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.add_member",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgAddMemberAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "permission",
            "type": {
              "name": "OrgAddMemberAuditEntryPermission"
            },
            "description": "The permission level of the member added to the organization."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgAddMemberAuditEntryPermission",
        "kind": "ENUM",
        "description": "The permissions available to members on an Organization.",
        "fields": null
      },
      {
        "name": "OrgBlockUserAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.block_user",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "blockedUser",
            "type": {
              "name": "User"
            },
            "description": "The blocked user."
          },
          {
            "name": "blockedUserName",
            "type": {
              "name": "String"
            },
            "description": "The username of the blocked user."
          },
          {
            "name": "blockedUserResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the blocked user."
          },
          {
            "name": "blockedUserUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the blocked user."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgBlockUserAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgConfigDisableCollaboratorsOnlyAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.config.disable_collaborators_only event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgConfigDisableCollaboratorsOnlyAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgConfigEnableCollaboratorsOnlyAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.config.enable_collaborators_only event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgConfigEnableCollaboratorsOnlyAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgCreateAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.create event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "billingPlan",
            "type": {
              "name": "OrgCreateAuditEntryBillingPlan"
            },
            "description": "The billing plan for the Organization."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgCreateAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgCreateAuditEntryBillingPlan",
        "kind": "ENUM",
        "description": "The billing plans available for organizations.",
        "fields": null
      },
      {
        "name": "OrgDisableOauthAppRestrictionsAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.disable_oauth_app_restrictions event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgDisableOauthAppRestrictionsAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgDisableSamlAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.disable_saml event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "digestMethodUrl",
            "type": {
              "name": "URI"
            },
            "description": "The SAML provider's digest algorithm URL."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgDisableSamlAuditEntry object"
          },
          {
            "name": "issuerUrl",
            "type": {
              "name": "URI"
            },
            "description": "The SAML provider's issuer URL."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "signatureMethodUrl",
            "type": {
              "name": "URI"
            },
            "description": "The SAML provider's signature algorithm URL."
          },
          {
            "name": "singleSignOnUrl",
            "type": {
              "name": "URI"
            },
            "description": "The SAML provider's single sign-on URL."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgDisableTwoFactorRequirementAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.disable_two_factor_requirement event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgDisableTwoFactorRequirementAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgEnableOauthAppRestrictionsAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.enable_oauth_app_restrictions event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgEnableOauthAppRestrictionsAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgEnableSamlAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.enable_saml event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "digestMethodUrl",
            "type": {
              "name": "URI"
            },
            "description": "The SAML provider's digest algorithm URL."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgEnableSamlAuditEntry object"
          },
          {
            "name": "issuerUrl",
            "type": {
              "name": "URI"
            },
            "description": "The SAML provider's issuer URL."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "signatureMethodUrl",
            "type": {
              "name": "URI"
            },
            "description": "The SAML provider's signature algorithm URL."
          },
          {
            "name": "singleSignOnUrl",
            "type": {
              "name": "URI"
            },
            "description": "The SAML provider's single sign-on URL."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgEnableTwoFactorRequirementAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.enable_two_factor_requirement event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgEnableTwoFactorRequirementAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgEnterpriseOwnerOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for an organization's enterprise owner connections.",
        "fields": null
      },
      {
        "name": "OrgEnterpriseOwnerOrderField",
        "kind": "ENUM",
        "description": "Properties by which enterprise owners can be ordered.",
        "fields": null
      },
      {
        "name": "OrgInviteMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.invite_member event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The email address of the organization invitation."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgInviteMemberAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationInvitation",
            "type": {
              "name": "OrganizationInvitation"
            },
            "description": "The organization invitation."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgInviteToBusinessAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.invite_to_business event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgInviteToBusinessAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgOauthAppAccessApprovedAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.oauth_app_access_approved event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgOauthAppAccessApprovedAuditEntry object"
          },
          {
            "name": "oauthApplicationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the OAuth application."
          },
          {
            "name": "oauthApplicationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the OAuth application"
          },
          {
            "name": "oauthApplicationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the OAuth application"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgOauthAppAccessBlockedAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.oauth_app_access_blocked event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgOauthAppAccessBlockedAuditEntry object"
          },
          {
            "name": "oauthApplicationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the OAuth application."
          },
          {
            "name": "oauthApplicationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the OAuth application"
          },
          {
            "name": "oauthApplicationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the OAuth application"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgOauthAppAccessDeniedAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.oauth_app_access_denied event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgOauthAppAccessDeniedAuditEntry object"
          },
          {
            "name": "oauthApplicationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the OAuth application."
          },
          {
            "name": "oauthApplicationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the OAuth application"
          },
          {
            "name": "oauthApplicationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the OAuth application"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgOauthAppAccessRequestedAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.oauth_app_access_requested event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgOauthAppAccessRequestedAuditEntry object"
          },
          {
            "name": "oauthApplicationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the OAuth application."
          },
          {
            "name": "oauthApplicationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the OAuth application"
          },
          {
            "name": "oauthApplicationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the OAuth application"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgOauthAppAccessUnblockedAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.oauth_app_access_unblocked event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgOauthAppAccessUnblockedAuditEntry object"
          },
          {
            "name": "oauthApplicationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the OAuth application."
          },
          {
            "name": "oauthApplicationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the OAuth application"
          },
          {
            "name": "oauthApplicationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the OAuth application"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgRemoveBillingManagerAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.remove_billing_manager event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgRemoveBillingManagerAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "reason",
            "type": {
              "name": "OrgRemoveBillingManagerAuditEntryReason"
            },
            "description": "The reason for the billing manager being removed."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgRemoveBillingManagerAuditEntryReason",
        "kind": "ENUM",
        "description": "The reason a billing manager was removed from an Organization.",
        "fields": null
      },
      {
        "name": "OrgRemoveMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.remove_member event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgRemoveMemberAuditEntry object"
          },
          {
            "name": "membershipTypes",
            "type": {
              "name": null
            },
            "description": "The types of membership the member has with the organization."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "reason",
            "type": {
              "name": "OrgRemoveMemberAuditEntryReason"
            },
            "description": "The reason for the member being removed."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgRemoveMemberAuditEntryMembershipType",
        "kind": "ENUM",
        "description": "The type of membership a user has with an Organization.",
        "fields": null
      },
      {
        "name": "OrgRemoveMemberAuditEntryReason",
        "kind": "ENUM",
        "description": "The reason a member was removed from an Organization.",
        "fields": null
      },
      {
        "name": "OrgRemoveOutsideCollaboratorAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.remove_outside_collaborator event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgRemoveOutsideCollaboratorAuditEntry object"
          },
          {
            "name": "membershipTypes",
            "type": {
              "name": null
            },
            "description": "The types of membership the outside collaborator has with the organization."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "reason",
            "type": {
              "name": "OrgRemoveOutsideCollaboratorAuditEntryReason"
            },
            "description": "The reason for the outside collaborator being removed from the Organization."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgRemoveOutsideCollaboratorAuditEntryMembershipType",
        "kind": "ENUM",
        "description": "The type of membership a user has with an Organization.",
        "fields": null
      },
      {
        "name": "OrgRemoveOutsideCollaboratorAuditEntryReason",
        "kind": "ENUM",
        "description": "The reason an outside collaborator was removed from an Organization.",
        "fields": null
      },
      {
        "name": "OrgRestoreMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.restore_member event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgRestoreMemberAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "restoredCustomEmailRoutingsCount",
            "type": {
              "name": "Int"
            },
            "description": "The number of custom email routings for the restored member."
          },
          {
            "name": "restoredIssueAssignmentsCount",
            "type": {
              "name": "Int"
            },
            "description": "The number of issue assignments for the restored member."
          },
          {
            "name": "restoredMemberships",
            "type": {
              "name": null
            },
            "description": "Restored organization membership objects."
          },
          {
            "name": "restoredMembershipsCount",
            "type": {
              "name": "Int"
            },
            "description": "The number of restored memberships."
          },
          {
            "name": "restoredRepositoriesCount",
            "type": {
              "name": "Int"
            },
            "description": "The number of repositories of the restored member."
          },
          {
            "name": "restoredRepositoryStarsCount",
            "type": {
              "name": "Int"
            },
            "description": "The number of starred repositories for the restored member."
          },
          {
            "name": "restoredRepositoryWatchesCount",
            "type": {
              "name": "Int"
            },
            "description": "The number of watched repositories for the restored member."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgRestoreMemberAuditEntryMembership",
        "kind": "UNION",
        "description": "Types of memberships that can be restored for an Organization member.",
        "fields": null
      },
      {
        "name": "OrgRestoreMemberMembershipOrganizationAuditEntryData",
        "kind": "OBJECT",
        "description": "Metadata for an organization membership for org.restore_member actions",
        "fields": [
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          }
        ]
      },
      {
        "name": "OrgRestoreMemberMembershipRepositoryAuditEntryData",
        "kind": "OBJECT",
        "description": "Metadata for a repository membership for org.restore_member actions",
        "fields": [
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          }
        ]
      },
      {
        "name": "OrgRestoreMemberMembershipTeamAuditEntryData",
        "kind": "OBJECT",
        "description": "Metadata for a team membership for org.restore_member actions",
        "fields": [
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team associated with the action"
          },
          {
            "name": "teamName",
            "type": {
              "name": "String"
            },
            "description": "The name of the team"
          },
          {
            "name": "teamResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this team"
          },
          {
            "name": "teamUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this team"
          }
        ]
      },
      {
        "name": "OrgUnblockUserAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.unblock_user",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "blockedUser",
            "type": {
              "name": "User"
            },
            "description": "The user being unblocked by the organization."
          },
          {
            "name": "blockedUserName",
            "type": {
              "name": "String"
            },
            "description": "The username of the blocked user."
          },
          {
            "name": "blockedUserResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the blocked user."
          },
          {
            "name": "blockedUserUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the blocked user."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgUnblockUserAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgUpdateDefaultRepositoryPermissionAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.update_default_repository_permission",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgUpdateDefaultRepositoryPermissionAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "permission",
            "type": {
              "name": "OrgUpdateDefaultRepositoryPermissionAuditEntryPermission"
            },
            "description": "The new base repository permission level for the organization."
          },
          {
            "name": "permissionWas",
            "type": {
              "name": "OrgUpdateDefaultRepositoryPermissionAuditEntryPermission"
            },
            "description": "The former base repository permission level for the organization."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgUpdateDefaultRepositoryPermissionAuditEntryPermission",
        "kind": "ENUM",
        "description": "The default permission a repository can have in an Organization.",
        "fields": null
      },
      {
        "name": "OrgUpdateMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.update_member event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgUpdateMemberAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "permission",
            "type": {
              "name": "OrgUpdateMemberAuditEntryPermission"
            },
            "description": "The new member permission level for the organization."
          },
          {
            "name": "permissionWas",
            "type": {
              "name": "OrgUpdateMemberAuditEntryPermission"
            },
            "description": "The former member permission level for the organization."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "OrgUpdateMemberAuditEntryPermission",
        "kind": "ENUM",
        "description": "The permissions available to members on an Organization.",
        "fields": null
      },
      {
        "name": "OrgUpdateMemberRepositoryCreationPermissionAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.update_member_repository_creation_permission event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "canCreateRepositories",
            "type": {
              "name": "Boolean"
            },
            "description": "Can members create repositories in the organization."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgUpdateMemberRepositoryCreationPermissionAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          },
          {
            "name": "visibility",
            "type": {
              "name": "OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility"
            },
            "description": "The permission for visibility level of repositories for this organization."
          }
        ]
      },
      {
        "name": "OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility",
        "kind": "ENUM",
        "description": "The permissions available for repository creation on an Organization.",
        "fields": null
      },
      {
        "name": "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a org.update_member_repository_invitation_permission event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "canInviteOutsideCollaboratorsToRepositories",
            "type": {
              "name": "Boolean"
            },
            "description": "Can outside collaborators be invited to repositories in the organization."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrgUpdateMemberRepositoryInvitationPermissionAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "Organization",
        "kind": "OBJECT",
        "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
        "fields": [
          {
            "name": "announcementBanner",
            "type": {
              "name": "AnnouncementBanner"
            },
            "description": "The announcement banner set on this organization, if any. Only visible to members of the organization's enterprise."
          },
          {
            "name": "anyPinnableItems",
            "type": {
              "name": null
            },
            "description": "Determine if this repository owner has any items that can be pinned to their profile."
          },
          {
            "name": "archivedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the organization was archived."
          },
          {
            "name": "auditLog",
            "type": {
              "name": null
            },
            "description": "Audit log entries of the organization"
          },
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the organization's public avatar."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The organization's public profile description."
          },
          {
            "name": "descriptionHTML",
            "type": {
              "name": "String"
            },
            "description": "The organization's public profile description rendered to HTML."
          },
          {
            "name": "domains",
            "type": {
              "name": "VerifiableDomainConnection"
            },
            "description": "A list of domains owned by the organization."
          },
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The organization's public email."
          },
          {
            "name": "enterpriseOwners",
            "type": {
              "name": null
            },
            "description": "A list of owners of the organization's enterprise account."
          },
          {
            "name": "estimatedNextSponsorsPayoutInCents",
            "type": {
              "name": null
            },
            "description": "The estimated next GitHub Sponsors payout for this user/organization in cents (USD)."
          },
          {
            "name": "hasSponsorsListing",
            "type": {
              "name": null
            },
            "description": "True if this user/organization has a GitHub Sponsors listing."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Organization object"
          },
          {
            "name": "interactionAbility",
            "type": {
              "name": "RepositoryInteractionAbility"
            },
            "description": "The interaction ability settings for this organization."
          },
          {
            "name": "ipAllowListEnabledSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether the organization has an IP allow list enabled."
          },
          {
            "name": "ipAllowListEntries",
            "type": {
              "name": null
            },
            "description": "The IP addresses that are allowed to access resources owned by the organization."
          },
          {
            "name": "ipAllowListForInstalledAppsEnabledSetting",
            "type": {
              "name": null
            },
            "description": "The setting value for whether the organization has IP allow list configuration for installed GitHub Apps enabled."
          },
          {
            "name": "isSponsoredBy",
            "type": {
              "name": null
            },
            "description": "Whether the given account is sponsoring this user/organization."
          },
          {
            "name": "isSponsoringViewer",
            "type": {
              "name": null
            },
            "description": "True if the viewer is sponsored by this user/organization."
          },
          {
            "name": "isVerified",
            "type": {
              "name": null
            },
            "description": "Whether the organization has verified its profile email and website."
          },
          {
            "name": "itemShowcase",
            "type": {
              "name": null
            },
            "description": "Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity."
          },
          {
            "name": "lifetimeReceivedSponsorshipValues",
            "type": {
              "name": null
            },
            "description": "Calculate how much each sponsor has ever paid total to this maintainer via GitHub Sponsors. Does not include sponsorships paid via Patreon."
          },
          {
            "name": "location",
            "type": {
              "name": "String"
            },
            "description": "The organization's public profile location."
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "The organization's login name."
          },
          {
            "name": "mannequins",
            "type": {
              "name": null
            },
            "description": "A list of all mannequins for this organization."
          },
          {
            "name": "memberStatuses",
            "type": {
              "name": null
            },
            "description": "Get the status messages members of this entity have set that are either public or visible only to the organization."
          },
          {
            "name": "membersCanForkPrivateRepositories",
            "type": {
              "name": null
            },
            "description": "Members can fork private repositories in this organization"
          },
          {
            "name": "membersWithRole",
            "type": {
              "name": null
            },
            "description": "A list of users who are members of this organization."
          },
          {
            "name": "monthlyEstimatedSponsorsIncomeInCents",
            "type": {
              "name": null
            },
            "description": "The estimated monthly GitHub Sponsors income for this user/organization in cents (USD)."
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The organization's public profile name."
          },
          {
            "name": "newTeamResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path creating a new team"
          },
          {
            "name": "newTeamUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL creating a new team"
          },
          {
            "name": "notificationDeliveryRestrictionEnabledSetting",
            "type": {
              "name": null
            },
            "description": "Indicates if email notification delivery for this organization is restricted to verified or approved domains."
          },
          {
            "name": "organizationBillingEmail",
            "type": {
              "name": "String"
            },
            "description": "The billing email for the organization."
          },
          {
            "name": "packages",
            "type": {
              "name": null
            },
            "description": "A list of packages under the owner."
          },
          {
            "name": "pendingMembers",
            "type": {
              "name": null
            },
            "description": "A list of users who have been invited to join this organization."
          },
          {
            "name": "pinnableItems",
            "type": {
              "name": null
            },
            "description": "A list of repositories and gists this profile owner can pin to their profile."
          },
          {
            "name": "pinnedItems",
            "type": {
              "name": null
            },
            "description": "A list of repositories and gists this profile owner has pinned to their profile"
          },
          {
            "name": "pinnedItemsRemaining",
            "type": {
              "name": null
            },
            "description": "Returns how many more items this profile owner can pin to their profile."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "Find project by number."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "Find a project by number."
          },
          {
            "name": "projects",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          },
          {
            "name": "projectsResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path listing organization's projects"
          },
          {
            "name": "projectsUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL listing organization's projects"
          },
          {
            "name": "projectsV2",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          },
          {
            "name": "recentProjects",
            "type": {
              "name": null
            },
            "description": "Recent projects that this user has modified in the context of the owner."
          },
          {
            "name": "repositories",
            "type": {
              "name": null
            },
            "description": "A list of repositories that the user owns."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "Find Repository."
          },
          {
            "name": "repositoryDiscussionComments",
            "type": {
              "name": null
            },
            "description": "Discussion comments this user has authored."
          },
          {
            "name": "repositoryDiscussions",
            "type": {
              "name": null
            },
            "description": "Discussions this user has started."
          },
          {
            "name": "repositoryMigrations",
            "type": {
              "name": null
            },
            "description": "A list of all repository migrations for this organization."
          },
          {
            "name": "requiresTwoFactorAuthentication",
            "type": {
              "name": "Boolean"
            },
            "description": "When true the organization requires all members, billing managers, and outside collaborators to enable two-factor authentication."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this organization."
          },
          {
            "name": "ruleset",
            "type": {
              "name": "RepositoryRuleset"
            },
            "description": "Returns a single ruleset from the current organization by ID."
          },
          {
            "name": "rulesets",
            "type": {
              "name": "RepositoryRulesetConnection"
            },
            "description": "A list of rulesets for this organization."
          },
          {
            "name": "samlIdentityProvider",
            "type": {
              "name": "OrganizationIdentityProvider"
            },
            "description": "The Organization's SAML identity provider. Visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members."
          },
          {
            "name": "sponsoring",
            "type": {
              "name": null
            },
            "description": "List of users and organizations this entity is sponsoring."
          },
          {
            "name": "sponsors",
            "type": {
              "name": null
            },
            "description": "List of sponsors for this user or organization."
          },
          {
            "name": "sponsorsActivities",
            "type": {
              "name": null
            },
            "description": "Events involving this sponsorable, such as new sponsorships."
          },
          {
            "name": "sponsorsListing",
            "type": {
              "name": "SponsorsListing"
            },
            "description": "The GitHub Sponsors listing for this user or organization."
          },
          {
            "name": "sponsorshipForViewerAsSponsor",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor."
          },
          {
            "name": "sponsorshipForViewerAsSponsorable",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving."
          },
          {
            "name": "sponsorshipNewsletters",
            "type": {
              "name": null
            },
            "description": "List of sponsorship updates sent from this sponsorable to sponsors."
          },
          {
            "name": "sponsorshipsAsMaintainer",
            "type": {
              "name": null
            },
            "description": "The sponsorships where this user or organization is the maintainer receiving the funds."
          },
          {
            "name": "sponsorshipsAsSponsor",
            "type": {
              "name": null
            },
            "description": "The sponsorships where this user or organization is the funder."
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "Find an organization's team by its slug."
          },
          {
            "name": "teams",
            "type": {
              "name": null
            },
            "description": "A list of teams in this organization."
          },
          {
            "name": "teamsResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path listing organization's teams"
          },
          {
            "name": "teamsUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL listing organization's teams"
          },
          {
            "name": "totalSponsorshipAmountAsSponsorInCents",
            "type": {
              "name": "Int"
            },
            "description": "The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization."
          },
          {
            "name": "twitterUsername",
            "type": {
              "name": "String"
            },
            "description": "The organization's Twitter username."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this organization."
          },
          {
            "name": "viewerCanAdminister",
            "type": {
              "name": null
            },
            "description": "Organization is adminable by the viewer."
          },
          {
            "name": "viewerCanChangePinnedItems",
            "type": {
              "name": null
            },
            "description": "Can the viewer pin repositories and gists to the profile?"
          },
          {
            "name": "viewerCanCreateProjects",
            "type": {
              "name": null
            },
            "description": "Can the current viewer create new projects on this owner."
          },
          {
            "name": "viewerCanCreateRepositories",
            "type": {
              "name": null
            },
            "description": "Viewer can create repositories on this organization"
          },
          {
            "name": "viewerCanCreateTeams",
            "type": {
              "name": null
            },
            "description": "Viewer can create teams on this organization."
          },
          {
            "name": "viewerCanSponsor",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer is able to sponsor this user/organization."
          },
          {
            "name": "viewerIsAMember",
            "type": {
              "name": null
            },
            "description": "Viewer is an active member of this organization."
          },
          {
            "name": "viewerIsFollowing",
            "type": {
              "name": null
            },
            "description": "Whether or not this Organization is followed by the viewer."
          },
          {
            "name": "viewerIsSponsoring",
            "type": {
              "name": null
            },
            "description": "True if the viewer is sponsoring this user/organization."
          },
          {
            "name": "webCommitSignoffRequired",
            "type": {
              "name": null
            },
            "description": "Whether contributors are required to sign off on web-based commits for repositories in this organization."
          },
          {
            "name": "websiteUrl",
            "type": {
              "name": "URI"
            },
            "description": "The organization's public profile URL."
          }
        ]
      },
      {
        "name": "OrganizationAuditEntry",
        "kind": "UNION",
        "description": "An audit entry in an organization audit log.",
        "fields": null
      },
      {
        "name": "OrganizationAuditEntryConnection",
        "kind": "OBJECT",
        "description": "The connection type for OrganizationAuditEntry.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "OrganizationAuditEntryData",
        "kind": "INTERFACE",
        "description": "Metadata for an audit entry with action org.*",
        "fields": [
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          }
        ]
      },
      {
        "name": "OrganizationAuditEntryEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "OrganizationAuditEntry"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "OrganizationConnection",
        "kind": "OBJECT",
        "description": "A list of organizations managed by an enterprise.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "OrganizationEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Organization"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "OrganizationEnterpriseOwnerConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "OrganizationEnterpriseOwnerEdge",
        "kind": "OBJECT",
        "description": "An enterprise owner in the context of an organization that is part of the enterprise.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "User"
            },
            "description": "The item at the end of the edge."
          },
          {
            "name": "organizationRole",
            "type": {
              "name": null
            },
            "description": "The role of the owner with respect to the organization."
          }
        ]
      },
      {
        "name": "OrganizationIdentityProvider",
        "kind": "OBJECT",
        "description": "An Identity Provider configured to provision SAML and SCIM identities for Organizations. Visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members.",
        "fields": [
          {
            "name": "digestMethod",
            "type": {
              "name": "URI"
            },
            "description": "The digest algorithm used to sign SAML requests for the Identity Provider."
          },
          {
            "name": "externalIdentities",
            "type": {
              "name": null
            },
            "description": "External Identities provisioned by this Identity Provider"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrganizationIdentityProvider object"
          },
          {
            "name": "idpCertificate",
            "type": {
              "name": "X509Certificate"
            },
            "description": "The x509 certificate used by the Identity Provider to sign assertions and responses."
          },
          {
            "name": "issuer",
            "type": {
              "name": "String"
            },
            "description": "The Issuer Entity ID for the SAML Identity Provider"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "Organization this Identity Provider belongs to"
          },
          {
            "name": "signatureMethod",
            "type": {
              "name": "URI"
            },
            "description": "The signature algorithm used to sign SAML requests for the Identity Provider."
          },
          {
            "name": "ssoUrl",
            "type": {
              "name": "URI"
            },
            "description": "The URL endpoint for the Identity Provider's SAML SSO."
          }
        ]
      },
      {
        "name": "OrganizationInvitation",
        "kind": "OBJECT",
        "description": "An Invitation for a user to an organization.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The email address of the user invited to the organization."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrganizationInvitation object"
          },
          {
            "name": "invitationSource",
            "type": {
              "name": null
            },
            "description": "The source of the invitation."
          },
          {
            "name": "invitationType",
            "type": {
              "name": null
            },
            "description": "The type of invitation that was sent (e.g. email, user)."
          },
          {
            "name": "invitee",
            "type": {
              "name": "User"
            },
            "description": "The user who was invited to the organization."
          },
          {
            "name": "inviterActor",
            "type": {
              "name": "User"
            },
            "description": "The user who created the invitation."
          },
          {
            "name": "organization",
            "type": {
              "name": null
            },
            "description": "The organization the invite is for"
          },
          {
            "name": "role",
            "type": {
              "name": null
            },
            "description": "The user's pending role in the organization (e.g. member, owner)."
          }
        ]
      },
      {
        "name": "OrganizationInvitationConnection",
        "kind": "OBJECT",
        "description": "The connection type for OrganizationInvitation.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "OrganizationInvitationEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "OrganizationInvitation"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "OrganizationInvitationRole",
        "kind": "ENUM",
        "description": "The possible organization invitation roles.",
        "fields": null
      },
      {
        "name": "OrganizationInvitationSource",
        "kind": "ENUM",
        "description": "The possible organization invitation sources.",
        "fields": null
      },
      {
        "name": "OrganizationInvitationType",
        "kind": "ENUM",
        "description": "The possible organization invitation types.",
        "fields": null
      },
      {
        "name": "OrganizationMemberConnection",
        "kind": "OBJECT",
        "description": "A list of users who belong to the organization.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "OrganizationMemberEdge",
        "kind": "OBJECT",
        "description": "Represents a user within an organization.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "hasTwoFactorEnabled",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer."
          },
          {
            "name": "node",
            "type": {
              "name": "User"
            },
            "description": "The item at the end of the edge."
          },
          {
            "name": "role",
            "type": {
              "name": "OrganizationMemberRole"
            },
            "description": "The role this user has in the organization."
          }
        ]
      },
      {
        "name": "OrganizationMemberRole",
        "kind": "ENUM",
        "description": "The possible roles within an organization for its members.",
        "fields": null
      },
      {
        "name": "OrganizationMembersCanCreateRepositoriesSettingValue",
        "kind": "ENUM",
        "description": "The possible values for the members can create repositories setting on an organization.",
        "fields": null
      },
      {
        "name": "OrganizationMigration",
        "kind": "OBJECT",
        "description": "A GitHub Enterprise Importer (GEI) organization migration.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "String"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "failureReason",
            "type": {
              "name": "String"
            },
            "description": "The reason the organization migration failed."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the OrganizationMigration object"
          },
          {
            "name": "remainingRepositoriesCount",
            "type": {
              "name": "Int"
            },
            "description": "The remaining amount of repos to be migrated."
          },
          {
            "name": "sourceOrgName",
            "type": {
              "name": null
            },
            "description": "The name of the source organization to be migrated."
          },
          {
            "name": "sourceOrgUrl",
            "type": {
              "name": null
            },
            "description": "The URL of the source organization to migrate."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The migration state."
          },
          {
            "name": "targetOrgName",
            "type": {
              "name": null
            },
            "description": "The name of the target organization."
          },
          {
            "name": "totalRepositoriesCount",
            "type": {
              "name": "Int"
            },
            "description": "The total amount of repositories to be migrated."
          }
        ]
      },
      {
        "name": "OrganizationMigrationState",
        "kind": "ENUM",
        "description": "The Octoshift Organization migration state.",
        "fields": null
      },
      {
        "name": "OrganizationOrUser",
        "kind": "UNION",
        "description": "Used for argument of CreateProjectV2 mutation.",
        "fields": null
      },
      {
        "name": "OrganizationOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for organization connections.",
        "fields": null
      },
      {
        "name": "OrganizationOrderField",
        "kind": "ENUM",
        "description": "Properties by which organization connections can be ordered.",
        "fields": null
      },
      {
        "name": "OrganizationTeamsHovercardContext",
        "kind": "OBJECT",
        "description": "An organization teams hovercard context",
        "fields": [
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "A string describing this context"
          },
          {
            "name": "octicon",
            "type": {
              "name": null
            },
            "description": "An octicon to accompany this context"
          },
          {
            "name": "relevantTeams",
            "type": {
              "name": null
            },
            "description": "Teams in this organization the user is a member of that are relevant"
          },
          {
            "name": "teamsResourcePath",
            "type": {
              "name": null
            },
            "description": "The path for the full team list for this user"
          },
          {
            "name": "teamsUrl",
            "type": {
              "name": null
            },
            "description": "The URL for the full team list for this user"
          },
          {
            "name": "totalTeamCount",
            "type": {
              "name": null
            },
            "description": "The total number of teams the user is on in the organization"
          }
        ]
      },
      {
        "name": "OrganizationsHovercardContext",
        "kind": "OBJECT",
        "description": "An organization list hovercard context",
        "fields": [
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "A string describing this context"
          },
          {
            "name": "octicon",
            "type": {
              "name": null
            },
            "description": "An octicon to accompany this context"
          },
          {
            "name": "relevantOrganizations",
            "type": {
              "name": null
            },
            "description": "Organizations this user is a member of that are relevant"
          },
          {
            "name": "totalOrganizationCount",
            "type": {
              "name": null
            },
            "description": "The total number of organizations this user is in"
          }
        ]
      },
      {
        "name": "Package",
        "kind": "OBJECT",
        "description": "Information for an uploaded package.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Package object"
          },
          {
            "name": "latestVersion",
            "type": {
              "name": "PackageVersion"
            },
            "description": "Find the latest version for the package."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "Identifies the name of the package."
          },
          {
            "name": "packageType",
            "type": {
              "name": null
            },
            "description": "Identifies the type of the package."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository this package belongs to."
          },
          {
            "name": "statistics",
            "type": {
              "name": "PackageStatistics"
            },
            "description": "Statistics about package activity."
          },
          {
            "name": "version",
            "type": {
              "name": "PackageVersion"
            },
            "description": "Find package version by version string."
          },
          {
            "name": "versions",
            "type": {
              "name": null
            },
            "description": "list of versions for this package"
          }
        ]
      },
      {
        "name": "PackageConnection",
        "kind": "OBJECT",
        "description": "The connection type for Package.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PackageEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Package"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PackageFile",
        "kind": "OBJECT",
        "description": "A file in a package version.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PackageFile object"
          },
          {
            "name": "md5",
            "type": {
              "name": "String"
            },
            "description": "MD5 hash of the file."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "Name of the file."
          },
          {
            "name": "packageVersion",
            "type": {
              "name": "PackageVersion"
            },
            "description": "The package version this file belongs to."
          },
          {
            "name": "sha1",
            "type": {
              "name": "String"
            },
            "description": "SHA1 hash of the file."
          },
          {
            "name": "sha256",
            "type": {
              "name": "String"
            },
            "description": "SHA256 hash of the file."
          },
          {
            "name": "size",
            "type": {
              "name": "Int"
            },
            "description": "Size of the file in bytes."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": "URI"
            },
            "description": "URL to download the asset."
          }
        ]
      },
      {
        "name": "PackageFileConnection",
        "kind": "OBJECT",
        "description": "The connection type for PackageFile.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PackageFileEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PackageFile"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PackageFileOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of package files can be ordered upon return.",
        "fields": null
      },
      {
        "name": "PackageFileOrderField",
        "kind": "ENUM",
        "description": "Properties by which package file connections can be ordered.",
        "fields": null
      },
      {
        "name": "PackageOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of packages can be ordered upon return.",
        "fields": null
      },
      {
        "name": "PackageOrderField",
        "kind": "ENUM",
        "description": "Properties by which package connections can be ordered.",
        "fields": null
      },
      {
        "name": "PackageOwner",
        "kind": "INTERFACE",
        "description": "Represents an owner of a package.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PackageOwner object"
          },
          {
            "name": "packages",
            "type": {
              "name": null
            },
            "description": "A list of packages under the owner."
          }
        ]
      },
      {
        "name": "PackageStatistics",
        "kind": "OBJECT",
        "description": "Represents a object that contains package activity statistics such as downloads.",
        "fields": [
          {
            "name": "downloadsTotalCount",
            "type": {
              "name": null
            },
            "description": "Number of times the package was downloaded since it was created."
          }
        ]
      },
      {
        "name": "PackageTag",
        "kind": "OBJECT",
        "description": "A version tag contains the mapping between a tag name and a version.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PackageTag object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "Identifies the tag name of the version."
          },
          {
            "name": "version",
            "type": {
              "name": "PackageVersion"
            },
            "description": "Version that the tag is associated with."
          }
        ]
      },
      {
        "name": "PackageType",
        "kind": "ENUM",
        "description": "The possible types of a package.",
        "fields": null
      },
      {
        "name": "PackageVersion",
        "kind": "OBJECT",
        "description": "Information about a specific package version.",
        "fields": [
          {
            "name": "files",
            "type": {
              "name": null
            },
            "description": "List of files associated with this package version"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PackageVersion object"
          },
          {
            "name": "package",
            "type": {
              "name": "Package"
            },
            "description": "The package associated with this version."
          },
          {
            "name": "platform",
            "type": {
              "name": "String"
            },
            "description": "The platform this version was built for."
          },
          {
            "name": "preRelease",
            "type": {
              "name": null
            },
            "description": "Whether or not this version is a pre-release."
          },
          {
            "name": "readme",
            "type": {
              "name": "String"
            },
            "description": "The README of this package version."
          },
          {
            "name": "release",
            "type": {
              "name": "Release"
            },
            "description": "The release associated with this package version."
          },
          {
            "name": "statistics",
            "type": {
              "name": "PackageVersionStatistics"
            },
            "description": "Statistics about package activity."
          },
          {
            "name": "summary",
            "type": {
              "name": "String"
            },
            "description": "The package version summary."
          },
          {
            "name": "version",
            "type": {
              "name": null
            },
            "description": "The version string."
          }
        ]
      },
      {
        "name": "PackageVersionConnection",
        "kind": "OBJECT",
        "description": "The connection type for PackageVersion.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PackageVersionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PackageVersion"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PackageVersionOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of package versions can be ordered upon return.",
        "fields": null
      },
      {
        "name": "PackageVersionOrderField",
        "kind": "ENUM",
        "description": "Properties by which package version connections can be ordered.",
        "fields": null
      },
      {
        "name": "PackageVersionStatistics",
        "kind": "OBJECT",
        "description": "Represents a object that contains package version activity statistics such as downloads.",
        "fields": [
          {
            "name": "downloadsTotalCount",
            "type": {
              "name": null
            },
            "description": "Number of times the package was downloaded since it was created."
          }
        ]
      },
      {
        "name": "PageInfo",
        "kind": "OBJECT",
        "description": "Information about pagination in a connection.",
        "fields": [
          {
            "name": "endCursor",
            "type": {
              "name": "String"
            },
            "description": "When paginating forwards, the cursor to continue."
          },
          {
            "name": "hasNextPage",
            "type": {
              "name": null
            },
            "description": "When paginating forwards, are there more items?"
          },
          {
            "name": "hasPreviousPage",
            "type": {
              "name": null
            },
            "description": "When paginating backwards, are there more items?"
          },
          {
            "name": "startCursor",
            "type": {
              "name": "String"
            },
            "description": "When paginating backwards, the cursor to continue."
          }
        ]
      },
      {
        "name": "ParentIssueAddedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'parent_issue_added' event on a given issue.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ParentIssueAddedEvent object"
          },
          {
            "name": "parent",
            "type": {
              "name": "Issue"
            },
            "description": "The parent issue added."
          }
        ]
      },
      {
        "name": "ParentIssueRemovedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'parent_issue_removed' event on a given issue.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ParentIssueRemovedEvent object"
          },
          {
            "name": "parent",
            "type": {
              "name": "Issue"
            },
            "description": "The parent issue removed."
          }
        ]
      },
      {
        "name": "PatchStatus",
        "kind": "ENUM",
        "description": "The possible types of patch statuses.",
        "fields": null
      },
      {
        "name": "PermissionGranter",
        "kind": "UNION",
        "description": "Types that can grant permissions on a repository to a user",
        "fields": null
      },
      {
        "name": "PermissionSource",
        "kind": "OBJECT",
        "description": "A level of permission and source for a user's access to a repository.",
        "fields": [
          {
            "name": "organization",
            "type": {
              "name": null
            },
            "description": "The organization the repository belongs to."
          },
          {
            "name": "permission",
            "type": {
              "name": null
            },
            "description": "The level of access this source has granted to the user."
          },
          {
            "name": "roleName",
            "type": {
              "name": "String"
            },
            "description": "The name of the role this source has granted to the user."
          },
          {
            "name": "source",
            "type": {
              "name": null
            },
            "description": "The source of this permission."
          }
        ]
      },
      {
        "name": "PinEnvironmentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of PinEnvironment",
        "fields": null
      },
      {
        "name": "PinEnvironmentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of PinEnvironment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "environment",
            "type": {
              "name": "Environment"
            },
            "description": "The environment that was pinned"
          },
          {
            "name": "pinnedEnvironment",
            "type": {
              "name": "PinnedEnvironment"
            },
            "description": "The pinned environment if we pinned"
          }
        ]
      },
      {
        "name": "PinIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of PinIssue",
        "fields": null
      },
      {
        "name": "PinIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of PinIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The issue that was pinned"
          }
        ]
      },
      {
        "name": "PinnableItem",
        "kind": "UNION",
        "description": "Types that can be pinned to a profile page.",
        "fields": null
      },
      {
        "name": "PinnableItemConnection",
        "kind": "OBJECT",
        "description": "The connection type for PinnableItem.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PinnableItemEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PinnableItem"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PinnableItemType",
        "kind": "ENUM",
        "description": "Represents items that can be pinned to a profile page or dashboard.",
        "fields": null
      },
      {
        "name": "PinnedDiscussion",
        "kind": "OBJECT",
        "description": "A Pinned Discussion is a discussion pinned to a repository's index page.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "discussion",
            "type": {
              "name": null
            },
            "description": "The discussion that was pinned."
          },
          {
            "name": "gradientStopColors",
            "type": {
              "name": null
            },
            "description": "Color stops of the chosen gradient"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PinnedDiscussion object"
          },
          {
            "name": "pattern",
            "type": {
              "name": null
            },
            "description": "Background texture pattern"
          },
          {
            "name": "pinnedBy",
            "type": {
              "name": null
            },
            "description": "The actor that pinned this discussion."
          },
          {
            "name": "preconfiguredGradient",
            "type": {
              "name": "PinnedDiscussionGradient"
            },
            "description": "Preconfigured background gradient option"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "PinnedDiscussionConnection",
        "kind": "OBJECT",
        "description": "The connection type for PinnedDiscussion.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PinnedDiscussionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PinnedDiscussion"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PinnedDiscussionGradient",
        "kind": "ENUM",
        "description": "Preconfigured gradients that may be used to style discussions pinned within a repository.",
        "fields": null
      },
      {
        "name": "PinnedDiscussionPattern",
        "kind": "ENUM",
        "description": "Preconfigured background patterns that may be used to style discussions pinned within a repository.",
        "fields": null
      },
      {
        "name": "PinnedEnvironment",
        "kind": "OBJECT",
        "description": "Represents a pinned environment on a given repository",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the pinned environment was created"
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "environment",
            "type": {
              "name": null
            },
            "description": "Identifies the environment associated."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PinnedEnvironment object"
          },
          {
            "name": "position",
            "type": {
              "name": null
            },
            "description": "Identifies the position of the pinned environment."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository that this environment was pinned to."
          }
        ]
      },
      {
        "name": "PinnedEnvironmentConnection",
        "kind": "OBJECT",
        "description": "The connection type for PinnedEnvironment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PinnedEnvironmentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PinnedEnvironment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PinnedEnvironmentOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for pinned environments",
        "fields": null
      },
      {
        "name": "PinnedEnvironmentOrderField",
        "kind": "ENUM",
        "description": "Properties by which pinned environments connections can be ordered",
        "fields": null
      },
      {
        "name": "PinnedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'pinned' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PinnedEvent object"
          },
          {
            "name": "issue",
            "type": {
              "name": null
            },
            "description": "Identifies the issue associated with the event."
          }
        ]
      },
      {
        "name": "PinnedIssue",
        "kind": "OBJECT",
        "description": "A Pinned Issue is a issue pinned to a repository's index page.",
        "fields": [
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PinnedIssue object"
          },
          {
            "name": "issue",
            "type": {
              "name": null
            },
            "description": "The issue that was pinned."
          },
          {
            "name": "pinnedBy",
            "type": {
              "name": null
            },
            "description": "The actor that pinned this issue."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository that this issue was pinned to."
          }
        ]
      },
      {
        "name": "PinnedIssueConnection",
        "kind": "OBJECT",
        "description": "The connection type for PinnedIssue.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PinnedIssueEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PinnedIssue"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PreciseDateTime",
        "kind": "SCALAR",
        "description": "An ISO-8601 encoded UTC date string with millisecond precision.",
        "fields": null
      },
      {
        "name": "PrivateRepositoryForkingDisableAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a private_repository_forking.disable event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PrivateRepositoryForkingDisableAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "PrivateRepositoryForkingEnableAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a private_repository_forking.enable event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PrivateRepositoryForkingEnableAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "ProfileItemShowcase",
        "kind": "OBJECT",
        "description": "A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own.",
        "fields": [
          {
            "name": "hasPinnedItems",
            "type": {
              "name": null
            },
            "description": "Whether or not the owner has pinned any repositories or gists."
          },
          {
            "name": "items",
            "type": {
              "name": null
            },
            "description": "The repositories and gists in the showcase. If the profile owner has any pinned items, those will be returned. Otherwise, the profile owner's popular repositories will be returned."
          }
        ]
      },
      {
        "name": "ProfileOwner",
        "kind": "INTERFACE",
        "description": "Represents any entity on GitHub that has a profile page.",
        "fields": [
          {
            "name": "anyPinnableItems",
            "type": {
              "name": null
            },
            "description": "Determine if this repository owner has any items that can be pinned to their profile."
          },
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The public profile email."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProfileOwner object"
          },
          {
            "name": "itemShowcase",
            "type": {
              "name": null
            },
            "description": "Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity."
          },
          {
            "name": "location",
            "type": {
              "name": "String"
            },
            "description": "The public profile location."
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "The username used to login."
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The public profile name."
          },
          {
            "name": "pinnableItems",
            "type": {
              "name": null
            },
            "description": "A list of repositories and gists this profile owner can pin to their profile."
          },
          {
            "name": "pinnedItems",
            "type": {
              "name": null
            },
            "description": "A list of repositories and gists this profile owner has pinned to their profile"
          },
          {
            "name": "pinnedItemsRemaining",
            "type": {
              "name": null
            },
            "description": "Returns how many more items this profile owner can pin to their profile."
          },
          {
            "name": "viewerCanChangePinnedItems",
            "type": {
              "name": null
            },
            "description": "Can the viewer pin repositories and gists to the profile?"
          },
          {
            "name": "websiteUrl",
            "type": {
              "name": "URI"
            },
            "description": "The public profile website URL."
          }
        ]
      },
      {
        "name": "Project",
        "kind": "OBJECT",
        "description": "Projects manage issues, pull requests and notes within a project owner.",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": "String"
            },
            "description": "The project's description body."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The projects description body rendered to HTML."
          },
          {
            "name": "closed",
            "type": {
              "name": null
            },
            "description": "Indicates if the object is closed (definition of closed may depend on type)"
          },
          {
            "name": "closedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the object was closed."
          },
          {
            "name": "columns",
            "type": {
              "name": null
            },
            "description": "List of columns in the project"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who originally created the project."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Project object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The project's name."
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "The project's number."
          },
          {
            "name": "owner",
            "type": {
              "name": null
            },
            "description": "The project's owner. Currently limited to repositories, organizations, and users."
          },
          {
            "name": "pendingCards",
            "type": {
              "name": null
            },
            "description": "List of pending cards in this project"
          },
          {
            "name": "progress",
            "type": {
              "name": null
            },
            "description": "Project progress details."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this project"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "Whether the project is open or closed."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this project"
          },
          {
            "name": "viewerCanClose",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be closed by the viewer."
          },
          {
            "name": "viewerCanReopen",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be reopened by the viewer."
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          }
        ]
      },
      {
        "name": "ProjectCard",
        "kind": "OBJECT",
        "description": "A card in a project.",
        "fields": [
          {
            "name": "column",
            "type": {
              "name": "ProjectColumn"
            },
            "description": "The project column this card is associated under. A card may only belong to one\nproject column at a time. The column field will be null if the card is created\nin a pending state and has yet to be associated with a column. Once cards are\nassociated with a column, they will not become pending in the future.\n"
          },
          {
            "name": "content",
            "type": {
              "name": "ProjectCardItem"
            },
            "description": "The card content item"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created this card"
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectCard object"
          },
          {
            "name": "isArchived",
            "type": {
              "name": null
            },
            "description": "Whether the card is archived"
          },
          {
            "name": "note",
            "type": {
              "name": "String"
            },
            "description": "The card note"
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this card."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this card"
          },
          {
            "name": "state",
            "type": {
              "name": "ProjectCardState"
            },
            "description": "The state of ProjectCard"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this card"
          }
        ]
      },
      {
        "name": "ProjectCardArchivedState",
        "kind": "ENUM",
        "description": "The possible archived states of a project card.",
        "fields": null
      },
      {
        "name": "ProjectCardConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectCard.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectCardEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectCard"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectCardImport",
        "kind": "INPUT_OBJECT",
        "description": "An issue or PR and its owning repository to be used in a project card.",
        "fields": null
      },
      {
        "name": "ProjectCardItem",
        "kind": "UNION",
        "description": "Types that can be inside Project Cards.",
        "fields": null
      },
      {
        "name": "ProjectCardState",
        "kind": "ENUM",
        "description": "Various content states of a ProjectCard",
        "fields": null
      },
      {
        "name": "ProjectColumn",
        "kind": "OBJECT",
        "description": "A column inside a project.",
        "fields": [
          {
            "name": "cards",
            "type": {
              "name": null
            },
            "description": "List of cards in the column"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectColumn object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The project column's name."
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this column."
          },
          {
            "name": "purpose",
            "type": {
              "name": "ProjectColumnPurpose"
            },
            "description": "The semantic purpose of the column"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this project column"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this project column"
          }
        ]
      },
      {
        "name": "ProjectColumnConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectColumn.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectColumnEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectColumn"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectColumnImport",
        "kind": "INPUT_OBJECT",
        "description": "A project column and a list of its issues and PRs.",
        "fields": null
      },
      {
        "name": "ProjectColumnPurpose",
        "kind": "ENUM",
        "description": "The semantic purpose of the column - todo, in progress, or done.",
        "fields": null
      },
      {
        "name": "ProjectConnection",
        "kind": "OBJECT",
        "description": "A list of projects associated with the owner.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Project"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of projects can be ordered upon return.",
        "fields": null
      },
      {
        "name": "ProjectOrderField",
        "kind": "ENUM",
        "description": "Properties by which project connections can be ordered.",
        "fields": null
      },
      {
        "name": "ProjectOwner",
        "kind": "INTERFACE",
        "description": "Represents an owner of a Project.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectOwner object"
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "Find project by number."
          },
          {
            "name": "projects",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          },
          {
            "name": "projectsResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path listing owners projects"
          },
          {
            "name": "projectsUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL listing owners projects"
          },
          {
            "name": "viewerCanCreateProjects",
            "type": {
              "name": null
            },
            "description": "Can the current viewer create new projects on this owner."
          }
        ]
      },
      {
        "name": "ProjectProgress",
        "kind": "OBJECT",
        "description": "Project progress stats.",
        "fields": [
          {
            "name": "doneCount",
            "type": {
              "name": null
            },
            "description": "The number of done cards."
          },
          {
            "name": "donePercentage",
            "type": {
              "name": null
            },
            "description": "The percentage of done cards."
          },
          {
            "name": "enabled",
            "type": {
              "name": null
            },
            "description": "Whether progress tracking is enabled and cards with purpose exist for this project"
          },
          {
            "name": "inProgressCount",
            "type": {
              "name": null
            },
            "description": "The number of in-progress cards."
          },
          {
            "name": "inProgressPercentage",
            "type": {
              "name": null
            },
            "description": "The percentage of in-progress cards."
          },
          {
            "name": "todoCount",
            "type": {
              "name": null
            },
            "description": "The number of to do cards."
          },
          {
            "name": "todoPercentage",
            "type": {
              "name": null
            },
            "description": "The percentage of to do cards."
          }
        ]
      },
      {
        "name": "ProjectState",
        "kind": "ENUM",
        "description": "State of the project; either 'open' or 'closed'",
        "fields": null
      },
      {
        "name": "ProjectTemplate",
        "kind": "ENUM",
        "description": "GitHub-provided templates for Projects",
        "fields": null
      },
      {
        "name": "ProjectV2",
        "kind": "OBJECT",
        "description": "New projects that manage issues, pull requests and drafts using tables and boards.",
        "fields": [
          {
            "name": "closed",
            "type": {
              "name": null
            },
            "description": "Returns true if the project is closed."
          },
          {
            "name": "closedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the object was closed."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who originally created the project."
          },
          {
            "name": "field",
            "type": {
              "name": "ProjectV2FieldConfiguration"
            },
            "description": "A field of the project"
          },
          {
            "name": "fields",
            "type": {
              "name": null
            },
            "description": "List of fields and their constraints in the project"
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2 object"
          },
          {
            "name": "items",
            "type": {
              "name": null
            },
            "description": "List of items in the project"
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "The project's number."
          },
          {
            "name": "owner",
            "type": {
              "name": null
            },
            "description": "The project's owner. Currently limited to organizations and users."
          },
          {
            "name": "public",
            "type": {
              "name": null
            },
            "description": "Returns true if the project is public."
          },
          {
            "name": "readme",
            "type": {
              "name": "String"
            },
            "description": "The project's readme."
          },
          {
            "name": "repositories",
            "type": {
              "name": null
            },
            "description": "The repositories the project is linked to."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this project"
          },
          {
            "name": "shortDescription",
            "type": {
              "name": "String"
            },
            "description": "The project's short description."
          },
          {
            "name": "statusUpdates",
            "type": {
              "name": null
            },
            "description": "List of the status updates in the project."
          },
          {
            "name": "teams",
            "type": {
              "name": null
            },
            "description": "The teams the project is linked to."
          },
          {
            "name": "template",
            "type": {
              "name": null
            },
            "description": "Returns true if this project is a template."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "The project's name."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this project"
          },
          {
            "name": "view",
            "type": {
              "name": "ProjectV2View"
            },
            "description": "A view of the project"
          },
          {
            "name": "viewerCanClose",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be closed by the viewer."
          },
          {
            "name": "viewerCanReopen",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be reopened by the viewer."
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "views",
            "type": {
              "name": null
            },
            "description": "List of views in the project"
          },
          {
            "name": "workflow",
            "type": {
              "name": "ProjectV2Workflow"
            },
            "description": "A workflow of the project"
          },
          {
            "name": "workflows",
            "type": {
              "name": null
            },
            "description": "List of the workflows in the project"
          }
        ]
      },
      {
        "name": "ProjectV2Actor",
        "kind": "UNION",
        "description": "Possible collaborators for a project.",
        "fields": null
      },
      {
        "name": "ProjectV2ActorConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2Actor.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2ActorEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2Actor"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2Collaborator",
        "kind": "INPUT_OBJECT",
        "description": "A collaborator to update on a project. Only one of the userId or teamId should be provided.",
        "fields": null
      },
      {
        "name": "ProjectV2Connection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2CustomFieldType",
        "kind": "ENUM",
        "description": "The type of a project field.",
        "fields": null
      },
      {
        "name": "ProjectV2Edge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2Field",
        "kind": "OBJECT",
        "description": "A field inside a project.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "dataType",
            "type": {
              "name": null
            },
            "description": "The field's type."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2Field object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The project field's name."
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this field."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2FieldCommon",
        "kind": "INTERFACE",
        "description": "Common fields across different project field types",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "dataType",
            "type": {
              "name": null
            },
            "description": "The field's type."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2FieldCommon object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The project field's name."
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this field."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2FieldConfiguration",
        "kind": "UNION",
        "description": "Configurations for project fields.",
        "fields": null
      },
      {
        "name": "ProjectV2FieldConfigurationConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2FieldConfiguration.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2FieldConfigurationEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2FieldConfiguration"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2FieldConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2Field.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2FieldEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2Field"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2FieldOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for project v2 field connections",
        "fields": null
      },
      {
        "name": "ProjectV2FieldOrderField",
        "kind": "ENUM",
        "description": "Properties by which project v2 field connections can be ordered.",
        "fields": null
      },
      {
        "name": "ProjectV2FieldType",
        "kind": "ENUM",
        "description": "The type of a project field.",
        "fields": null
      },
      {
        "name": "ProjectV2FieldValue",
        "kind": "INPUT_OBJECT",
        "description": "The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time.",
        "fields": null
      },
      {
        "name": "ProjectV2Filters",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which to filter lists of projects.",
        "fields": null
      },
      {
        "name": "ProjectV2Item",
        "kind": "OBJECT",
        "description": "An item within a Project.",
        "fields": [
          {
            "name": "content",
            "type": {
              "name": "ProjectV2ItemContent"
            },
            "description": "The content of the referenced draft issue, issue, or pull request"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the item."
          },
          {
            "name": "fieldValueByName",
            "type": {
              "name": "ProjectV2ItemFieldValue"
            },
            "description": "The field value of the first project field which matches the 'name' argument that is set on the item."
          },
          {
            "name": "fieldValues",
            "type": {
              "name": null
            },
            "description": "The field values that are set on the item."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2Item object"
          },
          {
            "name": "isArchived",
            "type": {
              "name": null
            },
            "description": "Whether the item is archived."
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this item."
          },
          {
            "name": "type",
            "type": {
              "name": null
            },
            "description": "The type of the item."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2ItemConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2Item.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2ItemContent",
        "kind": "UNION",
        "description": "Types that can be inside Project Items.",
        "fields": null
      },
      {
        "name": "ProjectV2ItemEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2Item"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldDateValue",
        "kind": "OBJECT",
        "description": "The value of a date field in a Project item.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the item."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "date",
            "type": {
              "name": "Date"
            },
            "description": "Date value for the field"
          },
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The project field that contains this value."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2ItemFieldDateValue object"
          },
          {
            "name": "item",
            "type": {
              "name": null
            },
            "description": "The project item that contains this value."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldIterationValue",
        "kind": "OBJECT",
        "description": "The value of an iteration field in a Project item.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the item."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "duration",
            "type": {
              "name": null
            },
            "description": "The duration of the iteration in days."
          },
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The project field that contains this value."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2ItemFieldIterationValue object"
          },
          {
            "name": "item",
            "type": {
              "name": null
            },
            "description": "The project item that contains this value."
          },
          {
            "name": "iterationId",
            "type": {
              "name": null
            },
            "description": "The ID of the iteration."
          },
          {
            "name": "startDate",
            "type": {
              "name": null
            },
            "description": "The start date of the iteration."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "The title of the iteration."
          },
          {
            "name": "titleHTML",
            "type": {
              "name": null
            },
            "description": "The title of the iteration, with HTML."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldLabelValue",
        "kind": "OBJECT",
        "description": "The value of the labels field in a Project item.",
        "fields": [
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The field that contains this value."
          },
          {
            "name": "labels",
            "type": {
              "name": "LabelConnection"
            },
            "description": "Labels value of a field"
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldMilestoneValue",
        "kind": "OBJECT",
        "description": "The value of a milestone field in a Project item.",
        "fields": [
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The field that contains this value."
          },
          {
            "name": "milestone",
            "type": {
              "name": "Milestone"
            },
            "description": "Milestone value of a field"
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldNumberValue",
        "kind": "OBJECT",
        "description": "The value of a number field in a Project item.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the item."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The project field that contains this value."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2ItemFieldNumberValue object"
          },
          {
            "name": "item",
            "type": {
              "name": null
            },
            "description": "The project item that contains this value."
          },
          {
            "name": "number",
            "type": {
              "name": "Float"
            },
            "description": "Number as a float(8)"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldPullRequestValue",
        "kind": "OBJECT",
        "description": "The value of a pull request field in a Project item.",
        "fields": [
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The field that contains this value."
          },
          {
            "name": "pullRequests",
            "type": {
              "name": "PullRequestConnection"
            },
            "description": "The pull requests for this field"
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldRepositoryValue",
        "kind": "OBJECT",
        "description": "The value of a repository field in a Project item.",
        "fields": [
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The field that contains this value."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository for this field."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldReviewerValue",
        "kind": "OBJECT",
        "description": "The value of a reviewers field in a Project item.",
        "fields": [
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The field that contains this value."
          },
          {
            "name": "reviewers",
            "type": {
              "name": "RequestedReviewerConnection"
            },
            "description": "The reviewers for this field."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldSingleSelectValue",
        "kind": "OBJECT",
        "description": "The value of a single select field in a Project item.",
        "fields": [
          {
            "name": "color",
            "type": {
              "name": null
            },
            "description": "The color applied to the selected single-select option."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the item."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "A plain-text description of the selected single-select option, such as what the option means."
          },
          {
            "name": "descriptionHTML",
            "type": {
              "name": "String"
            },
            "description": "The description of the selected single-select option, including HTML tags."
          },
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The project field that contains this value."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2ItemFieldSingleSelectValue object"
          },
          {
            "name": "item",
            "type": {
              "name": null
            },
            "description": "The project item that contains this value."
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The name of the selected single select option."
          },
          {
            "name": "nameHTML",
            "type": {
              "name": "String"
            },
            "description": "The html name of the selected single select option."
          },
          {
            "name": "optionId",
            "type": {
              "name": "String"
            },
            "description": "The id of the selected single select option."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldTextValue",
        "kind": "OBJECT",
        "description": "The value of a text field in a Project item.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the item."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The project field that contains this value."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2ItemFieldTextValue object"
          },
          {
            "name": "item",
            "type": {
              "name": null
            },
            "description": "The project item that contains this value."
          },
          {
            "name": "text",
            "type": {
              "name": "String"
            },
            "description": "Text value of a field"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldUserValue",
        "kind": "OBJECT",
        "description": "The value of a user field in a Project item.",
        "fields": [
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The field that contains this value."
          },
          {
            "name": "users",
            "type": {
              "name": "UserConnection"
            },
            "description": "The users for this field"
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldValue",
        "kind": "UNION",
        "description": "Project field values",
        "fields": null
      },
      {
        "name": "ProjectV2ItemFieldValueCommon",
        "kind": "INTERFACE",
        "description": "Common fields across different project field value types",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the item."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The project field that contains this value."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2ItemFieldValueCommon object"
          },
          {
            "name": "item",
            "type": {
              "name": null
            },
            "description": "The project item that contains this value."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldValueConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2ItemFieldValue.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldValueEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2ItemFieldValue"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2ItemFieldValueOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for project v2 item field value connections",
        "fields": null
      },
      {
        "name": "ProjectV2ItemFieldValueOrderField",
        "kind": "ENUM",
        "description": "Properties by which project v2 item field value connections can be ordered.",
        "fields": null
      },
      {
        "name": "ProjectV2ItemOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for project v2 item connections",
        "fields": null
      },
      {
        "name": "ProjectV2ItemOrderField",
        "kind": "ENUM",
        "description": "Properties by which project v2 item connections can be ordered.",
        "fields": null
      },
      {
        "name": "ProjectV2ItemType",
        "kind": "ENUM",
        "description": "The type of a project item.",
        "fields": null
      },
      {
        "name": "ProjectV2IterationField",
        "kind": "OBJECT",
        "description": "An iteration field inside a project.",
        "fields": [
          {
            "name": "configuration",
            "type": {
              "name": null
            },
            "description": "Iteration configuration settings"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "dataType",
            "type": {
              "name": null
            },
            "description": "The field's type."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2IterationField object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The project field's name."
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this field."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2IterationFieldConfiguration",
        "kind": "OBJECT",
        "description": "Iteration field configuration for a project.",
        "fields": [
          {
            "name": "completedIterations",
            "type": {
              "name": null
            },
            "description": "The iteration's completed iterations"
          },
          {
            "name": "duration",
            "type": {
              "name": null
            },
            "description": "The iteration's duration in days"
          },
          {
            "name": "iterations",
            "type": {
              "name": null
            },
            "description": "The iteration's iterations"
          },
          {
            "name": "startDay",
            "type": {
              "name": null
            },
            "description": "The iteration's start day of the week"
          }
        ]
      },
      {
        "name": "ProjectV2IterationFieldIteration",
        "kind": "OBJECT",
        "description": "Iteration field iteration settings for a project.",
        "fields": [
          {
            "name": "duration",
            "type": {
              "name": null
            },
            "description": "The iteration's duration in days"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The iteration's ID."
          },
          {
            "name": "startDate",
            "type": {
              "name": null
            },
            "description": "The iteration's start date"
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "The iteration's title."
          },
          {
            "name": "titleHTML",
            "type": {
              "name": null
            },
            "description": "The iteration's html title."
          }
        ]
      },
      {
        "name": "ProjectV2Order",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of projects can be ordered upon return.",
        "fields": null
      },
      {
        "name": "ProjectV2OrderField",
        "kind": "ENUM",
        "description": "Properties by which projects can be ordered.",
        "fields": null
      },
      {
        "name": "ProjectV2Owner",
        "kind": "INTERFACE",
        "description": "Represents an owner of a project.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2Owner object"
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "Find a project by number."
          },
          {
            "name": "projectsV2",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          }
        ]
      },
      {
        "name": "ProjectV2PermissionLevel",
        "kind": "ENUM",
        "description": "The possible roles of a collaborator on a project.",
        "fields": null
      },
      {
        "name": "ProjectV2Recent",
        "kind": "INTERFACE",
        "description": "Recent projects for the owner.",
        "fields": [
          {
            "name": "recentProjects",
            "type": {
              "name": null
            },
            "description": "Recent projects that this user has modified in the context of the owner."
          }
        ]
      },
      {
        "name": "ProjectV2Roles",
        "kind": "ENUM",
        "description": "The possible roles of a collaborator on a project.",
        "fields": null
      },
      {
        "name": "ProjectV2SingleSelectField",
        "kind": "OBJECT",
        "description": "A single select field inside a project.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "dataType",
            "type": {
              "name": null
            },
            "description": "The field's type."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2SingleSelectField object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The project field's name."
          },
          {
            "name": "options",
            "type": {
              "name": null
            },
            "description": "Options for the single select field"
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this field."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2SingleSelectFieldOption",
        "kind": "OBJECT",
        "description": "Single select field option for a configuration for a project.",
        "fields": [
          {
            "name": "color",
            "type": {
              "name": null
            },
            "description": "The option's display color."
          },
          {
            "name": "description",
            "type": {
              "name": null
            },
            "description": "The option's plain-text description."
          },
          {
            "name": "descriptionHTML",
            "type": {
              "name": null
            },
            "description": "The option's description, possibly containing HTML."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The option's ID."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The option's name."
          },
          {
            "name": "nameHTML",
            "type": {
              "name": null
            },
            "description": "The option's html name."
          }
        ]
      },
      {
        "name": "ProjectV2SingleSelectFieldOptionColor",
        "kind": "ENUM",
        "description": "The display color of a single-select field option.",
        "fields": null
      },
      {
        "name": "ProjectV2SingleSelectFieldOptionInput",
        "kind": "INPUT_OBJECT",
        "description": "Represents a single select field option",
        "fields": null
      },
      {
        "name": "ProjectV2SortBy",
        "kind": "OBJECT",
        "description": "Represents a sort by field and direction.",
        "fields": [
          {
            "name": "direction",
            "type": {
              "name": null
            },
            "description": "The direction of the sorting. Possible values are ASC and DESC."
          },
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The field by which items are sorted."
          }
        ]
      },
      {
        "name": "ProjectV2SortByConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2SortBy.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2SortByEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2SortBy"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2SortByField",
        "kind": "OBJECT",
        "description": "Represents a sort by field and direction.",
        "fields": [
          {
            "name": "direction",
            "type": {
              "name": null
            },
            "description": "The direction of the sorting. Possible values are ASC and DESC."
          },
          {
            "name": "field",
            "type": {
              "name": null
            },
            "description": "The field by which items are sorted."
          }
        ]
      },
      {
        "name": "ProjectV2SortByFieldConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2SortByField.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2SortByFieldEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2SortByField"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2State",
        "kind": "ENUM",
        "description": "The possible states of a project v2.",
        "fields": null
      },
      {
        "name": "ProjectV2StatusOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which project v2 status updates can be ordered.",
        "fields": null
      },
      {
        "name": "ProjectV2StatusUpdate",
        "kind": "OBJECT",
        "description": "A status update within a project.",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": "String"
            },
            "description": "The body of the status update."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": "HTML"
            },
            "description": "The body of the status update rendered to HTML."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created the status update."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2StatusUpdate object"
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this status update."
          },
          {
            "name": "startDate",
            "type": {
              "name": "Date"
            },
            "description": "The start date of the status update."
          },
          {
            "name": "status",
            "type": {
              "name": "ProjectV2StatusUpdateStatus"
            },
            "description": "The status of the status update."
          },
          {
            "name": "targetDate",
            "type": {
              "name": "Date"
            },
            "description": "The target date of the status update."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2StatusUpdateConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2StatusUpdate.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2StatusUpdateEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2StatusUpdate"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2StatusUpdateOrderField",
        "kind": "ENUM",
        "description": "Properties by which project v2 status updates can be ordered.",
        "fields": null
      },
      {
        "name": "ProjectV2StatusUpdateStatus",
        "kind": "ENUM",
        "description": "The possible statuses of a project v2.",
        "fields": null
      },
      {
        "name": "ProjectV2View",
        "kind": "OBJECT",
        "description": "A view within a ProjectV2.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "fields",
            "type": {
              "name": "ProjectV2FieldConfigurationConnection"
            },
            "description": "The view's visible fields."
          },
          {
            "name": "filter",
            "type": {
              "name": "String"
            },
            "description": "The project view's filter."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "groupByFields",
            "type": {
              "name": "ProjectV2FieldConfigurationConnection"
            },
            "description": "The view's group-by field."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2View object"
          },
          {
            "name": "layout",
            "type": {
              "name": null
            },
            "description": "The project view's layout."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The project view's name."
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "The project view's number."
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this view."
          },
          {
            "name": "sortByFields",
            "type": {
              "name": "ProjectV2SortByFieldConnection"
            },
            "description": "The view's sort-by config."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "verticalGroupByFields",
            "type": {
              "name": "ProjectV2FieldConfigurationConnection"
            },
            "description": "The view's vertical-group-by field."
          }
        ]
      },
      {
        "name": "ProjectV2ViewConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2View.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2ViewEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2View"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2ViewLayout",
        "kind": "ENUM",
        "description": "The layout of a project v2 view.",
        "fields": null
      },
      {
        "name": "ProjectV2ViewOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for project v2 view connections",
        "fields": null
      },
      {
        "name": "ProjectV2ViewOrderField",
        "kind": "ENUM",
        "description": "Properties by which project v2 view connections can be ordered.",
        "fields": null
      },
      {
        "name": "ProjectV2Workflow",
        "kind": "OBJECT",
        "description": "A workflow inside a project.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enabled",
            "type": {
              "name": null
            },
            "description": "Whether the workflow is enabled."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ProjectV2Workflow object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the workflow."
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "The number of the workflow."
          },
          {
            "name": "project",
            "type": {
              "name": null
            },
            "description": "The project that contains this workflow."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "ProjectV2WorkflowConnection",
        "kind": "OBJECT",
        "description": "The connection type for ProjectV2Workflow.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ProjectV2WorkflowEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ProjectV2Workflow"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ProjectV2WorkflowOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for project v2 workflows connections",
        "fields": null
      },
      {
        "name": "ProjectV2WorkflowsOrderField",
        "kind": "ENUM",
        "description": "Properties by which project workflows can be ordered.",
        "fields": null
      },
      {
        "name": "PropertyTargetDefinition",
        "kind": "OBJECT",
        "description": "A property that must match",
        "fields": [
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the property"
          },
          {
            "name": "propertyValues",
            "type": {
              "name": null
            },
            "description": "The values to match for"
          },
          {
            "name": "source",
            "type": {
              "name": "String"
            },
            "description": "The source of the property. Choose 'custom' or 'system'. Defaults to 'custom' if not specified"
          }
        ]
      },
      {
        "name": "PropertyTargetDefinitionInput",
        "kind": "INPUT_OBJECT",
        "description": "A property that must match",
        "fields": null
      },
      {
        "name": "PublicKey",
        "kind": "OBJECT",
        "description": "A user's public key.",
        "fields": [
          {
            "name": "accessedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The last time this authorization was used to perform an action. Values will be null for keys not owned by the user."
          },
          {
            "name": "createdAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the key was created. Keys created before March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user."
          },
          {
            "name": "fingerprint",
            "type": {
              "name": null
            },
            "description": "The fingerprint for this PublicKey."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PublicKey object"
          },
          {
            "name": "isReadOnly",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user."
          },
          {
            "name": "key",
            "type": {
              "name": null
            },
            "description": "The public key string."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the key was updated. Keys created before March 5th, 2014 may have inaccurate values. Values will be null for keys not owned by the user."
          }
        ]
      },
      {
        "name": "PublicKeyConnection",
        "kind": "OBJECT",
        "description": "The connection type for PublicKey.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PublicKeyEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PublicKey"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PublishSponsorsTierInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of PublishSponsorsTier",
        "fields": null
      },
      {
        "name": "PublishSponsorsTierPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of PublishSponsorsTier.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorsTier",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "The tier that was published."
          }
        ]
      },
      {
        "name": "PullRequest",
        "kind": "OBJECT",
        "description": "A repository pull request.",
        "fields": [
          {
            "name": "activeLockReason",
            "type": {
              "name": "LockReason"
            },
            "description": "Reason that the conversation was locked."
          },
          {
            "name": "additions",
            "type": {
              "name": null
            },
            "description": "The number of additions in this pull request."
          },
          {
            "name": "assignees",
            "type": {
              "name": null
            },
            "description": "A list of Users assigned to this object."
          },
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "autoMergeRequest",
            "type": {
              "name": "AutoMergeRequest"
            },
            "description": "Returns the auto-merge request object if one exists for this pull request."
          },
          {
            "name": "baseRef",
            "type": {
              "name": "Ref"
            },
            "description": "Identifies the base Ref associated with the pull request."
          },
          {
            "name": "baseRefName",
            "type": {
              "name": null
            },
            "description": "Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted."
          },
          {
            "name": "baseRefOid",
            "type": {
              "name": null
            },
            "description": "Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted."
          },
          {
            "name": "baseRepository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with this pull request's base Ref."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body as Markdown."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "canBeRebased",
            "type": {
              "name": null
            },
            "description": "Whether or not the pull request is rebaseable."
          },
          {
            "name": "changedFiles",
            "type": {
              "name": null
            },
            "description": "The number of changed files in this pull request."
          },
          {
            "name": "checksResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for the checks of this pull request."
          },
          {
            "name": "checksUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for the checks of this pull request."
          },
          {
            "name": "closed",
            "type": {
              "name": null
            },
            "description": "`true` if the pull request is closed"
          },
          {
            "name": "closedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the object was closed."
          },
          {
            "name": "closingIssuesReferences",
            "type": {
              "name": "IssueConnection"
            },
            "description": "List of issues that may be closed by this pull request"
          },
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "A list of comments associated with the pull request."
          },
          {
            "name": "commits",
            "type": {
              "name": null
            },
            "description": "A list of commits present in this pull request's head branch not present in the base branch."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "deletions",
            "type": {
              "name": null
            },
            "description": "The number of deletions in this pull request."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited this pull request's body."
          },
          {
            "name": "files",
            "type": {
              "name": "PullRequestChangedFileConnection"
            },
            "description": "Lists the files changed within this pull request."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "headRef",
            "type": {
              "name": "Ref"
            },
            "description": "Identifies the head Ref associated with the pull request."
          },
          {
            "name": "headRefName",
            "type": {
              "name": null
            },
            "description": "Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted."
          },
          {
            "name": "headRefOid",
            "type": {
              "name": null
            },
            "description": "Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted."
          },
          {
            "name": "headRepository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with this pull request's head Ref."
          },
          {
            "name": "headRepositoryOwner",
            "type": {
              "name": "RepositoryOwner"
            },
            "description": "The owner of the repository associated with this pull request's head Ref."
          },
          {
            "name": "hovercard",
            "type": {
              "name": null
            },
            "description": "The hovercard information for this issue"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PullRequest object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isCrossRepository",
            "type": {
              "name": null
            },
            "description": "The head and base repositories are different."
          },
          {
            "name": "isDraft",
            "type": {
              "name": null
            },
            "description": "Identifies if the pull request is a draft."
          },
          {
            "name": "isInMergeQueue",
            "type": {
              "name": null
            },
            "description": "Indicates whether the pull request is in a merge queue"
          },
          {
            "name": "isMergeQueueEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates whether the pull request's base ref has a merge queue enabled."
          },
          {
            "name": "isReadByViewer",
            "type": {
              "name": "Boolean"
            },
            "description": "Is this pull request read by the viewer"
          },
          {
            "name": "labels",
            "type": {
              "name": "LabelConnection"
            },
            "description": "A list of labels associated with the object."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "latestOpinionatedReviews",
            "type": {
              "name": "PullRequestReviewConnection"
            },
            "description": "A list of latest reviews per user associated with the pull request."
          },
          {
            "name": "latestReviews",
            "type": {
              "name": "PullRequestReviewConnection"
            },
            "description": "A list of latest reviews per user associated with the pull request that are not also pending review."
          },
          {
            "name": "locked",
            "type": {
              "name": null
            },
            "description": "`true` if the pull request is locked"
          },
          {
            "name": "maintainerCanModify",
            "type": {
              "name": null
            },
            "description": "Indicates whether maintainers can modify the pull request."
          },
          {
            "name": "mergeCommit",
            "type": {
              "name": "Commit"
            },
            "description": "The commit that was created when this pull request was merged."
          },
          {
            "name": "mergeQueue",
            "type": {
              "name": "MergeQueue"
            },
            "description": "The merge queue for the pull request's base branch"
          },
          {
            "name": "mergeQueueEntry",
            "type": {
              "name": "MergeQueueEntry"
            },
            "description": "The merge queue entry of the pull request in the base branch's merge queue"
          },
          {
            "name": "mergeStateStatus",
            "type": {
              "name": null
            },
            "description": "Detailed information about the current pull request merge state status."
          },
          {
            "name": "mergeable",
            "type": {
              "name": null
            },
            "description": "Whether or not the pull request can be merged based on the existence of merge conflicts."
          },
          {
            "name": "merged",
            "type": {
              "name": null
            },
            "description": "Whether or not the pull request was merged."
          },
          {
            "name": "mergedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The date and time that the pull request was merged."
          },
          {
            "name": "mergedBy",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who merged the pull request."
          },
          {
            "name": "milestone",
            "type": {
              "name": "Milestone"
            },
            "description": "Identifies the milestone associated with the pull request."
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "Identifies the pull request number."
          },
          {
            "name": "participants",
            "type": {
              "name": null
            },
            "description": "A list of Users that are participating in the Pull Request conversation."
          },
          {
            "name": "permalink",
            "type": {
              "name": null
            },
            "description": "The permalink to the pull request."
          },
          {
            "name": "potentialMergeCommit",
            "type": {
              "name": "Commit"
            },
            "description": "The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the `mergeable` field for more details on the mergeability of the pull request."
          },
          {
            "name": "projectCards",
            "type": {
              "name": null
            },
            "description": "List of project cards associated with this pull request."
          },
          {
            "name": "projectItems",
            "type": {
              "name": null
            },
            "description": "List of project items associated with this pull request."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "Find a project by number."
          },
          {
            "name": "projectsV2",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this pull request."
          },
          {
            "name": "revertResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for reverting this pull request."
          },
          {
            "name": "revertUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for reverting this pull request."
          },
          {
            "name": "reviewDecision",
            "type": {
              "name": "PullRequestReviewDecision"
            },
            "description": "The current status of this pull request with respect to code review."
          },
          {
            "name": "reviewRequests",
            "type": {
              "name": "ReviewRequestConnection"
            },
            "description": "A list of review requests associated with the pull request."
          },
          {
            "name": "reviewThreads",
            "type": {
              "name": null
            },
            "description": "The list of all review threads for this pull request."
          },
          {
            "name": "reviews",
            "type": {
              "name": "PullRequestReviewConnection"
            },
            "description": "A list of reviews associated with the pull request."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "Identifies the state of the pull request."
          },
          {
            "name": "statusCheckRollup",
            "type": {
              "name": "StatusCheckRollup"
            },
            "description": "Check and Status rollup information for the PR's head ref."
          },
          {
            "name": "suggestedReviewers",
            "type": {
              "name": null
            },
            "description": "A list of reviewer suggestions based on commit history and past review comments."
          },
          {
            "name": "timelineItems",
            "type": {
              "name": null
            },
            "description": "A list of events, comments, commits, etc. associated with the pull request."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "Identifies the pull request title."
          },
          {
            "name": "titleHTML",
            "type": {
              "name": null
            },
            "description": "Identifies the pull request title rendered to HTML."
          },
          {
            "name": "totalCommentsCount",
            "type": {
              "name": "Int"
            },
            "description": "Returns a count of how many comments this pull request has received."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this pull request."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanApplySuggestion",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer can apply suggestion."
          },
          {
            "name": "viewerCanClose",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be closed by the viewer."
          },
          {
            "name": "viewerCanDeleteHeadRef",
            "type": {
              "name": null
            },
            "description": "Check if the viewer can restore the deleted head ref."
          },
          {
            "name": "viewerCanDisableAutoMerge",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer can disable auto-merge"
          },
          {
            "name": "viewerCanEditFiles",
            "type": {
              "name": null
            },
            "description": "Can the viewer edit files within this pull request."
          },
          {
            "name": "viewerCanEnableAutoMerge",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer can enable auto-merge"
          },
          {
            "name": "viewerCanLabel",
            "type": {
              "name": null
            },
            "description": "Indicates if the viewer can edit labels for this object."
          },
          {
            "name": "viewerCanMergeAsAdmin",
            "type": {
              "name": null
            },
            "description": "Indicates whether the viewer can bypass branch protections and merge the pull request immediately"
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanReopen",
            "type": {
              "name": null
            },
            "description": "Indicates if the object can be reopened by the viewer."
          },
          {
            "name": "viewerCanSubscribe",
            "type": {
              "name": null
            },
            "description": "Check if the viewer is able to change their subscription status for the repository."
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCanUpdateBranch",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer can update the head ref of this PR, by merging or rebasing the base ref.\nIf the head ref is up to date or unable to be updated by this user, this will return false.\n"
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          },
          {
            "name": "viewerLatestReview",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The latest review given from the viewer."
          },
          {
            "name": "viewerLatestReviewRequest",
            "type": {
              "name": "ReviewRequest"
            },
            "description": "The person who has requested the viewer for review on this pull request."
          },
          {
            "name": "viewerMergeBodyText",
            "type": {
              "name": null
            },
            "description": "The merge body text for the viewer and method."
          },
          {
            "name": "viewerMergeHeadlineText",
            "type": {
              "name": null
            },
            "description": "The merge headline text for the viewer and method."
          },
          {
            "name": "viewerSubscription",
            "type": {
              "name": "SubscriptionState"
            },
            "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."
          }
        ]
      },
      {
        "name": "PullRequestBranchUpdateMethod",
        "kind": "ENUM",
        "description": "The possible methods for updating a pull request's head branch with the base branch.",
        "fields": null
      },
      {
        "name": "PullRequestChangedFile",
        "kind": "OBJECT",
        "description": "A file changed in a pull request.",
        "fields": [
          {
            "name": "additions",
            "type": {
              "name": null
            },
            "description": "The number of additions to the file."
          },
          {
            "name": "changeType",
            "type": {
              "name": null
            },
            "description": "How the file was changed in this PullRequest"
          },
          {
            "name": "deletions",
            "type": {
              "name": null
            },
            "description": "The number of deletions to the file."
          },
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "The path of the file."
          },
          {
            "name": "viewerViewedState",
            "type": {
              "name": null
            },
            "description": "The state of the file for the viewer."
          }
        ]
      },
      {
        "name": "PullRequestChangedFileConnection",
        "kind": "OBJECT",
        "description": "The connection type for PullRequestChangedFile.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PullRequestChangedFileEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PullRequestChangedFile"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PullRequestCommit",
        "kind": "OBJECT",
        "description": "Represents a Git commit part of a pull request.",
        "fields": [
          {
            "name": "commit",
            "type": {
              "name": null
            },
            "description": "The Git commit object"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PullRequestCommit object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "The pull request this commit belongs to"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this pull request commit"
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this pull request commit"
          }
        ]
      },
      {
        "name": "PullRequestCommitCommentThread",
        "kind": "OBJECT",
        "description": "Represents a commit comment thread part of a pull request.",
        "fields": [
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "The comments that exist in this thread."
          },
          {
            "name": "commit",
            "type": {
              "name": null
            },
            "description": "The commit the comments were made on."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PullRequestCommitCommentThread object"
          },
          {
            "name": "path",
            "type": {
              "name": "String"
            },
            "description": "The file the comments were made on."
          },
          {
            "name": "position",
            "type": {
              "name": "Int"
            },
            "description": "The position in the diff for the commit that the comment was made on."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "The pull request this commit comment thread belongs to"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          }
        ]
      },
      {
        "name": "PullRequestCommitConnection",
        "kind": "OBJECT",
        "description": "The connection type for PullRequestCommit.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PullRequestCommitEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PullRequestCommit"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PullRequestConnection",
        "kind": "OBJECT",
        "description": "The connection type for PullRequest.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PullRequestContributionsByRepository",
        "kind": "OBJECT",
        "description": "This aggregates pull requests opened by a user within one repository.",
        "fields": [
          {
            "name": "contributions",
            "type": {
              "name": null
            },
            "description": "The pull request contributions."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository in which the pull requests were opened."
          }
        ]
      },
      {
        "name": "PullRequestEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PullRequest"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PullRequestMergeMethod",
        "kind": "ENUM",
        "description": "Represents available types of methods to use when merging a pull request.",
        "fields": null
      },
      {
        "name": "PullRequestOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of issues can be ordered upon return.",
        "fields": null
      },
      {
        "name": "PullRequestOrderField",
        "kind": "ENUM",
        "description": "Properties by which pull_requests connections can be ordered.",
        "fields": null
      },
      {
        "name": "PullRequestParameters",
        "kind": "OBJECT",
        "description": "Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.",
        "fields": [
          {
            "name": "allowedMergeMethods",
            "type": {
              "name": null
            },
            "description": "When merging pull requests, you can allow any combination of merge commits, squashing, or rebasing. At least one option must be enabled."
          },
          {
            "name": "dismissStaleReviewsOnPush",
            "type": {
              "name": null
            },
            "description": "New, reviewable commits pushed will dismiss previous pull request review approvals."
          },
          {
            "name": "requireCodeOwnerReview",
            "type": {
              "name": null
            },
            "description": "Require an approving review in pull requests that modify files that have a designated code owner."
          },
          {
            "name": "requireLastPushApproval",
            "type": {
              "name": null
            },
            "description": "Whether the most recent reviewable push must be approved by someone other than the person who pushed it."
          },
          {
            "name": "requiredApprovingReviewCount",
            "type": {
              "name": null
            },
            "description": "The number of approving reviews that are required before a pull request can be merged."
          },
          {
            "name": "requiredReviewThreadResolution",
            "type": {
              "name": null
            },
            "description": "All conversations on code must be resolved before a pull request can be merged."
          }
        ]
      },
      {
        "name": "PullRequestParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.",
        "fields": null
      },
      {
        "name": "PullRequestReview",
        "kind": "OBJECT",
        "description": "A review object for a given pull request.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "authorCanPushToRepository",
            "type": {
              "name": null
            },
            "description": "Indicates whether the author of this review has push access to the repository."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "Identifies the pull request review body."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body of this review rendered as plain text."
          },
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "A list of review comments for the current pull request review."
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the commit associated with this pull request review."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PullRequestReview object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isMinimized",
            "type": {
              "name": null
            },
            "description": "Returns whether or not a comment has been minimized."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "minimizedReason",
            "type": {
              "name": "String"
            },
            "description": "Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation."
          },
          {
            "name": "onBehalfOf",
            "type": {
              "name": null
            },
            "description": "A list of teams that this review was made on behalf of."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "Identifies the pull request associated with this pull request review."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path permalink for this PullRequestReview."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "Identifies the current state of the pull request review."
          },
          {
            "name": "submittedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the Pull Request Review was submitted"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL permalink for this PullRequestReview."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanMinimize",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can minimize this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          }
        ]
      },
      {
        "name": "PullRequestReviewComment",
        "kind": "OBJECT",
        "description": "A review comment associated with a given repository pull request.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "authorAssociation",
            "type": {
              "name": null
            },
            "description": "Author's association with the subject of the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The comment body of this review comment."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The comment body of this review comment rendered as plain text."
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the commit associated with the comment."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies when the comment was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "diffHunk",
            "type": {
              "name": null
            },
            "description": "The diff hunk to which the comment applies."
          },
          {
            "name": "draftedAt",
            "type": {
              "name": null
            },
            "description": "Identifies when the comment was created in a draft state."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "fullDatabaseId",
            "type": {
              "name": "BigInt"
            },
            "description": "Identifies the primary key from the database as a BigInt."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PullRequestReviewComment object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "isMinimized",
            "type": {
              "name": null
            },
            "description": "Returns whether or not a comment has been minimized."
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "line",
            "type": {
              "name": "Int"
            },
            "description": "The end line number on the file to which the comment applies"
          },
          {
            "name": "minimizedReason",
            "type": {
              "name": "String"
            },
            "description": "Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation."
          },
          {
            "name": "originalCommit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the original commit associated with the comment."
          },
          {
            "name": "originalLine",
            "type": {
              "name": "Int"
            },
            "description": "The end line number on the file to which the comment applied when it was first created"
          },
          {
            "name": "originalStartLine",
            "type": {
              "name": "Int"
            },
            "description": "The start line number on the file to which the comment applied when it was first created"
          },
          {
            "name": "outdated",
            "type": {
              "name": null
            },
            "description": "Identifies when the comment body is outdated"
          },
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "The path to which the comment applies."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "The pull request associated with this review comment."
          },
          {
            "name": "pullRequestReview",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The pull request review associated with this review comment."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "replyTo",
            "type": {
              "name": "PullRequestReviewComment"
            },
            "description": "The comment this is a reply to."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path permalink for this review comment."
          },
          {
            "name": "startLine",
            "type": {
              "name": "Int"
            },
            "description": "The start line number on the file to which the comment applies"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "Identifies the state of the comment."
          },
          {
            "name": "subjectType",
            "type": {
              "name": null
            },
            "description": "The level at which the comments in the corresponding thread are targeted, can be a diff line or a file"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies when the comment was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL permalink for this review comment."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanMinimize",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can minimize this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          }
        ]
      },
      {
        "name": "PullRequestReviewCommentConnection",
        "kind": "OBJECT",
        "description": "The connection type for PullRequestReviewComment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PullRequestReviewCommentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PullRequestReviewComment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PullRequestReviewCommentState",
        "kind": "ENUM",
        "description": "The possible states of a pull request review comment.",
        "fields": null
      },
      {
        "name": "PullRequestReviewConnection",
        "kind": "OBJECT",
        "description": "The connection type for PullRequestReview.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PullRequestReviewContributionsByRepository",
        "kind": "OBJECT",
        "description": "This aggregates pull request reviews made by a user within one repository.",
        "fields": [
          {
            "name": "contributions",
            "type": {
              "name": null
            },
            "description": "The pull request review contributions."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository in which the pull request reviews were made."
          }
        ]
      },
      {
        "name": "PullRequestReviewDecision",
        "kind": "ENUM",
        "description": "The review status of a pull request.",
        "fields": null
      },
      {
        "name": "PullRequestReviewEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PullRequestReviewEvent",
        "kind": "ENUM",
        "description": "The possible events to perform on a pull request review.",
        "fields": null
      },
      {
        "name": "PullRequestReviewState",
        "kind": "ENUM",
        "description": "The possible states of a pull request review.",
        "fields": null
      },
      {
        "name": "PullRequestReviewThread",
        "kind": "OBJECT",
        "description": "A threaded list of comments for a given pull request.",
        "fields": [
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "A list of pull request comments associated with the thread."
          },
          {
            "name": "diffSide",
            "type": {
              "name": null
            },
            "description": "The side of the diff on which this thread was placed."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PullRequestReviewThread object"
          },
          {
            "name": "isCollapsed",
            "type": {
              "name": null
            },
            "description": "Whether or not the thread has been collapsed (resolved)"
          },
          {
            "name": "isOutdated",
            "type": {
              "name": null
            },
            "description": "Indicates whether this thread was outdated by newer changes."
          },
          {
            "name": "isResolved",
            "type": {
              "name": null
            },
            "description": "Whether this thread has been resolved"
          },
          {
            "name": "line",
            "type": {
              "name": "Int"
            },
            "description": "The line in the file to which this thread refers"
          },
          {
            "name": "originalLine",
            "type": {
              "name": "Int"
            },
            "description": "The original line in the file to which this thread refers."
          },
          {
            "name": "originalStartLine",
            "type": {
              "name": "Int"
            },
            "description": "The original start line in the file to which this thread refers (multi-line only)."
          },
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "Identifies the file path of this thread."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "Identifies the pull request associated with this thread."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "Identifies the repository associated with this thread."
          },
          {
            "name": "resolvedBy",
            "type": {
              "name": "User"
            },
            "description": "The user who resolved this thread"
          },
          {
            "name": "startDiffSide",
            "type": {
              "name": "DiffSide"
            },
            "description": "The side of the diff that the first line of the thread starts on (multi-line only)"
          },
          {
            "name": "startLine",
            "type": {
              "name": "Int"
            },
            "description": "The start line in the file to which this thread refers (multi-line only)"
          },
          {
            "name": "subjectType",
            "type": {
              "name": null
            },
            "description": "The level at which the comments in the corresponding thread are targeted, can be a diff line or a file"
          },
          {
            "name": "viewerCanReply",
            "type": {
              "name": null
            },
            "description": "Indicates whether the current viewer can reply to this thread."
          },
          {
            "name": "viewerCanResolve",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer can resolve this thread"
          },
          {
            "name": "viewerCanUnresolve",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer can unresolve this thread"
          }
        ]
      },
      {
        "name": "PullRequestReviewThreadConnection",
        "kind": "OBJECT",
        "description": "Review comment threads for a pull request review.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PullRequestReviewThreadEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PullRequestReviewThread"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PullRequestReviewThreadSubjectType",
        "kind": "ENUM",
        "description": "The possible subject types of a pull request review comment.",
        "fields": null
      },
      {
        "name": "PullRequestRevisionMarker",
        "kind": "OBJECT",
        "description": "Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "lastSeenCommit",
            "type": {
              "name": null
            },
            "description": "The last commit the viewer has seen."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "The pull request to which the marker belongs."
          }
        ]
      },
      {
        "name": "PullRequestState",
        "kind": "ENUM",
        "description": "The possible states of a pull request.",
        "fields": null
      },
      {
        "name": "PullRequestTemplate",
        "kind": "OBJECT",
        "description": "A repository pull request template.",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": "String"
            },
            "description": "The body of the template"
          },
          {
            "name": "filename",
            "type": {
              "name": "String"
            },
            "description": "The filename of the template"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository the template belongs to"
          }
        ]
      },
      {
        "name": "PullRequestThread",
        "kind": "OBJECT",
        "description": "A threaded list of comments for a given pull request.",
        "fields": [
          {
            "name": "comments",
            "type": {
              "name": null
            },
            "description": "A list of pull request comments associated with the thread."
          },
          {
            "name": "diffSide",
            "type": {
              "name": null
            },
            "description": "The side of the diff on which this thread was placed."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PullRequestThread object"
          },
          {
            "name": "isCollapsed",
            "type": {
              "name": null
            },
            "description": "Whether or not the thread has been collapsed (resolved)"
          },
          {
            "name": "isOutdated",
            "type": {
              "name": null
            },
            "description": "Indicates whether this thread was outdated by newer changes."
          },
          {
            "name": "isResolved",
            "type": {
              "name": null
            },
            "description": "Whether this thread has been resolved"
          },
          {
            "name": "line",
            "type": {
              "name": "Int"
            },
            "description": "The line in the file to which this thread refers"
          },
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "Identifies the file path of this thread."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "Identifies the pull request associated with this thread."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "Identifies the repository associated with this thread."
          },
          {
            "name": "resolvedBy",
            "type": {
              "name": "User"
            },
            "description": "The user who resolved this thread"
          },
          {
            "name": "startDiffSide",
            "type": {
              "name": "DiffSide"
            },
            "description": "The side of the diff that the first line of the thread starts on (multi-line only)"
          },
          {
            "name": "startLine",
            "type": {
              "name": "Int"
            },
            "description": "The line of the first file diff in the thread."
          },
          {
            "name": "subjectType",
            "type": {
              "name": null
            },
            "description": "The level at which the comments in the corresponding thread are targeted, can be a diff line or a file"
          },
          {
            "name": "viewerCanReply",
            "type": {
              "name": null
            },
            "description": "Indicates whether the current viewer can reply to this thread."
          },
          {
            "name": "viewerCanResolve",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer can resolve this thread"
          },
          {
            "name": "viewerCanUnresolve",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer can unresolve this thread"
          }
        ]
      },
      {
        "name": "PullRequestTimelineConnection",
        "kind": "OBJECT",
        "description": "The connection type for PullRequestTimelineItem.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PullRequestTimelineItem",
        "kind": "UNION",
        "description": "An item in a pull request timeline",
        "fields": null
      },
      {
        "name": "PullRequestTimelineItemEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PullRequestTimelineItem"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PullRequestTimelineItems",
        "kind": "UNION",
        "description": "An item in a pull request timeline",
        "fields": null
      },
      {
        "name": "PullRequestTimelineItemsConnection",
        "kind": "OBJECT",
        "description": "The connection type for PullRequestTimelineItems.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "filteredCount",
            "type": {
              "name": null
            },
            "description": "Identifies the count of items after applying `before` and `after` filters."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageCount",
            "type": {
              "name": null
            },
            "description": "Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the timeline was last updated."
          }
        ]
      },
      {
        "name": "PullRequestTimelineItemsEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PullRequestTimelineItems"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "PullRequestTimelineItemsItemType",
        "kind": "ENUM",
        "description": "The possible item types found in a timeline.",
        "fields": null
      },
      {
        "name": "PullRequestUpdateState",
        "kind": "ENUM",
        "description": "The possible target states when updating a pull request.",
        "fields": null
      },
      {
        "name": "Push",
        "kind": "OBJECT",
        "description": "A Git push.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Push object"
          },
          {
            "name": "nextSha",
            "type": {
              "name": "GitObjectID"
            },
            "description": "The SHA after the push"
          },
          {
            "name": "permalink",
            "type": {
              "name": null
            },
            "description": "The permalink for this push."
          },
          {
            "name": "previousSha",
            "type": {
              "name": "GitObjectID"
            },
            "description": "The SHA before the push"
          },
          {
            "name": "pusher",
            "type": {
              "name": null
            },
            "description": "The actor who pushed"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository that was pushed to"
          }
        ]
      },
      {
        "name": "PushAllowance",
        "kind": "OBJECT",
        "description": "A team, user, or app who has the ability to push to a protected branch.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "PushAllowanceActor"
            },
            "description": "The actor that can push."
          },
          {
            "name": "branchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "Identifies the branch protection rule associated with the allowed user, team, or app."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the PushAllowance object"
          }
        ]
      },
      {
        "name": "PushAllowanceActor",
        "kind": "UNION",
        "description": "Types that can be an actor.",
        "fields": null
      },
      {
        "name": "PushAllowanceConnection",
        "kind": "OBJECT",
        "description": "The connection type for PushAllowance.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "PushAllowanceEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "PushAllowance"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "Query",
        "kind": "OBJECT",
        "description": "The query root of GitHub's GraphQL interface.",
        "fields": [
          {
            "name": "codeOfConduct",
            "type": {
              "name": "CodeOfConduct"
            },
            "description": "Look up a code of conduct by its key"
          },
          {
            "name": "codesOfConduct",
            "type": {
              "name": null
            },
            "description": "Look up a code of conduct by its key"
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "Look up an enterprise by URL slug."
          },
          {
            "name": "enterpriseAdministratorInvitation",
            "type": {
              "name": "EnterpriseAdministratorInvitation"
            },
            "description": "Look up a pending enterprise administrator invitation by invitee, enterprise and role."
          },
          {
            "name": "enterpriseAdministratorInvitationByToken",
            "type": {
              "name": "EnterpriseAdministratorInvitation"
            },
            "description": "Look up a pending enterprise administrator invitation by invitation token."
          },
          {
            "name": "enterpriseMemberInvitation",
            "type": {
              "name": "EnterpriseMemberInvitation"
            },
            "description": "Look up a pending enterprise unaffiliated member invitation by invitee and enterprise."
          },
          {
            "name": "enterpriseMemberInvitationByToken",
            "type": {
              "name": "EnterpriseMemberInvitation"
            },
            "description": "Look up a pending enterprise unaffiliated member invitation by invitation token."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "ID of the object."
          },
          {
            "name": "license",
            "type": {
              "name": "License"
            },
            "description": "Look up an open source license by its key"
          },
          {
            "name": "licenses",
            "type": {
              "name": null
            },
            "description": "Return a list of known open source licenses"
          },
          {
            "name": "marketplaceCategories",
            "type": {
              "name": null
            },
            "description": "Get alphabetically sorted list of Marketplace categories"
          },
          {
            "name": "marketplaceCategory",
            "type": {
              "name": "MarketplaceCategory"
            },
            "description": "Look up a Marketplace category by its slug."
          },
          {
            "name": "marketplaceListing",
            "type": {
              "name": "MarketplaceListing"
            },
            "description": "Look up a single Marketplace listing"
          },
          {
            "name": "marketplaceListings",
            "type": {
              "name": null
            },
            "description": "Look up Marketplace listings"
          },
          {
            "name": "meta",
            "type": {
              "name": null
            },
            "description": "Return information about the GitHub instance"
          },
          {
            "name": "node",
            "type": {
              "name": "Node"
            },
            "description": "Fetches an object given its ID."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "Lookup nodes by a list of IDs."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "Lookup a organization by login."
          },
          {
            "name": "rateLimit",
            "type": {
              "name": "RateLimit"
            },
            "description": "The client's rate limit information."
          },
          {
            "name": "relay",
            "type": {
              "name": null
            },
            "description": "Workaround for re-exposing the root query object. (Refer to https://github.com/facebook/relay/issues/112 for more information.)"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "Lookup a given repository by the owner and repository name."
          },
          {
            "name": "repositoryOwner",
            "type": {
              "name": "RepositoryOwner"
            },
            "description": "Lookup a repository owner (ie. either a User or an Organization) by login."
          },
          {
            "name": "resource",
            "type": {
              "name": "UniformResourceLocatable"
            },
            "description": "Lookup resource by a URL."
          },
          {
            "name": "search",
            "type": {
              "name": null
            },
            "description": "Perform a search across resources, returning a maximum of 1,000 results."
          },
          {
            "name": "securityAdvisories",
            "type": {
              "name": null
            },
            "description": "GitHub Security Advisories"
          },
          {
            "name": "securityAdvisory",
            "type": {
              "name": "SecurityAdvisory"
            },
            "description": "Fetch a Security Advisory by its GHSA ID"
          },
          {
            "name": "securityVulnerabilities",
            "type": {
              "name": null
            },
            "description": "Software Vulnerabilities documented by GitHub Security Advisories"
          },
          {
            "name": "sponsorables",
            "type": {
              "name": null
            },
            "description": "Users and organizations who can be sponsored via GitHub Sponsors."
          },
          {
            "name": "topic",
            "type": {
              "name": "Topic"
            },
            "description": "Look up a topic by name."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "Lookup a user by login."
          },
          {
            "name": "viewer",
            "type": {
              "name": null
            },
            "description": "The currently authenticated user."
          }
        ]
      },
      {
        "name": "RateLimit",
        "kind": "OBJECT",
        "description": "Represents the client's rate limit.",
        "fields": [
          {
            "name": "cost",
            "type": {
              "name": null
            },
            "description": "The point cost for the current query counting against the rate limit."
          },
          {
            "name": "limit",
            "type": {
              "name": null
            },
            "description": "The maximum number of points the client is permitted to consume in a 60 minute window."
          },
          {
            "name": "nodeCount",
            "type": {
              "name": null
            },
            "description": "The maximum number of nodes this query may return"
          },
          {
            "name": "remaining",
            "type": {
              "name": null
            },
            "description": "The number of points remaining in the current rate limit window."
          },
          {
            "name": "resetAt",
            "type": {
              "name": null
            },
            "description": "The time at which the current rate limit window resets in UTC epoch seconds."
          },
          {
            "name": "used",
            "type": {
              "name": null
            },
            "description": "The number of points used in the current rate limit window."
          }
        ]
      },
      {
        "name": "Reactable",
        "kind": "INTERFACE",
        "description": "Represents a subject that can be reacted on.",
        "fields": [
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Reactable object"
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          }
        ]
      },
      {
        "name": "ReactingUserConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ReactingUserEdge",
        "kind": "OBJECT",
        "description": "Represents a user that's made a reaction.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "reactedAt",
            "type": {
              "name": null
            },
            "description": "The moment when the user made the reaction."
          }
        ]
      },
      {
        "name": "Reaction",
        "kind": "OBJECT",
        "description": "An emoji reaction to a particular piece of content.",
        "fields": [
          {
            "name": "content",
            "type": {
              "name": null
            },
            "description": "Identifies the emoji reaction."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Reaction object"
          },
          {
            "name": "reactable",
            "type": {
              "name": null
            },
            "description": "The reactable piece of content"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "Identifies the user who created this reaction."
          }
        ]
      },
      {
        "name": "ReactionConnection",
        "kind": "OBJECT",
        "description": "A list of reactions that have been left on the subject.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          },
          {
            "name": "viewerHasReacted",
            "type": {
              "name": null
            },
            "description": "Whether or not the authenticated user has left a reaction on the subject."
          }
        ]
      },
      {
        "name": "ReactionContent",
        "kind": "ENUM",
        "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
        "fields": null
      },
      {
        "name": "ReactionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Reaction"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ReactionGroup",
        "kind": "OBJECT",
        "description": "A group of emoji reactions to a particular piece of content.",
        "fields": [
          {
            "name": "content",
            "type": {
              "name": null
            },
            "description": "Identifies the emoji reaction."
          },
          {
            "name": "createdAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the reaction was created."
          },
          {
            "name": "reactors",
            "type": {
              "name": null
            },
            "description": "Reactors to the reaction subject with the emotion represented by this reaction group."
          },
          {
            "name": "subject",
            "type": {
              "name": null
            },
            "description": "The subject that was reacted to."
          },
          {
            "name": "viewerHasReacted",
            "type": {
              "name": null
            },
            "description": "Whether or not the authenticated user has left a reaction on the subject."
          }
        ]
      },
      {
        "name": "ReactionOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of reactions can be ordered upon return.",
        "fields": null
      },
      {
        "name": "ReactionOrderField",
        "kind": "ENUM",
        "description": "A list of fields that reactions can be ordered by.",
        "fields": null
      },
      {
        "name": "Reactor",
        "kind": "UNION",
        "description": "Types that can be assigned to reactions.",
        "fields": null
      },
      {
        "name": "ReactorConnection",
        "kind": "OBJECT",
        "description": "The connection type for Reactor.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ReactorEdge",
        "kind": "OBJECT",
        "description": "Represents an author of a reaction.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": null
            },
            "description": "The author of the reaction."
          },
          {
            "name": "reactedAt",
            "type": {
              "name": null
            },
            "description": "The moment when the user made the reaction."
          }
        ]
      },
      {
        "name": "ReadyForReviewEvent",
        "kind": "OBJECT",
        "description": "Represents a 'ready_for_review' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReadyForReviewEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this ready for review event."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this ready for review event."
          }
        ]
      },
      {
        "name": "Ref",
        "kind": "OBJECT",
        "description": "Represents a Git reference.",
        "fields": [
          {
            "name": "associatedPullRequests",
            "type": {
              "name": null
            },
            "description": "A list of pull requests with this ref as the head ref."
          },
          {
            "name": "branchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "Branch protection rules for this ref"
          },
          {
            "name": "compare",
            "type": {
              "name": "Comparison"
            },
            "description": "Compares the current ref as a base ref to another head ref, if the comparison can be made."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Ref object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The ref name."
          },
          {
            "name": "prefix",
            "type": {
              "name": null
            },
            "description": "The ref's prefix, such as `refs/heads/` or `refs/tags/`."
          },
          {
            "name": "refUpdateRule",
            "type": {
              "name": "RefUpdateRule"
            },
            "description": "Branch protection rules that are viewable by non-admins"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository the ref belongs to."
          },
          {
            "name": "rules",
            "type": {
              "name": "RepositoryRuleConnection"
            },
            "description": "A list of rules from active Repository and Organization rulesets that apply to this ref."
          },
          {
            "name": "target",
            "type": {
              "name": "GitObject"
            },
            "description": "The object the ref points to. Returns null when object does not exist."
          }
        ]
      },
      {
        "name": "RefConnection",
        "kind": "OBJECT",
        "description": "The connection type for Ref.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RefEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Ref"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RefNameConditionTarget",
        "kind": "OBJECT",
        "description": "Parameters to be used for the ref_name condition",
        "fields": [
          {
            "name": "exclude",
            "type": {
              "name": null
            },
            "description": "Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match."
          },
          {
            "name": "include",
            "type": {
              "name": null
            },
            "description": "Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches."
          }
        ]
      },
      {
        "name": "RefNameConditionTargetInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the ref_name condition",
        "fields": null
      },
      {
        "name": "RefOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of git refs can be ordered upon return.",
        "fields": null
      },
      {
        "name": "RefOrderField",
        "kind": "ENUM",
        "description": "Properties by which ref connections can be ordered.",
        "fields": null
      },
      {
        "name": "RefUpdate",
        "kind": "INPUT_OBJECT",
        "description": "A ref update",
        "fields": null
      },
      {
        "name": "RefUpdateRule",
        "kind": "OBJECT",
        "description": "Branch protection rules that are enforced on the viewer.",
        "fields": [
          {
            "name": "allowsDeletions",
            "type": {
              "name": null
            },
            "description": "Can this branch be deleted."
          },
          {
            "name": "allowsForcePushes",
            "type": {
              "name": null
            },
            "description": "Are force pushes allowed on this branch."
          },
          {
            "name": "blocksCreations",
            "type": {
              "name": null
            },
            "description": "Can matching branches be created."
          },
          {
            "name": "pattern",
            "type": {
              "name": null
            },
            "description": "Identifies the protection rule pattern."
          },
          {
            "name": "requiredApprovingReviewCount",
            "type": {
              "name": "Int"
            },
            "description": "Number of approving reviews required to update matching branches."
          },
          {
            "name": "requiredStatusCheckContexts",
            "type": {
              "name": null
            },
            "description": "List of required status check contexts that must pass for commits to be accepted to matching branches."
          },
          {
            "name": "requiresCodeOwnerReviews",
            "type": {
              "name": null
            },
            "description": "Are reviews from code owners required to update matching branches."
          },
          {
            "name": "requiresConversationResolution",
            "type": {
              "name": null
            },
            "description": "Are conversations required to be resolved before merging."
          },
          {
            "name": "requiresLinearHistory",
            "type": {
              "name": null
            },
            "description": "Are merge commits prohibited from being pushed to this branch."
          },
          {
            "name": "requiresSignatures",
            "type": {
              "name": null
            },
            "description": "Are commits required to be signed."
          },
          {
            "name": "viewerAllowedToDismissReviews",
            "type": {
              "name": null
            },
            "description": "Is the viewer allowed to dismiss reviews."
          },
          {
            "name": "viewerCanPush",
            "type": {
              "name": null
            },
            "description": "Can the viewer push to the branch"
          }
        ]
      },
      {
        "name": "ReferencedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'referenced' event on a given `ReferencedSubject`.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the commit associated with the 'referenced' event."
          },
          {
            "name": "commitRepository",
            "type": {
              "name": null
            },
            "description": "Identifies the repository associated with the 'referenced' event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReferencedEvent object"
          },
          {
            "name": "isCrossRepository",
            "type": {
              "name": null
            },
            "description": "Reference originated in a different repository."
          },
          {
            "name": "isDirectReference",
            "type": {
              "name": null
            },
            "description": "Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference."
          },
          {
            "name": "subject",
            "type": {
              "name": null
            },
            "description": "Object referenced by event."
          }
        ]
      },
      {
        "name": "ReferencedSubject",
        "kind": "UNION",
        "description": "Any referencable object",
        "fields": null
      },
      {
        "name": "RegenerateEnterpriseIdentityProviderRecoveryCodesInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes",
        "fields": null
      },
      {
        "name": "RegenerateEnterpriseIdentityProviderRecoveryCodesPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "identityProvider",
            "type": {
              "name": "EnterpriseIdentityProvider"
            },
            "description": "The identity provider for the enterprise."
          }
        ]
      },
      {
        "name": "RegenerateVerifiableDomainTokenInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RegenerateVerifiableDomainToken",
        "fields": null
      },
      {
        "name": "RegenerateVerifiableDomainTokenPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RegenerateVerifiableDomainToken.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "verificationToken",
            "type": {
              "name": "String"
            },
            "description": "The verification token that was generated."
          }
        ]
      },
      {
        "name": "RejectDeploymentsInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RejectDeployments",
        "fields": null
      },
      {
        "name": "RejectDeploymentsPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RejectDeployments.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "deployments",
            "type": {
              "name": null
            },
            "description": "The affected deployments."
          }
        ]
      },
      {
        "name": "Release",
        "kind": "OBJECT",
        "description": "A release contains the content for a release.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "User"
            },
            "description": "The author of the release"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The description of the release."
          },
          {
            "name": "descriptionHTML",
            "type": {
              "name": "HTML"
            },
            "description": "The description of this release rendered to HTML."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Release object"
          },
          {
            "name": "isDraft",
            "type": {
              "name": null
            },
            "description": "Whether or not the release is a draft"
          },
          {
            "name": "isLatest",
            "type": {
              "name": null
            },
            "description": "Whether or not the release is the latest releast"
          },
          {
            "name": "isPrerelease",
            "type": {
              "name": null
            },
            "description": "Whether or not the release is a prerelease"
          },
          {
            "name": "mentions",
            "type": {
              "name": "UserConnection"
            },
            "description": "A list of users mentioned in the release description"
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The title of the release."
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the release was created."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "releaseAssets",
            "type": {
              "name": null
            },
            "description": "List of releases assets which are dependent on this release."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository that the release belongs to."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this issue"
          },
          {
            "name": "shortDescriptionHTML",
            "type": {
              "name": "HTML"
            },
            "description": "A description of the release, rendered to HTML without any links in it."
          },
          {
            "name": "tag",
            "type": {
              "name": "Ref"
            },
            "description": "The Git tag the release points to"
          },
          {
            "name": "tagCommit",
            "type": {
              "name": "Commit"
            },
            "description": "The tag commit for this release."
          },
          {
            "name": "tagName",
            "type": {
              "name": null
            },
            "description": "The name of the release's Git tag"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this issue"
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          }
        ]
      },
      {
        "name": "ReleaseAsset",
        "kind": "OBJECT",
        "description": "A release asset contains the content for a release asset.",
        "fields": [
          {
            "name": "contentType",
            "type": {
              "name": null
            },
            "description": "The asset's content-type"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "downloadCount",
            "type": {
              "name": null
            },
            "description": "The number of times this asset was downloaded"
          },
          {
            "name": "downloadUrl",
            "type": {
              "name": null
            },
            "description": "Identifies the URL where you can download the release asset via the browser."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReleaseAsset object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "Identifies the title of the release asset."
          },
          {
            "name": "release",
            "type": {
              "name": "Release"
            },
            "description": "Release that the asset is associated with"
          },
          {
            "name": "size",
            "type": {
              "name": null
            },
            "description": "The size (in bytes) of the asset"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "uploadedBy",
            "type": {
              "name": null
            },
            "description": "The user that performed the upload"
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "Identifies the URL of the release asset."
          }
        ]
      },
      {
        "name": "ReleaseAssetConnection",
        "kind": "OBJECT",
        "description": "The connection type for ReleaseAsset.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ReleaseAssetEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ReleaseAsset"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ReleaseConnection",
        "kind": "OBJECT",
        "description": "The connection type for Release.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ReleaseEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Release"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ReleaseOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of releases can be ordered upon return.",
        "fields": null
      },
      {
        "name": "ReleaseOrderField",
        "kind": "ENUM",
        "description": "Properties by which release connections can be ordered.",
        "fields": null
      },
      {
        "name": "RemoveAssigneesFromAssignableInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveAssigneesFromAssignable",
        "fields": null
      },
      {
        "name": "RemoveAssigneesFromAssignablePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveAssigneesFromAssignable.",
        "fields": [
          {
            "name": "assignable",
            "type": {
              "name": "Assignable"
            },
            "description": "The item that was unassigned."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "RemoveEnterpriseAdminInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveEnterpriseAdmin",
        "fields": null
      },
      {
        "name": "RemoveEnterpriseAdminPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveEnterpriseAdmin.",
        "fields": [
          {
            "name": "admin",
            "type": {
              "name": "User"
            },
            "description": "The user who was removed as an administrator."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The updated enterprise."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of removing an administrator."
          },
          {
            "name": "viewer",
            "type": {
              "name": "User"
            },
            "description": "The viewer performing the mutation."
          }
        ]
      },
      {
        "name": "RemoveEnterpriseIdentityProviderInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveEnterpriseIdentityProvider",
        "fields": null
      },
      {
        "name": "RemoveEnterpriseIdentityProviderPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveEnterpriseIdentityProvider.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "identityProvider",
            "type": {
              "name": "EnterpriseIdentityProvider"
            },
            "description": "The identity provider that was removed from the enterprise."
          }
        ]
      },
      {
        "name": "RemoveEnterpriseMemberInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveEnterpriseMember",
        "fields": null
      },
      {
        "name": "RemoveEnterpriseMemberPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveEnterpriseMember.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The updated enterprise."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user that was removed from the enterprise."
          },
          {
            "name": "viewer",
            "type": {
              "name": "User"
            },
            "description": "The viewer performing the mutation."
          }
        ]
      },
      {
        "name": "RemoveEnterpriseOrganizationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveEnterpriseOrganization",
        "fields": null
      },
      {
        "name": "RemoveEnterpriseOrganizationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveEnterpriseOrganization.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The updated enterprise."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization that was removed from the enterprise."
          },
          {
            "name": "viewer",
            "type": {
              "name": "User"
            },
            "description": "The viewer performing the mutation."
          }
        ]
      },
      {
        "name": "RemoveEnterpriseSupportEntitlementInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveEnterpriseSupportEntitlement",
        "fields": null
      },
      {
        "name": "RemoveEnterpriseSupportEntitlementPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveEnterpriseSupportEntitlement.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of removing the support entitlement."
          }
        ]
      },
      {
        "name": "RemoveLabelsFromLabelableInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveLabelsFromLabelable",
        "fields": null
      },
      {
        "name": "RemoveLabelsFromLabelablePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveLabelsFromLabelable.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "labelable",
            "type": {
              "name": "Labelable"
            },
            "description": "The Labelable the labels were removed from."
          }
        ]
      },
      {
        "name": "RemoveOutsideCollaboratorInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveOutsideCollaborator",
        "fields": null
      },
      {
        "name": "RemoveOutsideCollaboratorPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveOutsideCollaborator.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "removedUser",
            "type": {
              "name": "User"
            },
            "description": "The user that was removed as an outside collaborator."
          }
        ]
      },
      {
        "name": "RemoveReactionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveReaction",
        "fields": null
      },
      {
        "name": "RemoveReactionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveReaction.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "reaction",
            "type": {
              "name": "Reaction"
            },
            "description": "The reaction object."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "The reaction groups for the subject."
          },
          {
            "name": "subject",
            "type": {
              "name": "Reactable"
            },
            "description": "The reactable subject."
          }
        ]
      },
      {
        "name": "RemoveStarInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveStar",
        "fields": null
      },
      {
        "name": "RemoveStarPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveStar.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "starrable",
            "type": {
              "name": "Starrable"
            },
            "description": "The starrable."
          }
        ]
      },
      {
        "name": "RemoveSubIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveSubIssue",
        "fields": null
      },
      {
        "name": "RemoveSubIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveSubIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The parent of the sub-issue."
          },
          {
            "name": "subIssue",
            "type": {
              "name": "Issue"
            },
            "description": "The sub-issue of the parent."
          }
        ]
      },
      {
        "name": "RemoveUpvoteInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RemoveUpvote",
        "fields": null
      },
      {
        "name": "RemoveUpvotePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RemoveUpvote.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "subject",
            "type": {
              "name": "Votable"
            },
            "description": "The votable subject."
          }
        ]
      },
      {
        "name": "RemovedFromMergeQueueEvent",
        "kind": "OBJECT",
        "description": "Represents a 'removed_from_merge_queue' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "beforeCommit",
            "type": {
              "name": "Commit"
            },
            "description": "Identifies the before commit SHA for the 'removed_from_merge_queue' event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "enqueuer",
            "type": {
              "name": "User"
            },
            "description": "The user who removed this Pull Request from the merge queue"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RemovedFromMergeQueueEvent object"
          },
          {
            "name": "mergeQueue",
            "type": {
              "name": "MergeQueue"
            },
            "description": "The merge queue where this pull request was removed from."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "reason",
            "type": {
              "name": "String"
            },
            "description": "The reason this pull request was removed from the queue."
          }
        ]
      },
      {
        "name": "RemovedFromProjectEvent",
        "kind": "OBJECT",
        "description": "Represents a 'removed_from_project' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RemovedFromProjectEvent object"
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "Project referenced by event."
          },
          {
            "name": "projectColumnName",
            "type": {
              "name": null
            },
            "description": "Column name referenced by this project event."
          }
        ]
      },
      {
        "name": "RenamedTitleEvent",
        "kind": "OBJECT",
        "description": "Represents a 'renamed' event on a given issue or pull request",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "currentTitle",
            "type": {
              "name": null
            },
            "description": "Identifies the current title of the issue or pull request."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RenamedTitleEvent object"
          },
          {
            "name": "previousTitle",
            "type": {
              "name": null
            },
            "description": "Identifies the previous title of the issue or pull request."
          },
          {
            "name": "subject",
            "type": {
              "name": null
            },
            "description": "Subject that was renamed."
          }
        ]
      },
      {
        "name": "RenamedTitleSubject",
        "kind": "UNION",
        "description": "An object which has a renamable title",
        "fields": null
      },
      {
        "name": "ReopenDiscussionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ReopenDiscussion",
        "fields": null
      },
      {
        "name": "ReopenDiscussionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ReopenDiscussion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion that was reopened."
          }
        ]
      },
      {
        "name": "ReopenIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ReopenIssue",
        "fields": null
      },
      {
        "name": "ReopenIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ReopenIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The issue that was opened."
          }
        ]
      },
      {
        "name": "ReopenPullRequestInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ReopenPullRequest",
        "fields": null
      },
      {
        "name": "ReopenPullRequestPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ReopenPullRequest.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request that was reopened."
          }
        ]
      },
      {
        "name": "ReopenedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'reopened' event on any `Closable`.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "closable",
            "type": {
              "name": null
            },
            "description": "Object that was reopened."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReopenedEvent object"
          },
          {
            "name": "stateReason",
            "type": {
              "name": "IssueStateReason"
            },
            "description": "The reason the issue state was changed to open."
          }
        ]
      },
      {
        "name": "ReorderEnvironmentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ReorderEnvironment",
        "fields": null
      },
      {
        "name": "ReorderEnvironmentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ReorderEnvironment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "environment",
            "type": {
              "name": "Environment"
            },
            "description": "The environment that was reordered"
          }
        ]
      },
      {
        "name": "RepoAccessAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.access event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoAccessAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          },
          {
            "name": "visibility",
            "type": {
              "name": "RepoAccessAuditEntryVisibility"
            },
            "description": "The visibility of the repository"
          }
        ]
      },
      {
        "name": "RepoAccessAuditEntryVisibility",
        "kind": "ENUM",
        "description": "The privacy of a repository",
        "fields": null
      },
      {
        "name": "RepoAddMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.add_member event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoAddMemberAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          },
          {
            "name": "visibility",
            "type": {
              "name": "RepoAddMemberAuditEntryVisibility"
            },
            "description": "The visibility of the repository"
          }
        ]
      },
      {
        "name": "RepoAddMemberAuditEntryVisibility",
        "kind": "ENUM",
        "description": "The privacy of a repository",
        "fields": null
      },
      {
        "name": "RepoAddTopicAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.add_topic event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoAddTopicAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "topic",
            "type": {
              "name": "Topic"
            },
            "description": "The name of the topic added to the repository"
          },
          {
            "name": "topicName",
            "type": {
              "name": "String"
            },
            "description": "The name of the topic added to the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoArchivedAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.archived event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoArchivedAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          },
          {
            "name": "visibility",
            "type": {
              "name": "RepoArchivedAuditEntryVisibility"
            },
            "description": "The visibility of the repository"
          }
        ]
      },
      {
        "name": "RepoArchivedAuditEntryVisibility",
        "kind": "ENUM",
        "description": "The privacy of a repository",
        "fields": null
      },
      {
        "name": "RepoChangeMergeSettingAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.change_merge_setting event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoChangeMergeSettingAuditEntry object"
          },
          {
            "name": "isEnabled",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether the change was to enable (true) or disable (false) the merge type"
          },
          {
            "name": "mergeType",
            "type": {
              "name": "RepoChangeMergeSettingAuditEntryMergeType"
            },
            "description": "The merge method affected by the change"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoChangeMergeSettingAuditEntryMergeType",
        "kind": "ENUM",
        "description": "The merge options available for pull requests to this repository.",
        "fields": null
      },
      {
        "name": "RepoConfigDisableAnonymousGitAccessAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.disable_anonymous_git_access event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigDisableAnonymousGitAccessAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigDisableCollaboratorsOnlyAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.disable_collaborators_only event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigDisableCollaboratorsOnlyAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigDisableContributorsOnlyAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.disable_contributors_only event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigDisableContributorsOnlyAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigDisableSockpuppetDisallowedAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.disable_sockpuppet_disallowed event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigDisableSockpuppetDisallowedAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigEnableAnonymousGitAccessAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.enable_anonymous_git_access event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigEnableAnonymousGitAccessAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigEnableCollaboratorsOnlyAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.enable_collaborators_only event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigEnableCollaboratorsOnlyAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigEnableContributorsOnlyAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.enable_contributors_only event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigEnableContributorsOnlyAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigEnableSockpuppetDisallowedAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.enable_sockpuppet_disallowed event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigEnableSockpuppetDisallowedAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigLockAnonymousGitAccessAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.lock_anonymous_git_access event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigLockAnonymousGitAccessAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoConfigUnlockAnonymousGitAccessAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.config.unlock_anonymous_git_access event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoConfigUnlockAnonymousGitAccessAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepoCreateAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.create event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "forkParentName",
            "type": {
              "name": "String"
            },
            "description": "The name of the parent repository for this forked repository."
          },
          {
            "name": "forkSourceName",
            "type": {
              "name": "String"
            },
            "description": "The name of the root repository for this network."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoCreateAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          },
          {
            "name": "visibility",
            "type": {
              "name": "RepoCreateAuditEntryVisibility"
            },
            "description": "The visibility of the repository"
          }
        ]
      },
      {
        "name": "RepoCreateAuditEntryVisibility",
        "kind": "ENUM",
        "description": "The privacy of a repository",
        "fields": null
      },
      {
        "name": "RepoDestroyAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.destroy event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoDestroyAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          },
          {
            "name": "visibility",
            "type": {
              "name": "RepoDestroyAuditEntryVisibility"
            },
            "description": "The visibility of the repository"
          }
        ]
      },
      {
        "name": "RepoDestroyAuditEntryVisibility",
        "kind": "ENUM",
        "description": "The privacy of a repository",
        "fields": null
      },
      {
        "name": "RepoRemoveMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.remove_member event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoRemoveMemberAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          },
          {
            "name": "visibility",
            "type": {
              "name": "RepoRemoveMemberAuditEntryVisibility"
            },
            "description": "The visibility of the repository"
          }
        ]
      },
      {
        "name": "RepoRemoveMemberAuditEntryVisibility",
        "kind": "ENUM",
        "description": "The privacy of a repository",
        "fields": null
      },
      {
        "name": "RepoRemoveTopicAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repo.remove_topic event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepoRemoveTopicAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "topic",
            "type": {
              "name": "Topic"
            },
            "description": "The name of the topic added to the repository"
          },
          {
            "name": "topicName",
            "type": {
              "name": "String"
            },
            "description": "The name of the topic added to the repository"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "ReportedContentClassifiers",
        "kind": "ENUM",
        "description": "The reasons a piece of content can be reported or minimized.",
        "fields": null
      },
      {
        "name": "Repository",
        "kind": "OBJECT",
        "description": "A repository contains the content for a project.",
        "fields": [
          {
            "name": "allowUpdateBranch",
            "type": {
              "name": null
            },
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging."
          },
          {
            "name": "archivedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the repository was archived."
          },
          {
            "name": "assignableUsers",
            "type": {
              "name": null
            },
            "description": "A list of users that can be assigned to issues in this repository."
          },
          {
            "name": "autoMergeAllowed",
            "type": {
              "name": null
            },
            "description": "Whether or not Auto-merge can be enabled on pull requests in this repository."
          },
          {
            "name": "branchProtectionRules",
            "type": {
              "name": null
            },
            "description": "A list of branch protection rules for this repository."
          },
          {
            "name": "codeOfConduct",
            "type": {
              "name": "CodeOfConduct"
            },
            "description": "Returns the code of conduct for this repository"
          },
          {
            "name": "codeowners",
            "type": {
              "name": "RepositoryCodeowners"
            },
            "description": "Information extracted from the repository's `CODEOWNERS` file."
          },
          {
            "name": "collaborators",
            "type": {
              "name": "RepositoryCollaboratorConnection"
            },
            "description": "A list of collaborators associated with the repository."
          },
          {
            "name": "commitComments",
            "type": {
              "name": null
            },
            "description": "A list of commit comments associated with the repository."
          },
          {
            "name": "contactLinks",
            "type": {
              "name": null
            },
            "description": "Returns a list of contact links associated to the repository"
          },
          {
            "name": "contributingGuidelines",
            "type": {
              "name": "ContributingGuidelines"
            },
            "description": "Returns the contributing guidelines for this repository."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "defaultBranchRef",
            "type": {
              "name": "Ref"
            },
            "description": "The Ref associated with the repository's default branch."
          },
          {
            "name": "deleteBranchOnMerge",
            "type": {
              "name": null
            },
            "description": "Whether or not branches are automatically deleted when merged in this repository."
          },
          {
            "name": "dependencyGraphManifests",
            "type": {
              "name": "DependencyGraphManifestConnection"
            },
            "description": "A list of dependency manifests contained in the repository"
          },
          {
            "name": "deployKeys",
            "type": {
              "name": null
            },
            "description": "A list of deploy keys that are on this repository."
          },
          {
            "name": "deployments",
            "type": {
              "name": null
            },
            "description": "Deployments associated with the repository"
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The description of the repository."
          },
          {
            "name": "descriptionHTML",
            "type": {
              "name": null
            },
            "description": "The description of the repository rendered to HTML."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "Returns a single discussion from the current repository by number."
          },
          {
            "name": "discussionCategories",
            "type": {
              "name": null
            },
            "description": "A list of discussion categories that are available in the repository."
          },
          {
            "name": "discussionCategory",
            "type": {
              "name": "DiscussionCategory"
            },
            "description": "A discussion category by slug."
          },
          {
            "name": "discussions",
            "type": {
              "name": null
            },
            "description": "A list of discussions that have been opened in the repository."
          },
          {
            "name": "diskUsage",
            "type": {
              "name": "Int"
            },
            "description": "The number of kilobytes this repository occupies on disk."
          },
          {
            "name": "environment",
            "type": {
              "name": "Environment"
            },
            "description": "Returns a single active environment from the current repository by name."
          },
          {
            "name": "environments",
            "type": {
              "name": null
            },
            "description": "A list of environments that are in this repository."
          },
          {
            "name": "forkCount",
            "type": {
              "name": null
            },
            "description": "Returns how many forks there are of this repository in the whole network."
          },
          {
            "name": "forkingAllowed",
            "type": {
              "name": null
            },
            "description": "Whether this repository allows forks."
          },
          {
            "name": "forks",
            "type": {
              "name": null
            },
            "description": "A list of direct forked repositories."
          },
          {
            "name": "fundingLinks",
            "type": {
              "name": null
            },
            "description": "The funding links for this repository"
          },
          {
            "name": "hasDiscussionsEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has the Discussions feature enabled."
          },
          {
            "name": "hasIssuesEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has issues feature enabled."
          },
          {
            "name": "hasProjectsEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has the Projects feature enabled."
          },
          {
            "name": "hasSponsorshipsEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository displays a Sponsor button for financial contributions."
          },
          {
            "name": "hasVulnerabilityAlertsEnabled",
            "type": {
              "name": null
            },
            "description": "Whether vulnerability alerts are enabled for the repository."
          },
          {
            "name": "hasWikiEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has wiki feature enabled."
          },
          {
            "name": "homepageUrl",
            "type": {
              "name": "URI"
            },
            "description": "The repository's URL."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Repository object"
          },
          {
            "name": "interactionAbility",
            "type": {
              "name": "RepositoryInteractionAbility"
            },
            "description": "The interaction ability settings for this repository."
          },
          {
            "name": "isArchived",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository is unmaintained."
          },
          {
            "name": "isBlankIssuesEnabled",
            "type": {
              "name": null
            },
            "description": "Returns true if blank issue creation is allowed"
          },
          {
            "name": "isDisabled",
            "type": {
              "name": null
            },
            "description": "Returns whether or not this repository disabled."
          },
          {
            "name": "isEmpty",
            "type": {
              "name": null
            },
            "description": "Returns whether or not this repository is empty."
          },
          {
            "name": "isFork",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is a fork."
          },
          {
            "name": "isInOrganization",
            "type": {
              "name": null
            },
            "description": "Indicates if a repository is either owned by an organization, or is a private fork of an organization repository."
          },
          {
            "name": "isLocked",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has been locked or not."
          },
          {
            "name": "isMirror",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is a mirror."
          },
          {
            "name": "isPrivate",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is private or internal."
          },
          {
            "name": "isSecurityPolicyEnabled",
            "type": {
              "name": "Boolean"
            },
            "description": "Returns true if this repository has a security policy"
          },
          {
            "name": "isTemplate",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is a template that can be used to generate new repositories."
          },
          {
            "name": "isUserConfigurationRepository",
            "type": {
              "name": null
            },
            "description": "Is this repository a user configuration repository?"
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "Returns a single issue from the current repository by number."
          },
          {
            "name": "issueOrPullRequest",
            "type": {
              "name": "IssueOrPullRequest"
            },
            "description": "Returns a single issue-like object from the current repository by number."
          },
          {
            "name": "issueTemplates",
            "type": {
              "name": null
            },
            "description": "Returns a list of issue templates associated to the repository"
          },
          {
            "name": "issues",
            "type": {
              "name": null
            },
            "description": "A list of issues that have been opened in the repository."
          },
          {
            "name": "label",
            "type": {
              "name": "Label"
            },
            "description": "Returns a single label by name"
          },
          {
            "name": "labels",
            "type": {
              "name": "LabelConnection"
            },
            "description": "A list of labels associated with the repository."
          },
          {
            "name": "languages",
            "type": {
              "name": "LanguageConnection"
            },
            "description": "A list containing a breakdown of the language composition of the repository."
          },
          {
            "name": "latestRelease",
            "type": {
              "name": "Release"
            },
            "description": "Get the latest release for the repository if one exists."
          },
          {
            "name": "licenseInfo",
            "type": {
              "name": "License"
            },
            "description": "The license associated with the repository"
          },
          {
            "name": "lockReason",
            "type": {
              "name": "RepositoryLockReason"
            },
            "description": "The reason the repository has been locked."
          },
          {
            "name": "mentionableUsers",
            "type": {
              "name": null
            },
            "description": "A list of Users that can be mentioned in the context of the repository."
          },
          {
            "name": "mergeCommitAllowed",
            "type": {
              "name": null
            },
            "description": "Whether or not PRs are merged with a merge commit on this repository."
          },
          {
            "name": "mergeCommitMessage",
            "type": {
              "name": null
            },
            "description": "How the default commit message will be generated when merging a pull request."
          },
          {
            "name": "mergeCommitTitle",
            "type": {
              "name": null
            },
            "description": "How the default commit title will be generated when merging a pull request."
          },
          {
            "name": "mergeQueue",
            "type": {
              "name": "MergeQueue"
            },
            "description": "The merge queue for a specified branch, otherwise the default branch if not provided."
          },
          {
            "name": "milestone",
            "type": {
              "name": "Milestone"
            },
            "description": "Returns a single milestone from the current repository by number."
          },
          {
            "name": "milestones",
            "type": {
              "name": "MilestoneConnection"
            },
            "description": "A list of milestones associated with the repository."
          },
          {
            "name": "mirrorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The repository's original mirror URL."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the repository."
          },
          {
            "name": "nameWithOwner",
            "type": {
              "name": null
            },
            "description": "The repository's name with owner."
          },
          {
            "name": "object",
            "type": {
              "name": "GitObject"
            },
            "description": "A Git object in the repository"
          },
          {
            "name": "openGraphImageUrl",
            "type": {
              "name": null
            },
            "description": "The image used to represent this repository in Open Graph data."
          },
          {
            "name": "owner",
            "type": {
              "name": null
            },
            "description": "The User owner of the repository."
          },
          {
            "name": "packages",
            "type": {
              "name": null
            },
            "description": "A list of packages under the owner."
          },
          {
            "name": "parent",
            "type": {
              "name": "Repository"
            },
            "description": "The repository parent, if this is a fork."
          },
          {
            "name": "pinnedDiscussions",
            "type": {
              "name": null
            },
            "description": "A list of discussions that have been pinned in this repository."
          },
          {
            "name": "pinnedEnvironments",
            "type": {
              "name": "PinnedEnvironmentConnection"
            },
            "description": "A list of pinned environments for this repository."
          },
          {
            "name": "pinnedIssues",
            "type": {
              "name": "PinnedIssueConnection"
            },
            "description": "A list of pinned issues for this repository."
          },
          {
            "name": "planFeatures",
            "type": {
              "name": null
            },
            "description": "Returns information about the availability of certain features and limits based on the repository's billing plan."
          },
          {
            "name": "primaryLanguage",
            "type": {
              "name": "Language"
            },
            "description": "The primary language of the repository's code."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "Find project by number."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "Finds and returns the Project according to the provided Project number."
          },
          {
            "name": "projects",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          },
          {
            "name": "projectsResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path listing the repository's projects"
          },
          {
            "name": "projectsUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL listing the repository's projects"
          },
          {
            "name": "projectsV2",
            "type": {
              "name": null
            },
            "description": "List of projects linked to this repository."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "Returns a single pull request from the current repository by number."
          },
          {
            "name": "pullRequestTemplates",
            "type": {
              "name": null
            },
            "description": "Returns a list of pull request templates associated to the repository"
          },
          {
            "name": "pullRequests",
            "type": {
              "name": null
            },
            "description": "A list of pull requests that have been opened in the repository."
          },
          {
            "name": "pushedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the repository was last pushed to."
          },
          {
            "name": "rebaseMergeAllowed",
            "type": {
              "name": null
            },
            "description": "Whether or not rebase-merging is enabled on this repository."
          },
          {
            "name": "recentProjects",
            "type": {
              "name": null
            },
            "description": "Recent projects that this user has modified in the context of the owner."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "Fetch a given ref from the repository"
          },
          {
            "name": "refs",
            "type": {
              "name": "RefConnection"
            },
            "description": "Fetch a list of refs from the repository"
          },
          {
            "name": "release",
            "type": {
              "name": "Release"
            },
            "description": "Lookup a single release given various criteria."
          },
          {
            "name": "releases",
            "type": {
              "name": null
            },
            "description": "List of releases which are dependent on this repository."
          },
          {
            "name": "repositoryTopics",
            "type": {
              "name": null
            },
            "description": "A list of applied repository-topic associations for this repository."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this repository"
          },
          {
            "name": "ruleset",
            "type": {
              "name": "RepositoryRuleset"
            },
            "description": "Returns a single ruleset from the current repository by ID."
          },
          {
            "name": "rulesets",
            "type": {
              "name": "RepositoryRulesetConnection"
            },
            "description": "A list of rulesets for this repository."
          },
          {
            "name": "securityPolicyUrl",
            "type": {
              "name": "URI"
            },
            "description": "The security policy URL."
          },
          {
            "name": "shortDescriptionHTML",
            "type": {
              "name": null
            },
            "description": "A description of the repository, rendered to HTML without any links in it."
          },
          {
            "name": "squashMergeAllowed",
            "type": {
              "name": null
            },
            "description": "Whether or not squash-merging is enabled on this repository."
          },
          {
            "name": "squashMergeCommitMessage",
            "type": {
              "name": null
            },
            "description": "How the default commit message will be generated when squash merging a pull request."
          },
          {
            "name": "squashMergeCommitTitle",
            "type": {
              "name": null
            },
            "description": "How the default commit title will be generated when squash merging a pull request."
          },
          {
            "name": "sshUrl",
            "type": {
              "name": null
            },
            "description": "The SSH URL to clone this repository"
          },
          {
            "name": "stargazerCount",
            "type": {
              "name": null
            },
            "description": "Returns a count of how many stargazers there are on this object\n"
          },
          {
            "name": "stargazers",
            "type": {
              "name": null
            },
            "description": "A list of users who have starred this starrable."
          },
          {
            "name": "submodules",
            "type": {
              "name": null
            },
            "description": "Returns a list of all submodules in this repository parsed from the .gitmodules file as of the default branch's HEAD commit."
          },
          {
            "name": "tempCloneToken",
            "type": {
              "name": "String"
            },
            "description": "Temporary authentication token for cloning this repository."
          },
          {
            "name": "templateRepository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository from which this repository was generated, if any."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this repository"
          },
          {
            "name": "usesCustomOpenGraphImage",
            "type": {
              "name": null
            },
            "description": "Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar."
          },
          {
            "name": "viewerCanAdminister",
            "type": {
              "name": null
            },
            "description": "Indicates whether the viewer has admin permissions on this repository."
          },
          {
            "name": "viewerCanCreateProjects",
            "type": {
              "name": null
            },
            "description": "Can the current viewer create new projects on this owner."
          },
          {
            "name": "viewerCanSubscribe",
            "type": {
              "name": null
            },
            "description": "Check if the viewer is able to change their subscription status for the repository."
          },
          {
            "name": "viewerCanUpdateTopics",
            "type": {
              "name": null
            },
            "description": "Indicates whether the viewer can update the topics of this repository."
          },
          {
            "name": "viewerDefaultCommitEmail",
            "type": {
              "name": "String"
            },
            "description": "The last commit email for the viewer."
          },
          {
            "name": "viewerDefaultMergeMethod",
            "type": {
              "name": null
            },
            "description": "The last used merge method by the viewer or the default for the repository."
          },
          {
            "name": "viewerHasStarred",
            "type": {
              "name": null
            },
            "description": "Returns a boolean indicating whether the viewing user has starred this starrable."
          },
          {
            "name": "viewerPermission",
            "type": {
              "name": "RepositoryPermission"
            },
            "description": "The users permission level on the repository. Will return null if authenticated as an GitHub App."
          },
          {
            "name": "viewerPossibleCommitEmails",
            "type": {
              "name": null
            },
            "description": "A list of emails this viewer can commit with."
          },
          {
            "name": "viewerSubscription",
            "type": {
              "name": "SubscriptionState"
            },
            "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."
          },
          {
            "name": "visibility",
            "type": {
              "name": null
            },
            "description": "Indicates the repository's visibility level."
          },
          {
            "name": "vulnerabilityAlert",
            "type": {
              "name": "RepositoryVulnerabilityAlert"
            },
            "description": "Returns a single vulnerability alert from the current repository by number."
          },
          {
            "name": "vulnerabilityAlerts",
            "type": {
              "name": "RepositoryVulnerabilityAlertConnection"
            },
            "description": "A list of vulnerability alerts that are on this repository."
          },
          {
            "name": "watchers",
            "type": {
              "name": null
            },
            "description": "A list of users watching the repository."
          },
          {
            "name": "webCommitSignoffRequired",
            "type": {
              "name": null
            },
            "description": "Whether contributors are required to sign off on web-based commits in this repository."
          }
        ]
      },
      {
        "name": "RepositoryAffiliation",
        "kind": "ENUM",
        "description": "The affiliation of a user to a repository",
        "fields": null
      },
      {
        "name": "RepositoryAuditEntryData",
        "kind": "INTERFACE",
        "description": "Metadata for an audit entry with action repo.*",
        "fields": [
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          }
        ]
      },
      {
        "name": "RepositoryCodeowners",
        "kind": "OBJECT",
        "description": "Information extracted from a repository's `CODEOWNERS` file.",
        "fields": [
          {
            "name": "errors",
            "type": {
              "name": null
            },
            "description": "Any problems that were encountered while parsing the `CODEOWNERS` file."
          }
        ]
      },
      {
        "name": "RepositoryCodeownersError",
        "kind": "OBJECT",
        "description": "An error in a `CODEOWNERS` file.",
        "fields": [
          {
            "name": "column",
            "type": {
              "name": null
            },
            "description": "The column number where the error occurs."
          },
          {
            "name": "kind",
            "type": {
              "name": null
            },
            "description": "A short string describing the type of error."
          },
          {
            "name": "line",
            "type": {
              "name": null
            },
            "description": "The line number where the error occurs."
          },
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "A complete description of the error, combining information from other fields."
          },
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "The path to the file when the error occurs."
          },
          {
            "name": "source",
            "type": {
              "name": null
            },
            "description": "The content of the line where the error occurs."
          },
          {
            "name": "suggestion",
            "type": {
              "name": "String"
            },
            "description": "A suggestion of how to fix the error."
          }
        ]
      },
      {
        "name": "RepositoryCollaboratorConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RepositoryCollaboratorEdge",
        "kind": "OBJECT",
        "description": "Represents a user who is a collaborator of a repository.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "permission",
            "type": {
              "name": null
            },
            "description": "The permission the user has on the repository."
          },
          {
            "name": "permissionSources",
            "type": {
              "name": null
            },
            "description": "A list of sources for the user's access to the repository."
          }
        ]
      },
      {
        "name": "RepositoryConnection",
        "kind": "OBJECT",
        "description": "A list of repositories owned by the subject.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          },
          {
            "name": "totalDiskUsage",
            "type": {
              "name": null
            },
            "description": "The total size in kilobytes of all repositories in the connection. Value will never be larger than max 32-bit signed integer."
          }
        ]
      },
      {
        "name": "RepositoryContactLink",
        "kind": "OBJECT",
        "description": "A repository contact link.",
        "fields": [
          {
            "name": "about",
            "type": {
              "name": null
            },
            "description": "The contact link purpose."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The contact link name."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The contact link URL."
          }
        ]
      },
      {
        "name": "RepositoryContributionType",
        "kind": "ENUM",
        "description": "The reason a repository is listed as 'contributed'.",
        "fields": null
      },
      {
        "name": "RepositoryDiscussionAuthor",
        "kind": "INTERFACE",
        "description": "Represents an author of discussions in repositories.",
        "fields": [
          {
            "name": "repositoryDiscussions",
            "type": {
              "name": null
            },
            "description": "Discussions this user has started."
          }
        ]
      },
      {
        "name": "RepositoryDiscussionCommentAuthor",
        "kind": "INTERFACE",
        "description": "Represents an author of discussion comments in repositories.",
        "fields": [
          {
            "name": "repositoryDiscussionComments",
            "type": {
              "name": null
            },
            "description": "Discussion comments this user has authored."
          }
        ]
      },
      {
        "name": "RepositoryEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Repository"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RepositoryIdConditionTarget",
        "kind": "OBJECT",
        "description": "Parameters to be used for the repository_id condition",
        "fields": [
          {
            "name": "repositoryIds",
            "type": {
              "name": null
            },
            "description": "One of these repo IDs must match the repo."
          }
        ]
      },
      {
        "name": "RepositoryIdConditionTargetInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the repository_id condition",
        "fields": null
      },
      {
        "name": "RepositoryInfo",
        "kind": "INTERFACE",
        "description": "A subset of repository info.",
        "fields": [
          {
            "name": "archivedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the repository was archived."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The description of the repository."
          },
          {
            "name": "descriptionHTML",
            "type": {
              "name": null
            },
            "description": "The description of the repository rendered to HTML."
          },
          {
            "name": "forkCount",
            "type": {
              "name": null
            },
            "description": "Returns how many forks there are of this repository in the whole network."
          },
          {
            "name": "hasDiscussionsEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has the Discussions feature enabled."
          },
          {
            "name": "hasIssuesEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has issues feature enabled."
          },
          {
            "name": "hasProjectsEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has the Projects feature enabled."
          },
          {
            "name": "hasSponsorshipsEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository displays a Sponsor button for financial contributions."
          },
          {
            "name": "hasWikiEnabled",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has wiki feature enabled."
          },
          {
            "name": "homepageUrl",
            "type": {
              "name": "URI"
            },
            "description": "The repository's URL."
          },
          {
            "name": "isArchived",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository is unmaintained."
          },
          {
            "name": "isFork",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is a fork."
          },
          {
            "name": "isInOrganization",
            "type": {
              "name": null
            },
            "description": "Indicates if a repository is either owned by an organization, or is a private fork of an organization repository."
          },
          {
            "name": "isLocked",
            "type": {
              "name": null
            },
            "description": "Indicates if the repository has been locked or not."
          },
          {
            "name": "isMirror",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is a mirror."
          },
          {
            "name": "isPrivate",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is private or internal."
          },
          {
            "name": "isTemplate",
            "type": {
              "name": null
            },
            "description": "Identifies if the repository is a template that can be used to generate new repositories."
          },
          {
            "name": "licenseInfo",
            "type": {
              "name": "License"
            },
            "description": "The license associated with the repository"
          },
          {
            "name": "lockReason",
            "type": {
              "name": "RepositoryLockReason"
            },
            "description": "The reason the repository has been locked."
          },
          {
            "name": "mirrorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The repository's original mirror URL."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the repository."
          },
          {
            "name": "nameWithOwner",
            "type": {
              "name": null
            },
            "description": "The repository's name with owner."
          },
          {
            "name": "openGraphImageUrl",
            "type": {
              "name": null
            },
            "description": "The image used to represent this repository in Open Graph data."
          },
          {
            "name": "owner",
            "type": {
              "name": null
            },
            "description": "The User owner of the repository."
          },
          {
            "name": "pushedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the repository was last pushed to."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this repository"
          },
          {
            "name": "shortDescriptionHTML",
            "type": {
              "name": null
            },
            "description": "A description of the repository, rendered to HTML without any links in it."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this repository"
          },
          {
            "name": "usesCustomOpenGraphImage",
            "type": {
              "name": null
            },
            "description": "Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar."
          },
          {
            "name": "visibility",
            "type": {
              "name": null
            },
            "description": "Indicates the repository's visibility level."
          }
        ]
      },
      {
        "name": "RepositoryInteractionAbility",
        "kind": "OBJECT",
        "description": "Repository interaction limit that applies to this object.",
        "fields": [
          {
            "name": "expiresAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The time the currently active limit expires."
          },
          {
            "name": "limit",
            "type": {
              "name": null
            },
            "description": "The current limit that is enabled on this object."
          },
          {
            "name": "origin",
            "type": {
              "name": null
            },
            "description": "The origin of the currently active interaction limit."
          }
        ]
      },
      {
        "name": "RepositoryInteractionLimit",
        "kind": "ENUM",
        "description": "A repository interaction limit.",
        "fields": null
      },
      {
        "name": "RepositoryInteractionLimitExpiry",
        "kind": "ENUM",
        "description": "The length for a repository interaction limit to be enabled for.",
        "fields": null
      },
      {
        "name": "RepositoryInteractionLimitOrigin",
        "kind": "ENUM",
        "description": "Indicates where an interaction limit is configured.",
        "fields": null
      },
      {
        "name": "RepositoryInvitation",
        "kind": "OBJECT",
        "description": "An invitation for a user to be added to a repository.",
        "fields": [
          {
            "name": "email",
            "type": {
              "name": "String"
            },
            "description": "The email address that received the invitation."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryInvitation object"
          },
          {
            "name": "invitee",
            "type": {
              "name": "User"
            },
            "description": "The user who received the invitation."
          },
          {
            "name": "inviter",
            "type": {
              "name": null
            },
            "description": "The user who created the invitation."
          },
          {
            "name": "permalink",
            "type": {
              "name": null
            },
            "description": "The permalink for this repository invitation."
          },
          {
            "name": "permission",
            "type": {
              "name": null
            },
            "description": "The permission granted on this repository by this invitation."
          },
          {
            "name": "repository",
            "type": {
              "name": "RepositoryInfo"
            },
            "description": "The Repository the user is invited to."
          }
        ]
      },
      {
        "name": "RepositoryInvitationConnection",
        "kind": "OBJECT",
        "description": "A list of repository invitations.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RepositoryInvitationEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "RepositoryInvitation"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RepositoryInvitationOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for repository invitation connections.",
        "fields": null
      },
      {
        "name": "RepositoryInvitationOrderField",
        "kind": "ENUM",
        "description": "Properties by which repository invitation connections can be ordered.",
        "fields": null
      },
      {
        "name": "RepositoryLockReason",
        "kind": "ENUM",
        "description": "The possible reasons a given repository could be in a locked state.",
        "fields": null
      },
      {
        "name": "RepositoryMigration",
        "kind": "OBJECT",
        "description": "A GitHub Enterprise Importer (GEI) repository migration.",
        "fields": [
          {
            "name": "continueOnError",
            "type": {
              "name": null
            },
            "description": "The migration flag to continue on error."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "String"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "failureReason",
            "type": {
              "name": "String"
            },
            "description": "The reason the migration failed."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryMigration object"
          },
          {
            "name": "migrationLogUrl",
            "type": {
              "name": "URI"
            },
            "description": "The URL for the migration log (expires 1 day after migration completes)."
          },
          {
            "name": "migrationSource",
            "type": {
              "name": null
            },
            "description": "The migration source."
          },
          {
            "name": "repositoryName",
            "type": {
              "name": null
            },
            "description": "The target repository name."
          },
          {
            "name": "sourceUrl",
            "type": {
              "name": null
            },
            "description": "The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The migration state."
          },
          {
            "name": "warningsCount",
            "type": {
              "name": null
            },
            "description": "The number of warnings encountered for this migration. To review the warnings, check the [Migration Log](https://docs.github.com/migrations/using-github-enterprise-importer/completing-your-migration-with-github-enterprise-importer/accessing-your-migration-logs-for-github-enterprise-importer)."
          }
        ]
      },
      {
        "name": "RepositoryMigrationConnection",
        "kind": "OBJECT",
        "description": "A list of migrations.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RepositoryMigrationEdge",
        "kind": "OBJECT",
        "description": "Represents a repository migration.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "RepositoryMigration"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RepositoryMigrationOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for repository migrations.",
        "fields": null
      },
      {
        "name": "RepositoryMigrationOrderDirection",
        "kind": "ENUM",
        "description": "Possible directions in which to order a list of repository migrations when provided an `orderBy` argument.",
        "fields": null
      },
      {
        "name": "RepositoryMigrationOrderField",
        "kind": "ENUM",
        "description": "Properties by which repository migrations can be ordered.",
        "fields": null
      },
      {
        "name": "RepositoryNameConditionTarget",
        "kind": "OBJECT",
        "description": "Parameters to be used for the repository_name condition",
        "fields": [
          {
            "name": "exclude",
            "type": {
              "name": null
            },
            "description": "Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match."
          },
          {
            "name": "include",
            "type": {
              "name": null
            },
            "description": "Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories."
          },
          {
            "name": "protected",
            "type": {
              "name": null
            },
            "description": "Target changes that match these patterns will be prevented except by those with bypass permissions."
          }
        ]
      },
      {
        "name": "RepositoryNameConditionTargetInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the repository_name condition",
        "fields": null
      },
      {
        "name": "RepositoryNode",
        "kind": "INTERFACE",
        "description": "Represents a object that belongs to a repository.",
        "fields": [
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The repository associated with this node."
          }
        ]
      },
      {
        "name": "RepositoryOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for repository connections",
        "fields": null
      },
      {
        "name": "RepositoryOrderField",
        "kind": "ENUM",
        "description": "Properties by which repository connections can be ordered.",
        "fields": null
      },
      {
        "name": "RepositoryOwner",
        "kind": "INTERFACE",
        "description": "Represents an owner of a Repository.",
        "fields": [
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the owner's public avatar."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryOwner object"
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "The username used to login."
          },
          {
            "name": "repositories",
            "type": {
              "name": null
            },
            "description": "A list of repositories that the user owns."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "Find Repository."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for the owner."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for the owner."
          }
        ]
      },
      {
        "name": "RepositoryPermission",
        "kind": "ENUM",
        "description": "The access level to a repository",
        "fields": null
      },
      {
        "name": "RepositoryPlanFeatures",
        "kind": "OBJECT",
        "description": "Information about the availability of features and limits for a repository based on its billing plan.",
        "fields": [
          {
            "name": "codeowners",
            "type": {
              "name": null
            },
            "description": "Whether reviews can be automatically requested and enforced with a CODEOWNERS file"
          },
          {
            "name": "draftPullRequests",
            "type": {
              "name": null
            },
            "description": "Whether pull requests can be created as or converted to draft"
          },
          {
            "name": "maximumAssignees",
            "type": {
              "name": null
            },
            "description": "Maximum number of users that can be assigned to an issue or pull request"
          },
          {
            "name": "maximumManualReviewRequests",
            "type": {
              "name": null
            },
            "description": "Maximum number of manually-requested reviews on a pull request"
          },
          {
            "name": "teamReviewRequests",
            "type": {
              "name": null
            },
            "description": "Whether teams can be requested to review pull requests"
          }
        ]
      },
      {
        "name": "RepositoryPrivacy",
        "kind": "ENUM",
        "description": "The privacy of a repository",
        "fields": null
      },
      {
        "name": "RepositoryPropertyConditionTarget",
        "kind": "OBJECT",
        "description": "Parameters to be used for the repository_property condition",
        "fields": [
          {
            "name": "exclude",
            "type": {
              "name": null
            },
            "description": "Array of repository properties that must not match."
          },
          {
            "name": "include",
            "type": {
              "name": null
            },
            "description": "Array of repository properties that must match"
          }
        ]
      },
      {
        "name": "RepositoryPropertyConditionTargetInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the repository_property condition",
        "fields": null
      },
      {
        "name": "RepositoryRule",
        "kind": "OBJECT",
        "description": "A repository rule.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryRule object"
          },
          {
            "name": "parameters",
            "type": {
              "name": "RuleParameters"
            },
            "description": "The parameters for this rule."
          },
          {
            "name": "repositoryRuleset",
            "type": {
              "name": "RepositoryRuleset"
            },
            "description": "The repository ruleset associated with this rule configuration"
          },
          {
            "name": "type",
            "type": {
              "name": null
            },
            "description": "The type of rule."
          }
        ]
      },
      {
        "name": "RepositoryRuleConditions",
        "kind": "OBJECT",
        "description": "Set of conditions that determine if a ruleset will evaluate",
        "fields": [
          {
            "name": "refName",
            "type": {
              "name": "RefNameConditionTarget"
            },
            "description": "Configuration for the ref_name condition"
          },
          {
            "name": "repositoryId",
            "type": {
              "name": "RepositoryIdConditionTarget"
            },
            "description": "Configuration for the repository_id condition"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "RepositoryNameConditionTarget"
            },
            "description": "Configuration for the repository_name condition"
          },
          {
            "name": "repositoryProperty",
            "type": {
              "name": "RepositoryPropertyConditionTarget"
            },
            "description": "Configuration for the repository_property condition"
          }
        ]
      },
      {
        "name": "RepositoryRuleConditionsInput",
        "kind": "INPUT_OBJECT",
        "description": "Specifies the conditions required for a ruleset to evaluate",
        "fields": null
      },
      {
        "name": "RepositoryRuleConnection",
        "kind": "OBJECT",
        "description": "The connection type for RepositoryRule.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RepositoryRuleEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "RepositoryRule"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RepositoryRuleInput",
        "kind": "INPUT_OBJECT",
        "description": "Specifies the attributes for a new or updated rule.",
        "fields": null
      },
      {
        "name": "RepositoryRuleOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for repository rules.",
        "fields": null
      },
      {
        "name": "RepositoryRuleOrderField",
        "kind": "ENUM",
        "description": "Properties by which repository rule connections can be ordered.",
        "fields": null
      },
      {
        "name": "RepositoryRuleType",
        "kind": "ENUM",
        "description": "The rule types supported in rulesets",
        "fields": null
      },
      {
        "name": "RepositoryRuleset",
        "kind": "OBJECT",
        "description": "A repository ruleset.",
        "fields": [
          {
            "name": "bypassActors",
            "type": {
              "name": "RepositoryRulesetBypassActorConnection"
            },
            "description": "The actors that can bypass this ruleset"
          },
          {
            "name": "conditions",
            "type": {
              "name": null
            },
            "description": "The set of conditions that must evaluate to true for this ruleset to apply"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "enforcement",
            "type": {
              "name": null
            },
            "description": "The enforcement level of this ruleset"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryRuleset object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "Name of the ruleset."
          },
          {
            "name": "rules",
            "type": {
              "name": "RepositoryRuleConnection"
            },
            "description": "List of rules."
          },
          {
            "name": "source",
            "type": {
              "name": null
            },
            "description": "Source of ruleset."
          },
          {
            "name": "target",
            "type": {
              "name": "RepositoryRulesetTarget"
            },
            "description": "Target of the ruleset."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "RepositoryRulesetBypassActor",
        "kind": "OBJECT",
        "description": "A team or app that has the ability to bypass a rules defined on a ruleset",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "BypassActor"
            },
            "description": "The actor that can bypass rules."
          },
          {
            "name": "bypassMode",
            "type": {
              "name": "RepositoryRulesetBypassActorBypassMode"
            },
            "description": "The mode for the bypass actor"
          },
          {
            "name": "deployKey",
            "type": {
              "name": null
            },
            "description": "This actor represents the ability for a deploy key to bypass"
          },
          {
            "name": "enterpriseOwner",
            "type": {
              "name": null
            },
            "description": "This actor represents the ability for an enterprise owner to bypass"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryRulesetBypassActor object"
          },
          {
            "name": "organizationAdmin",
            "type": {
              "name": null
            },
            "description": "This actor represents the ability for an organization owner to bypass"
          },
          {
            "name": "repositoryRoleDatabaseId",
            "type": {
              "name": "Int"
            },
            "description": "If the actor is a repository role, the repository role's ID that can bypass"
          },
          {
            "name": "repositoryRoleName",
            "type": {
              "name": "String"
            },
            "description": "If the actor is a repository role, the repository role's name that can bypass"
          },
          {
            "name": "repositoryRuleset",
            "type": {
              "name": "RepositoryRuleset"
            },
            "description": "Identifies the ruleset associated with the allowed actor"
          }
        ]
      },
      {
        "name": "RepositoryRulesetBypassActorBypassMode",
        "kind": "ENUM",
        "description": "The bypass mode for a specific actor on a ruleset.",
        "fields": null
      },
      {
        "name": "RepositoryRulesetBypassActorConnection",
        "kind": "OBJECT",
        "description": "The connection type for RepositoryRulesetBypassActor.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RepositoryRulesetBypassActorEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "RepositoryRulesetBypassActor"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RepositoryRulesetBypassActorInput",
        "kind": "INPUT_OBJECT",
        "description": "Specifies the attributes for a new or updated ruleset bypass actor. Only one of `actor_id`, `repository_role_database_id`, `organization_admin`, or `deploy_key` should be specified.",
        "fields": null
      },
      {
        "name": "RepositoryRulesetConnection",
        "kind": "OBJECT",
        "description": "The connection type for RepositoryRuleset.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RepositoryRulesetEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "RepositoryRuleset"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RepositoryRulesetTarget",
        "kind": "ENUM",
        "description": "The targets supported for rulesets.",
        "fields": null
      },
      {
        "name": "RepositoryTopic",
        "kind": "OBJECT",
        "description": "A repository-topic connects a repository to a topic.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryTopic object"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this repository-topic."
          },
          {
            "name": "topic",
            "type": {
              "name": null
            },
            "description": "The topic."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this repository-topic."
          }
        ]
      },
      {
        "name": "RepositoryTopicConnection",
        "kind": "OBJECT",
        "description": "The connection type for RepositoryTopic.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RepositoryTopicEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "RepositoryTopic"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RepositoryVisibility",
        "kind": "ENUM",
        "description": "The repository's visibility level.",
        "fields": null
      },
      {
        "name": "RepositoryVisibilityChangeDisableAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repository_visibility_change.disable event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryVisibilityChangeDisableAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepositoryVisibilityChangeEnableAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a repository_visibility_change.enable event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "enterpriseResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this enterprise."
          },
          {
            "name": "enterpriseSlug",
            "type": {
              "name": "String"
            },
            "description": "The slug of the enterprise."
          },
          {
            "name": "enterpriseUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this enterprise."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryVisibilityChangeEnableAuditEntry object"
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "RepositoryVulnerabilityAlert",
        "kind": "OBJECT",
        "description": "A Dependabot alert for a repository with a dependency affected by a security vulnerability.",
        "fields": [
          {
            "name": "autoDismissedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "When was the alert auto-dismissed?"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "When was the alert created?"
          },
          {
            "name": "dependabotUpdate",
            "type": {
              "name": "DependabotUpdate"
            },
            "description": "The associated Dependabot update"
          },
          {
            "name": "dependencyScope",
            "type": {
              "name": "RepositoryVulnerabilityAlertDependencyScope"
            },
            "description": "The scope of an alert's dependency"
          },
          {
            "name": "dismissComment",
            "type": {
              "name": "String"
            },
            "description": "Comment explaining the reason the alert was dismissed"
          },
          {
            "name": "dismissReason",
            "type": {
              "name": "String"
            },
            "description": "The reason the alert was dismissed"
          },
          {
            "name": "dismissedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "When was the alert dismissed?"
          },
          {
            "name": "dismisser",
            "type": {
              "name": "User"
            },
            "description": "The user who dismissed the alert"
          },
          {
            "name": "fixedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "When was the alert fixed?"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the RepositoryVulnerabilityAlert object"
          },
          {
            "name": "number",
            "type": {
              "name": null
            },
            "description": "Identifies the alert number."
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The associated repository"
          },
          {
            "name": "securityAdvisory",
            "type": {
              "name": "SecurityAdvisory"
            },
            "description": "The associated security advisory"
          },
          {
            "name": "securityVulnerability",
            "type": {
              "name": "SecurityVulnerability"
            },
            "description": "The associated security vulnerability"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "Identifies the state of the alert."
          },
          {
            "name": "vulnerableManifestFilename",
            "type": {
              "name": null
            },
            "description": "The vulnerable manifest filename"
          },
          {
            "name": "vulnerableManifestPath",
            "type": {
              "name": null
            },
            "description": "The vulnerable manifest path"
          },
          {
            "name": "vulnerableRequirements",
            "type": {
              "name": "String"
            },
            "description": "The vulnerable requirements"
          }
        ]
      },
      {
        "name": "RepositoryVulnerabilityAlertConnection",
        "kind": "OBJECT",
        "description": "The connection type for RepositoryVulnerabilityAlert.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RepositoryVulnerabilityAlertDependencyScope",
        "kind": "ENUM",
        "description": "The possible scopes of an alert's dependency.",
        "fields": null
      },
      {
        "name": "RepositoryVulnerabilityAlertEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "RepositoryVulnerabilityAlert"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RepositoryVulnerabilityAlertState",
        "kind": "ENUM",
        "description": "The possible states of an alert",
        "fields": null
      },
      {
        "name": "ReprioritizeSubIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ReprioritizeSubIssue",
        "fields": null
      },
      {
        "name": "ReprioritizeSubIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ReprioritizeSubIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The parent issue that the sub-issue was reprioritized in."
          }
        ]
      },
      {
        "name": "RequestReviewsInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RequestReviews",
        "fields": null
      },
      {
        "name": "RequestReviewsPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RequestReviews.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request that is getting requests."
          },
          {
            "name": "requestedReviewersEdge",
            "type": {
              "name": "UserEdge"
            },
            "description": "The edge from the pull request to the requested reviewers."
          }
        ]
      },
      {
        "name": "RequestableCheckStatusState",
        "kind": "ENUM",
        "description": "The possible states that can be requested when creating a check run.",
        "fields": null
      },
      {
        "name": "RequestedReviewer",
        "kind": "UNION",
        "description": "Types that can be requested reviewers.",
        "fields": null
      },
      {
        "name": "RequestedReviewerConnection",
        "kind": "OBJECT",
        "description": "The connection type for RequestedReviewer.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "RequestedReviewerEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "RequestedReviewer"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "RequirableByPullRequest",
        "kind": "INTERFACE",
        "description": "Represents a type that can be required by a pull request for merging.",
        "fields": [
          {
            "name": "isRequired",
            "type": {
              "name": null
            },
            "description": "Whether this is required to pass before merging for a specific pull request."
          }
        ]
      },
      {
        "name": "RequiredDeploymentsParameters",
        "kind": "OBJECT",
        "description": "Choose which environments must be successfully deployed to before refs can be pushed into a ref that matches this rule.",
        "fields": [
          {
            "name": "requiredDeploymentEnvironments",
            "type": {
              "name": null
            },
            "description": "The environments that must be successfully deployed to before branches can be merged."
          }
        ]
      },
      {
        "name": "RequiredDeploymentsParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Choose which environments must be successfully deployed to before refs can be pushed into a ref that matches this rule.",
        "fields": null
      },
      {
        "name": "RequiredStatusCheckDescription",
        "kind": "OBJECT",
        "description": "Represents a required status check for a protected branch, but not any specific run of that check.",
        "fields": [
          {
            "name": "app",
            "type": {
              "name": "App"
            },
            "description": "The App that must provide this status in order for it to be accepted."
          },
          {
            "name": "context",
            "type": {
              "name": null
            },
            "description": "The name of this status."
          }
        ]
      },
      {
        "name": "RequiredStatusCheckInput",
        "kind": "INPUT_OBJECT",
        "description": "Specifies the attributes for a new or updated required status check.",
        "fields": null
      },
      {
        "name": "RequiredStatusChecksParameters",
        "kind": "OBJECT",
        "description": "Choose which status checks must pass before the ref is updated. When enabled, commits must first be pushed to another ref where the checks pass.",
        "fields": [
          {
            "name": "doNotEnforceOnCreate",
            "type": {
              "name": null
            },
            "description": "Allow repositories and branches to be created if a check would otherwise prohibit it."
          },
          {
            "name": "requiredStatusChecks",
            "type": {
              "name": null
            },
            "description": "Status checks that are required."
          },
          {
            "name": "strictRequiredStatusChecksPolicy",
            "type": {
              "name": null
            },
            "description": "Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled."
          }
        ]
      },
      {
        "name": "RequiredStatusChecksParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Choose which status checks must pass before the ref is updated. When enabled, commits must first be pushed to another ref where the checks pass.",
        "fields": null
      },
      {
        "name": "RerequestCheckSuiteInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RerequestCheckSuite",
        "fields": null
      },
      {
        "name": "RerequestCheckSuitePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RerequestCheckSuite.",
        "fields": [
          {
            "name": "checkSuite",
            "type": {
              "name": "CheckSuite"
            },
            "description": "The requested check suite."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "ResolveReviewThreadInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of ResolveReviewThread",
        "fields": null
      },
      {
        "name": "ResolveReviewThreadPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of ResolveReviewThread.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "thread",
            "type": {
              "name": "PullRequestReviewThread"
            },
            "description": "The thread to resolve."
          }
        ]
      },
      {
        "name": "RestrictedContribution",
        "kind": "OBJECT",
        "description": "Represents a private contribution a user made on GitHub.",
        "fields": [
          {
            "name": "isRestricted",
            "type": {
              "name": null
            },
            "description": "Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.\n"
          },
          {
            "name": "occurredAt",
            "type": {
              "name": null
            },
            "description": "When this contribution was made."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this contribution."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this contribution."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who made this contribution.\n"
          }
        ]
      },
      {
        "name": "RetireSponsorsTierInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RetireSponsorsTier",
        "fields": null
      },
      {
        "name": "RetireSponsorsTierPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RetireSponsorsTier.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorsTier",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "The tier that was retired."
          }
        ]
      },
      {
        "name": "RevertPullRequestInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RevertPullRequest",
        "fields": null
      },
      {
        "name": "RevertPullRequestPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RevertPullRequest.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The pull request that was reverted."
          },
          {
            "name": "revertPullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The new pull request that reverts the input pull request."
          }
        ]
      },
      {
        "name": "ReviewDismissalAllowance",
        "kind": "OBJECT",
        "description": "A user, team, or app who has the ability to dismiss a review on a protected branch.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "ReviewDismissalAllowanceActor"
            },
            "description": "The actor that can dismiss."
          },
          {
            "name": "branchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "Identifies the branch protection rule associated with the allowed user, team, or app."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReviewDismissalAllowance object"
          }
        ]
      },
      {
        "name": "ReviewDismissalAllowanceActor",
        "kind": "UNION",
        "description": "Types that can be an actor.",
        "fields": null
      },
      {
        "name": "ReviewDismissalAllowanceConnection",
        "kind": "OBJECT",
        "description": "The connection type for ReviewDismissalAllowance.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ReviewDismissalAllowanceEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ReviewDismissalAllowance"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ReviewDismissedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'review_dismissed' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "dismissalMessage",
            "type": {
              "name": "String"
            },
            "description": "Identifies the optional message associated with the 'review_dismissed' event."
          },
          {
            "name": "dismissalMessageHTML",
            "type": {
              "name": "String"
            },
            "description": "Identifies the optional message associated with the event, rendered to HTML."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReviewDismissedEvent object"
          },
          {
            "name": "previousReviewState",
            "type": {
              "name": null
            },
            "description": "Identifies the previous state of the review with the 'review_dismissed' event."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "pullRequestCommit",
            "type": {
              "name": "PullRequestCommit"
            },
            "description": "Identifies the commit which caused the review to become stale."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this review dismissed event."
          },
          {
            "name": "review",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "Identifies the review associated with the 'review_dismissed' event."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this review dismissed event."
          }
        ]
      },
      {
        "name": "ReviewRequest",
        "kind": "OBJECT",
        "description": "A request for a user to review a pull request.",
        "fields": [
          {
            "name": "asCodeOwner",
            "type": {
              "name": null
            },
            "description": "Whether this request was created for a code owner"
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReviewRequest object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "Identifies the pull request associated with this review request."
          },
          {
            "name": "requestedReviewer",
            "type": {
              "name": "RequestedReviewer"
            },
            "description": "The reviewer that is requested."
          }
        ]
      },
      {
        "name": "ReviewRequestConnection",
        "kind": "OBJECT",
        "description": "The connection type for ReviewRequest.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "ReviewRequestEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "ReviewRequest"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "ReviewRequestRemovedEvent",
        "kind": "OBJECT",
        "description": "Represents an 'review_request_removed' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReviewRequestRemovedEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "requestedReviewer",
            "type": {
              "name": "RequestedReviewer"
            },
            "description": "Identifies the reviewer whose review request was removed."
          }
        ]
      },
      {
        "name": "ReviewRequestedEvent",
        "kind": "OBJECT",
        "description": "Represents an 'review_requested' event on a given pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the ReviewRequestedEvent object"
          },
          {
            "name": "pullRequest",
            "type": {
              "name": null
            },
            "description": "PullRequest referenced by event."
          },
          {
            "name": "requestedReviewer",
            "type": {
              "name": "RequestedReviewer"
            },
            "description": "Identifies the reviewer whose review was requested."
          }
        ]
      },
      {
        "name": "ReviewStatusHovercardContext",
        "kind": "OBJECT",
        "description": "A hovercard context with a message describing the current code review state of the pull\nrequest.\n",
        "fields": [
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "A string describing this context"
          },
          {
            "name": "octicon",
            "type": {
              "name": null
            },
            "description": "An octicon to accompany this context"
          },
          {
            "name": "reviewDecision",
            "type": {
              "name": "PullRequestReviewDecision"
            },
            "description": "The current status of the pull request with respect to code review."
          }
        ]
      },
      {
        "name": "RevokeEnterpriseOrganizationsMigratorRoleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RevokeEnterpriseOrganizationsMigratorRole",
        "fields": null
      },
      {
        "name": "RevokeEnterpriseOrganizationsMigratorRolePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "organizations",
            "type": {
              "name": "OrganizationConnection"
            },
            "description": "The organizations that had the migrator role revoked for the given user."
          }
        ]
      },
      {
        "name": "RevokeMigratorRoleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of RevokeMigratorRole",
        "fields": null
      },
      {
        "name": "RevokeMigratorRolePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of RevokeMigratorRole.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "success",
            "type": {
              "name": "Boolean"
            },
            "description": "Did the operation succeed?"
          }
        ]
      },
      {
        "name": "RoleInOrganization",
        "kind": "ENUM",
        "description": "Possible roles a user may have in relation to an organization.",
        "fields": null
      },
      {
        "name": "RuleEnforcement",
        "kind": "ENUM",
        "description": "The level of enforcement for a rule or ruleset.",
        "fields": null
      },
      {
        "name": "RuleParameters",
        "kind": "UNION",
        "description": "Types which can be parameters for `RepositoryRule` objects.",
        "fields": null
      },
      {
        "name": "RuleParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Specifies the parameters for a `RepositoryRule` object. Only one of the fields should be specified.",
        "fields": null
      },
      {
        "name": "RuleSource",
        "kind": "UNION",
        "description": "Types which can have `RepositoryRule` objects.",
        "fields": null
      },
      {
        "name": "SamlDigestAlgorithm",
        "kind": "ENUM",
        "description": "The possible digest algorithms used to sign SAML requests for an identity provider.",
        "fields": null
      },
      {
        "name": "SamlSignatureAlgorithm",
        "kind": "ENUM",
        "description": "The possible signature algorithms used to sign SAML requests for a Identity Provider.",
        "fields": null
      },
      {
        "name": "SavedReply",
        "kind": "OBJECT",
        "description": "A Saved Reply is text a user can use to reply quickly.",
        "fields": [
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body of the saved reply."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The saved reply body rendered to HTML."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SavedReply object"
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "The title of the saved reply."
          },
          {
            "name": "user",
            "type": {
              "name": "Actor"
            },
            "description": "The user that saved this reply."
          }
        ]
      },
      {
        "name": "SavedReplyConnection",
        "kind": "OBJECT",
        "description": "The connection type for SavedReply.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SavedReplyEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SavedReply"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SavedReplyOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for saved reply connections.",
        "fields": null
      },
      {
        "name": "SavedReplyOrderField",
        "kind": "ENUM",
        "description": "Properties by which saved reply connections can be ordered.",
        "fields": null
      },
      {
        "name": "SearchResultItem",
        "kind": "UNION",
        "description": "The results of a search.",
        "fields": null
      },
      {
        "name": "SearchResultItemConnection",
        "kind": "OBJECT",
        "description": "A list of results that matched against a search query. Regardless of the number of matches, a maximum of 1,000 results will be available across all types, potentially split across many pages.",
        "fields": [
          {
            "name": "codeCount",
            "type": {
              "name": null
            },
            "description": "The total number of pieces of code that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types."
          },
          {
            "name": "discussionCount",
            "type": {
              "name": null
            },
            "description": "The total number of discussions that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types."
          },
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "issueCount",
            "type": {
              "name": null
            },
            "description": "The total number of issues that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "repositoryCount",
            "type": {
              "name": null
            },
            "description": "The total number of repositories that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types."
          },
          {
            "name": "userCount",
            "type": {
              "name": null
            },
            "description": "The total number of users that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types."
          },
          {
            "name": "wikiCount",
            "type": {
              "name": null
            },
            "description": "The total number of wiki pages that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types."
          }
        ]
      },
      {
        "name": "SearchResultItemEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SearchResultItem"
            },
            "description": "The item at the end of the edge."
          },
          {
            "name": "textMatches",
            "type": {
              "name": null
            },
            "description": "Text matches on the result found."
          }
        ]
      },
      {
        "name": "SearchType",
        "kind": "ENUM",
        "description": "Represents the individual results of a search.",
        "fields": null
      },
      {
        "name": "SecurityAdvisory",
        "kind": "OBJECT",
        "description": "A GitHub Security Advisory",
        "fields": [
          {
            "name": "classification",
            "type": {
              "name": null
            },
            "description": "The classification of the advisory"
          },
          {
            "name": "cwes",
            "type": {
              "name": null
            },
            "description": "CWEs associated with this Advisory"
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "description",
            "type": {
              "name": null
            },
            "description": "This is a long plaintext description of the advisory"
          },
          {
            "name": "epss",
            "type": {
              "name": "EPSS"
            },
            "description": "The Exploit Prediction Scoring System"
          },
          {
            "name": "ghsaId",
            "type": {
              "name": null
            },
            "description": "The GitHub Security Advisory ID"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SecurityAdvisory object"
          },
          {
            "name": "identifiers",
            "type": {
              "name": null
            },
            "description": "A list of identifiers for this advisory"
          },
          {
            "name": "notificationsPermalink",
            "type": {
              "name": "URI"
            },
            "description": "The permalink for the advisory's dependabot alerts page"
          },
          {
            "name": "origin",
            "type": {
              "name": null
            },
            "description": "The organization that originated the advisory"
          },
          {
            "name": "permalink",
            "type": {
              "name": "URI"
            },
            "description": "The permalink for the advisory"
          },
          {
            "name": "publishedAt",
            "type": {
              "name": null
            },
            "description": "When the advisory was published"
          },
          {
            "name": "references",
            "type": {
              "name": null
            },
            "description": "A list of references for this advisory"
          },
          {
            "name": "severity",
            "type": {
              "name": null
            },
            "description": "The severity of the advisory"
          },
          {
            "name": "summary",
            "type": {
              "name": null
            },
            "description": "A short plaintext summary of the advisory"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "When the advisory was last updated"
          },
          {
            "name": "vulnerabilities",
            "type": {
              "name": null
            },
            "description": "Vulnerabilities associated with this Advisory"
          },
          {
            "name": "withdrawnAt",
            "type": {
              "name": "DateTime"
            },
            "description": "When the advisory was withdrawn, if it has been withdrawn"
          }
        ]
      },
      {
        "name": "SecurityAdvisoryClassification",
        "kind": "ENUM",
        "description": "Classification of the advisory.",
        "fields": null
      },
      {
        "name": "SecurityAdvisoryConnection",
        "kind": "OBJECT",
        "description": "The connection type for SecurityAdvisory.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SecurityAdvisoryEcosystem",
        "kind": "ENUM",
        "description": "The possible ecosystems of a security vulnerability's package.",
        "fields": null
      },
      {
        "name": "SecurityAdvisoryEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SecurityAdvisory"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SecurityAdvisoryIdentifier",
        "kind": "OBJECT",
        "description": "A GitHub Security Advisory Identifier",
        "fields": [
          {
            "name": "type",
            "type": {
              "name": null
            },
            "description": "The identifier type, e.g. GHSA, CVE"
          },
          {
            "name": "value",
            "type": {
              "name": null
            },
            "description": "The identifier"
          }
        ]
      },
      {
        "name": "SecurityAdvisoryIdentifierFilter",
        "kind": "INPUT_OBJECT",
        "description": "An advisory identifier to filter results on.",
        "fields": null
      },
      {
        "name": "SecurityAdvisoryIdentifierType",
        "kind": "ENUM",
        "description": "Identifier formats available for advisories.",
        "fields": null
      },
      {
        "name": "SecurityAdvisoryOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for security advisory connections",
        "fields": null
      },
      {
        "name": "SecurityAdvisoryOrderField",
        "kind": "ENUM",
        "description": "Properties by which security advisory connections can be ordered.",
        "fields": null
      },
      {
        "name": "SecurityAdvisoryPackage",
        "kind": "OBJECT",
        "description": "An individual package",
        "fields": [
          {
            "name": "ecosystem",
            "type": {
              "name": null
            },
            "description": "The ecosystem the package belongs to, e.g. RUBYGEMS, NPM"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The package name"
          }
        ]
      },
      {
        "name": "SecurityAdvisoryPackageVersion",
        "kind": "OBJECT",
        "description": "An individual package version",
        "fields": [
          {
            "name": "identifier",
            "type": {
              "name": null
            },
            "description": "The package name or version"
          }
        ]
      },
      {
        "name": "SecurityAdvisoryReference",
        "kind": "OBJECT",
        "description": "A GitHub Security Advisory Reference",
        "fields": [
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "A publicly accessible reference"
          }
        ]
      },
      {
        "name": "SecurityAdvisorySeverity",
        "kind": "ENUM",
        "description": "Severity of the vulnerability.",
        "fields": null
      },
      {
        "name": "SecurityVulnerability",
        "kind": "OBJECT",
        "description": "An individual vulnerability within an Advisory",
        "fields": [
          {
            "name": "advisory",
            "type": {
              "name": null
            },
            "description": "The Advisory associated with this Vulnerability"
          },
          {
            "name": "firstPatchedVersion",
            "type": {
              "name": "SecurityAdvisoryPackageVersion"
            },
            "description": "The first version containing a fix for the vulnerability"
          },
          {
            "name": "package",
            "type": {
              "name": null
            },
            "description": "A description of the vulnerable package"
          },
          {
            "name": "severity",
            "type": {
              "name": null
            },
            "description": "The severity of the vulnerability within this package"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "When the vulnerability was last updated"
          },
          {
            "name": "vulnerableVersionRange",
            "type": {
              "name": null
            },
            "description": "A string that describes the vulnerable package versions.\nThis string follows a basic syntax with a few forms.\n+ `= 0.2.0` denotes a single vulnerable version.\n+ `<= 1.0.8` denotes a version range up to and including the specified version\n+ `< 0.1.11` denotes a version range up to, but excluding, the specified version\n+ `>= 4.3.0, < 4.3.5` denotes a version range with a known minimum and maximum version.\n+ `>= 0.0.1` denotes a version range with a known minimum, but no known maximum\n"
          }
        ]
      },
      {
        "name": "SecurityVulnerabilityConnection",
        "kind": "OBJECT",
        "description": "The connection type for SecurityVulnerability.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SecurityVulnerabilityEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SecurityVulnerability"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SecurityVulnerabilityOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for security vulnerability connections",
        "fields": null
      },
      {
        "name": "SecurityVulnerabilityOrderField",
        "kind": "ENUM",
        "description": "Properties by which security vulnerability connections can be ordered.",
        "fields": null
      },
      {
        "name": "SetEnterpriseIdentityProviderInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of SetEnterpriseIdentityProvider",
        "fields": null
      },
      {
        "name": "SetEnterpriseIdentityProviderPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of SetEnterpriseIdentityProvider.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "identityProvider",
            "type": {
              "name": "EnterpriseIdentityProvider"
            },
            "description": "The identity provider for the enterprise."
          }
        ]
      },
      {
        "name": "SetOrganizationInteractionLimitInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of SetOrganizationInteractionLimit",
        "fields": null
      },
      {
        "name": "SetOrganizationInteractionLimitPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of SetOrganizationInteractionLimit.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization that the interaction limit was set for."
          }
        ]
      },
      {
        "name": "SetRepositoryInteractionLimitInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of SetRepositoryInteractionLimit",
        "fields": null
      },
      {
        "name": "SetRepositoryInteractionLimitPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of SetRepositoryInteractionLimit.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository that the interaction limit was set for."
          }
        ]
      },
      {
        "name": "SetUserInteractionLimitInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of SetUserInteractionLimit",
        "fields": null
      },
      {
        "name": "SetUserInteractionLimitPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of SetUserInteractionLimit.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user that the interaction limit was set for."
          }
        ]
      },
      {
        "name": "SmimeSignature",
        "kind": "OBJECT",
        "description": "Represents an S/MIME signature on a Commit or Tag.",
        "fields": [
          {
            "name": "email",
            "type": {
              "name": null
            },
            "description": "Email used to sign this object."
          },
          {
            "name": "isValid",
            "type": {
              "name": null
            },
            "description": "True if the signature is valid and verified by GitHub."
          },
          {
            "name": "payload",
            "type": {
              "name": null
            },
            "description": "Payload for GPG signing object. Raw ODB object without the signature header."
          },
          {
            "name": "signature",
            "type": {
              "name": null
            },
            "description": "ASCII-armored signature header from object."
          },
          {
            "name": "signer",
            "type": {
              "name": "User"
            },
            "description": "GitHub user corresponding to the email signing this commit."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."
          },
          {
            "name": "verifiedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The date the signature was verified, if valid"
          },
          {
            "name": "wasSignedByGitHub",
            "type": {
              "name": null
            },
            "description": "True if the signature was made with GitHub's signing key."
          }
        ]
      },
      {
        "name": "SocialAccount",
        "kind": "OBJECT",
        "description": "Social media profile associated with a user.",
        "fields": [
          {
            "name": "displayName",
            "type": {
              "name": null
            },
            "description": "Name of the social media account as it appears on the profile."
          },
          {
            "name": "provider",
            "type": {
              "name": null
            },
            "description": "Software or company that hosts the social media account."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "URL of the social media account."
          }
        ]
      },
      {
        "name": "SocialAccountConnection",
        "kind": "OBJECT",
        "description": "The connection type for SocialAccount.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SocialAccountEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SocialAccount"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SocialAccountProvider",
        "kind": "ENUM",
        "description": "Software or company that hosts social media accounts.",
        "fields": null
      },
      {
        "name": "Sponsor",
        "kind": "UNION",
        "description": "Entities that can sponsor others via GitHub Sponsors",
        "fields": null
      },
      {
        "name": "SponsorAndLifetimeValue",
        "kind": "OBJECT",
        "description": "A GitHub account and the total amount in USD they've paid for sponsorships to a particular maintainer. Does not include payments made via Patreon.",
        "fields": [
          {
            "name": "amountInCents",
            "type": {
              "name": null
            },
            "description": "The amount in cents."
          },
          {
            "name": "formattedAmount",
            "type": {
              "name": null
            },
            "description": "The amount in USD, formatted as a string."
          },
          {
            "name": "sponsor",
            "type": {
              "name": null
            },
            "description": "The sponsor's GitHub account."
          },
          {
            "name": "sponsorable",
            "type": {
              "name": null
            },
            "description": "The maintainer's GitHub account."
          }
        ]
      },
      {
        "name": "SponsorAndLifetimeValueConnection",
        "kind": "OBJECT",
        "description": "The connection type for SponsorAndLifetimeValue.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SponsorAndLifetimeValueEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SponsorAndLifetimeValue"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SponsorAndLifetimeValueOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for connections to get sponsor entities and associated USD amounts for GitHub Sponsors.",
        "fields": null
      },
      {
        "name": "SponsorAndLifetimeValueOrderField",
        "kind": "ENUM",
        "description": "Properties by which sponsor and lifetime value connections can be ordered.",
        "fields": null
      },
      {
        "name": "SponsorConnection",
        "kind": "OBJECT",
        "description": "A list of users and organizations sponsoring someone via GitHub Sponsors.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SponsorEdge",
        "kind": "OBJECT",
        "description": "Represents a user or organization who is sponsoring someone in GitHub Sponsors.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Sponsor"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SponsorOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for connections to get sponsor entities for GitHub Sponsors.",
        "fields": null
      },
      {
        "name": "SponsorOrderField",
        "kind": "ENUM",
        "description": "Properties by which sponsor connections can be ordered.",
        "fields": null
      },
      {
        "name": "Sponsorable",
        "kind": "INTERFACE",
        "description": "Entities that can sponsor or be sponsored through GitHub Sponsors.",
        "fields": [
          {
            "name": "estimatedNextSponsorsPayoutInCents",
            "type": {
              "name": null
            },
            "description": "The estimated next GitHub Sponsors payout for this user/organization in cents (USD)."
          },
          {
            "name": "hasSponsorsListing",
            "type": {
              "name": null
            },
            "description": "True if this user/organization has a GitHub Sponsors listing."
          },
          {
            "name": "isSponsoredBy",
            "type": {
              "name": null
            },
            "description": "Whether the given account is sponsoring this user/organization."
          },
          {
            "name": "isSponsoringViewer",
            "type": {
              "name": null
            },
            "description": "True if the viewer is sponsored by this user/organization."
          },
          {
            "name": "lifetimeReceivedSponsorshipValues",
            "type": {
              "name": null
            },
            "description": "Calculate how much each sponsor has ever paid total to this maintainer via GitHub Sponsors. Does not include sponsorships paid via Patreon."
          },
          {
            "name": "monthlyEstimatedSponsorsIncomeInCents",
            "type": {
              "name": null
            },
            "description": "The estimated monthly GitHub Sponsors income for this user/organization in cents (USD)."
          },
          {
            "name": "sponsoring",
            "type": {
              "name": null
            },
            "description": "List of users and organizations this entity is sponsoring."
          },
          {
            "name": "sponsors",
            "type": {
              "name": null
            },
            "description": "List of sponsors for this user or organization."
          },
          {
            "name": "sponsorsActivities",
            "type": {
              "name": null
            },
            "description": "Events involving this sponsorable, such as new sponsorships."
          },
          {
            "name": "sponsorsListing",
            "type": {
              "name": "SponsorsListing"
            },
            "description": "The GitHub Sponsors listing for this user or organization."
          },
          {
            "name": "sponsorshipForViewerAsSponsor",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor."
          },
          {
            "name": "sponsorshipForViewerAsSponsorable",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving."
          },
          {
            "name": "sponsorshipNewsletters",
            "type": {
              "name": null
            },
            "description": "List of sponsorship updates sent from this sponsorable to sponsors."
          },
          {
            "name": "sponsorshipsAsMaintainer",
            "type": {
              "name": null
            },
            "description": "The sponsorships where this user or organization is the maintainer receiving the funds."
          },
          {
            "name": "sponsorshipsAsSponsor",
            "type": {
              "name": null
            },
            "description": "The sponsorships where this user or organization is the funder."
          },
          {
            "name": "totalSponsorshipAmountAsSponsorInCents",
            "type": {
              "name": "Int"
            },
            "description": "The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization."
          },
          {
            "name": "viewerCanSponsor",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer is able to sponsor this user/organization."
          },
          {
            "name": "viewerIsSponsoring",
            "type": {
              "name": null
            },
            "description": "True if the viewer is sponsoring this user/organization."
          }
        ]
      },
      {
        "name": "SponsorableItem",
        "kind": "UNION",
        "description": "Entities that can be sponsored via GitHub Sponsors",
        "fields": null
      },
      {
        "name": "SponsorableItemConnection",
        "kind": "OBJECT",
        "description": "The connection type for SponsorableItem.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SponsorableItemEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SponsorableItem"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SponsorableOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for connections to get sponsorable entities for GitHub Sponsors.",
        "fields": null
      },
      {
        "name": "SponsorableOrderField",
        "kind": "ENUM",
        "description": "Properties by which sponsorable connections can be ordered.",
        "fields": null
      },
      {
        "name": "SponsorsActivity",
        "kind": "OBJECT",
        "description": "An event related to sponsorship activity.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "What action this activity indicates took place."
          },
          {
            "name": "currentPrivacyLevel",
            "type": {
              "name": "SponsorshipPrivacy"
            },
            "description": "The sponsor's current privacy level."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SponsorsActivity object"
          },
          {
            "name": "paymentSource",
            "type": {
              "name": "SponsorshipPaymentSource"
            },
            "description": "The platform that was used to pay for the sponsorship."
          },
          {
            "name": "previousSponsorsTier",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "The tier that the sponsorship used to use, for tier change events."
          },
          {
            "name": "sponsor",
            "type": {
              "name": "Sponsor"
            },
            "description": "The user or organization who triggered this activity and was/is sponsoring the sponsorable."
          },
          {
            "name": "sponsorable",
            "type": {
              "name": null
            },
            "description": "The user or organization that is being sponsored, the maintainer."
          },
          {
            "name": "sponsorsTier",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "The associated sponsorship tier."
          },
          {
            "name": "timestamp",
            "type": {
              "name": "DateTime"
            },
            "description": "The timestamp of this event."
          },
          {
            "name": "viaBulkSponsorship",
            "type": {
              "name": null
            },
            "description": "Was this sponsorship made alongside other sponsorships at the same time from the same sponsor?"
          }
        ]
      },
      {
        "name": "SponsorsActivityAction",
        "kind": "ENUM",
        "description": "The possible actions that GitHub Sponsors activities can represent.",
        "fields": null
      },
      {
        "name": "SponsorsActivityConnection",
        "kind": "OBJECT",
        "description": "The connection type for SponsorsActivity.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SponsorsActivityEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SponsorsActivity"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SponsorsActivityOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for GitHub Sponsors activity connections.",
        "fields": null
      },
      {
        "name": "SponsorsActivityOrderField",
        "kind": "ENUM",
        "description": "Properties by which GitHub Sponsors activity connections can be ordered.",
        "fields": null
      },
      {
        "name": "SponsorsActivityPeriod",
        "kind": "ENUM",
        "description": "The possible time periods for which Sponsors activities can be requested.",
        "fields": null
      },
      {
        "name": "SponsorsCountryOrRegionCode",
        "kind": "ENUM",
        "description": "Represents countries or regions for billing and residence for a GitHub Sponsors profile.",
        "fields": null
      },
      {
        "name": "SponsorsGoal",
        "kind": "OBJECT",
        "description": "A goal associated with a GitHub Sponsors listing, representing a target the sponsored maintainer would like to attain.",
        "fields": [
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "A description of the goal from the maintainer."
          },
          {
            "name": "kind",
            "type": {
              "name": null
            },
            "description": "What the objective of this goal is."
          },
          {
            "name": "percentComplete",
            "type": {
              "name": null
            },
            "description": "The percentage representing how complete this goal is, between 0-100."
          },
          {
            "name": "targetValue",
            "type": {
              "name": null
            },
            "description": "What the goal amount is. Represents an amount in USD for monthly sponsorship amount goals. Represents a count of unique sponsors for total sponsors count goals."
          },
          {
            "name": "title",
            "type": {
              "name": null
            },
            "description": "A brief summary of the kind and target value of this goal."
          }
        ]
      },
      {
        "name": "SponsorsGoalKind",
        "kind": "ENUM",
        "description": "The different kinds of goals a GitHub Sponsors member can have.",
        "fields": null
      },
      {
        "name": "SponsorsListing",
        "kind": "OBJECT",
        "description": "A GitHub Sponsors listing.",
        "fields": [
          {
            "name": "activeGoal",
            "type": {
              "name": "SponsorsGoal"
            },
            "description": "The current goal the maintainer is trying to reach with GitHub Sponsors, if any."
          },
          {
            "name": "activeStripeConnectAccount",
            "type": {
              "name": "StripeConnectAccount"
            },
            "description": "The Stripe Connect account currently in use for payouts for this Sponsors listing, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization."
          },
          {
            "name": "billingCountryOrRegion",
            "type": {
              "name": "String"
            },
            "description": "The name of the country or region with the maintainer's bank account or fiscal host. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization."
          },
          {
            "name": "contactEmailAddress",
            "type": {
              "name": "String"
            },
            "description": "The email address used by GitHub to contact the sponsorable about their GitHub Sponsors profile. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "dashboardResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for the Sponsors dashboard for this Sponsors listing."
          },
          {
            "name": "dashboardUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for the Sponsors dashboard for this Sponsors listing."
          },
          {
            "name": "featuredItems",
            "type": {
              "name": null
            },
            "description": "The records featured on the GitHub Sponsors profile."
          },
          {
            "name": "fiscalHost",
            "type": {
              "name": "Organization"
            },
            "description": "The fiscal host used for payments, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization."
          },
          {
            "name": "fullDescription",
            "type": {
              "name": null
            },
            "description": "The full description of the listing."
          },
          {
            "name": "fullDescriptionHTML",
            "type": {
              "name": null
            },
            "description": "The full description of the listing rendered to HTML."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SponsorsListing object"
          },
          {
            "name": "isPublic",
            "type": {
              "name": null
            },
            "description": "Whether this listing is publicly visible."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The listing's full name."
          },
          {
            "name": "nextPayoutDate",
            "type": {
              "name": "Date"
            },
            "description": "A future date on which this listing is eligible to receive a payout."
          },
          {
            "name": "residenceCountryOrRegion",
            "type": {
              "name": "String"
            },
            "description": "The name of the country or region where the maintainer resides. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this Sponsors listing."
          },
          {
            "name": "shortDescription",
            "type": {
              "name": null
            },
            "description": "The short description of the listing."
          },
          {
            "name": "slug",
            "type": {
              "name": null
            },
            "description": "The short name of the listing."
          },
          {
            "name": "sponsorable",
            "type": {
              "name": null
            },
            "description": "The entity this listing represents who can be sponsored on GitHub Sponsors."
          },
          {
            "name": "tiers",
            "type": {
              "name": "SponsorsTierConnection"
            },
            "description": "The tiers for this GitHub Sponsors profile."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this Sponsors listing."
          }
        ]
      },
      {
        "name": "SponsorsListingFeatureableItem",
        "kind": "UNION",
        "description": "A record that can be featured on a GitHub Sponsors profile.",
        "fields": null
      },
      {
        "name": "SponsorsListingFeaturedItem",
        "kind": "OBJECT",
        "description": "A record that is promoted on a GitHub Sponsors profile.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "Will either be a description from the sponsorable maintainer about why they featured this item, or the item's description itself, such as a user's bio from their GitHub profile page."
          },
          {
            "name": "featureable",
            "type": {
              "name": null
            },
            "description": "The record that is featured on the GitHub Sponsors profile."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SponsorsListingFeaturedItem object"
          },
          {
            "name": "position",
            "type": {
              "name": null
            },
            "description": "The position of this featured item on the GitHub Sponsors profile with a lower position indicating higher precedence. Starts at 1."
          },
          {
            "name": "sponsorsListing",
            "type": {
              "name": null
            },
            "description": "The GitHub Sponsors profile that features this record."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "SponsorsListingFeaturedItemFeatureableType",
        "kind": "ENUM",
        "description": "The different kinds of records that can be featured on a GitHub Sponsors profile page.",
        "fields": null
      },
      {
        "name": "SponsorsTier",
        "kind": "OBJECT",
        "description": "A GitHub Sponsors tier associated with a GitHub Sponsors listing.",
        "fields": [
          {
            "name": "adminInfo",
            "type": {
              "name": "SponsorsTierAdminInfo"
            },
            "description": "SponsorsTier information only visible to users that can administer the associated Sponsors listing."
          },
          {
            "name": "closestLesserValueTier",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "Get a different tier for this tier's maintainer that is at the same frequency as this tier but with an equal or lesser cost. Returns the published tier with the monthly price closest to this tier's without going over."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "description",
            "type": {
              "name": null
            },
            "description": "The description of the tier."
          },
          {
            "name": "descriptionHTML",
            "type": {
              "name": null
            },
            "description": "The tier description rendered to HTML"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SponsorsTier object"
          },
          {
            "name": "isCustomAmount",
            "type": {
              "name": null
            },
            "description": "Whether this tier was chosen at checkout time by the sponsor rather than defined ahead of time by the maintainer who manages the Sponsors listing."
          },
          {
            "name": "isOneTime",
            "type": {
              "name": null
            },
            "description": "Whether this tier is only for use with one-time sponsorships."
          },
          {
            "name": "monthlyPriceInCents",
            "type": {
              "name": null
            },
            "description": "How much this tier costs per month in cents."
          },
          {
            "name": "monthlyPriceInDollars",
            "type": {
              "name": null
            },
            "description": "How much this tier costs per month in USD."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the tier."
          },
          {
            "name": "sponsorsListing",
            "type": {
              "name": null
            },
            "description": "The sponsors listing that this tier belongs to."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "SponsorsTierAdminInfo",
        "kind": "OBJECT",
        "description": "SponsorsTier information only visible to users that can administer the associated Sponsors listing.",
        "fields": [
          {
            "name": "isDraft",
            "type": {
              "name": null
            },
            "description": "Indicates whether this tier is still a work in progress by the sponsorable and not yet published to the associated GitHub Sponsors profile. Draft tiers cannot be used for new sponsorships and will not be in use on existing sponsorships. Draft tiers cannot be seen by anyone but the admins of the GitHub Sponsors profile."
          },
          {
            "name": "isPublished",
            "type": {
              "name": null
            },
            "description": "Indicates whether this tier is published to the associated GitHub Sponsors profile. Published tiers are visible to anyone who can see the GitHub Sponsors profile, and are available for use in sponsorships if the GitHub Sponsors profile is publicly visible."
          },
          {
            "name": "isRetired",
            "type": {
              "name": null
            },
            "description": "Indicates whether this tier has been retired from the associated GitHub Sponsors profile. Retired tiers are no longer shown on the GitHub Sponsors profile and cannot be chosen for new sponsorships. Existing sponsorships may still use retired tiers if the sponsor selected the tier before it was retired."
          },
          {
            "name": "sponsorships",
            "type": {
              "name": null
            },
            "description": "The sponsorships using this tier."
          }
        ]
      },
      {
        "name": "SponsorsTierConnection",
        "kind": "OBJECT",
        "description": "The connection type for SponsorsTier.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SponsorsTierEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SponsorsTierOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for Sponsors tiers connections.",
        "fields": null
      },
      {
        "name": "SponsorsTierOrderField",
        "kind": "ENUM",
        "description": "Properties by which Sponsors tiers connections can be ordered.",
        "fields": null
      },
      {
        "name": "Sponsorship",
        "kind": "OBJECT",
        "description": "A sponsorship relationship between a sponsor and a maintainer",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Sponsorship object"
          },
          {
            "name": "isActive",
            "type": {
              "name": null
            },
            "description": "Whether the sponsorship is active. False implies the sponsor is a past sponsor of the maintainer, while true implies they are a current sponsor."
          },
          {
            "name": "isOneTimePayment",
            "type": {
              "name": null
            },
            "description": "Whether this sponsorship represents a one-time payment versus a recurring sponsorship."
          },
          {
            "name": "isSponsorOptedIntoEmail",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether the sponsor has chosen to receive sponsorship update emails sent from the sponsorable. Only returns a non-null value when the viewer has permission to know this."
          },
          {
            "name": "paymentSource",
            "type": {
              "name": "SponsorshipPaymentSource"
            },
            "description": "The platform that was most recently used to pay for the sponsorship."
          },
          {
            "name": "privacyLevel",
            "type": {
              "name": null
            },
            "description": "The privacy level for this sponsorship."
          },
          {
            "name": "sponsorEntity",
            "type": {
              "name": "Sponsor"
            },
            "description": "The user or organization that is sponsoring, if you have permission to view them."
          },
          {
            "name": "sponsorable",
            "type": {
              "name": null
            },
            "description": "The entity that is being sponsored"
          },
          {
            "name": "tier",
            "type": {
              "name": "SponsorsTier"
            },
            "description": "The associated sponsorship tier"
          },
          {
            "name": "tierSelectedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the current tier was chosen for this sponsorship."
          }
        ]
      },
      {
        "name": "SponsorshipConnection",
        "kind": "OBJECT",
        "description": "A list of sponsorships either from the subject or received by the subject.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          },
          {
            "name": "totalRecurringMonthlyPriceInCents",
            "type": {
              "name": null
            },
            "description": "The total amount in cents of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships."
          },
          {
            "name": "totalRecurringMonthlyPriceInDollars",
            "type": {
              "name": null
            },
            "description": "The total amount in USD of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships."
          }
        ]
      },
      {
        "name": "SponsorshipEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SponsorshipNewsletter",
        "kind": "OBJECT",
        "description": "An update sent to sponsors of a user or organization on GitHub Sponsors.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "User"
            },
            "description": "The author of the newsletter."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The contents of the newsletter, the message the sponsorable wanted to give."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SponsorshipNewsletter object"
          },
          {
            "name": "isPublished",
            "type": {
              "name": null
            },
            "description": "Indicates if the newsletter has been made available to sponsors."
          },
          {
            "name": "sponsorable",
            "type": {
              "name": null
            },
            "description": "The user or organization this newsletter is from."
          },
          {
            "name": "subject",
            "type": {
              "name": null
            },
            "description": "The subject of the newsletter, what it's about."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "SponsorshipNewsletterConnection",
        "kind": "OBJECT",
        "description": "The connection type for SponsorshipNewsletter.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SponsorshipNewsletterEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "SponsorshipNewsletter"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "SponsorshipNewsletterOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for sponsorship newsletter connections.",
        "fields": null
      },
      {
        "name": "SponsorshipNewsletterOrderField",
        "kind": "ENUM",
        "description": "Properties by which sponsorship update connections can be ordered.",
        "fields": null
      },
      {
        "name": "SponsorshipOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for sponsorship connections.",
        "fields": null
      },
      {
        "name": "SponsorshipOrderField",
        "kind": "ENUM",
        "description": "Properties by which sponsorship connections can be ordered.",
        "fields": null
      },
      {
        "name": "SponsorshipPaymentSource",
        "kind": "ENUM",
        "description": "How payment was made for funding a GitHub Sponsors sponsorship.",
        "fields": null
      },
      {
        "name": "SponsorshipPrivacy",
        "kind": "ENUM",
        "description": "The privacy of a sponsorship",
        "fields": null
      },
      {
        "name": "SquashMergeCommitMessage",
        "kind": "ENUM",
        "description": "The possible default commit messages for squash merges.",
        "fields": null
      },
      {
        "name": "SquashMergeCommitTitle",
        "kind": "ENUM",
        "description": "The possible default commit titles for squash merges.",
        "fields": null
      },
      {
        "name": "SshSignature",
        "kind": "OBJECT",
        "description": "Represents an SSH signature on a Commit or Tag.",
        "fields": [
          {
            "name": "email",
            "type": {
              "name": null
            },
            "description": "Email used to sign this object."
          },
          {
            "name": "isValid",
            "type": {
              "name": null
            },
            "description": "True if the signature is valid and verified by GitHub."
          },
          {
            "name": "keyFingerprint",
            "type": {
              "name": "String"
            },
            "description": "Hex-encoded fingerprint of the key that signed this object."
          },
          {
            "name": "payload",
            "type": {
              "name": null
            },
            "description": "Payload for GPG signing object. Raw ODB object without the signature header."
          },
          {
            "name": "signature",
            "type": {
              "name": null
            },
            "description": "ASCII-armored signature header from object."
          },
          {
            "name": "signer",
            "type": {
              "name": "User"
            },
            "description": "GitHub user corresponding to the email signing this commit."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."
          },
          {
            "name": "verifiedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The date the signature was verified, if valid"
          },
          {
            "name": "wasSignedByGitHub",
            "type": {
              "name": null
            },
            "description": "True if the signature was made with GitHub's signing key."
          }
        ]
      },
      {
        "name": "StarOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which star connections can be ordered.",
        "fields": null
      },
      {
        "name": "StarOrderField",
        "kind": "ENUM",
        "description": "Properties by which star connections can be ordered.",
        "fields": null
      },
      {
        "name": "StargazerConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "StargazerEdge",
        "kind": "OBJECT",
        "description": "Represents a user that's starred a repository.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "starredAt",
            "type": {
              "name": null
            },
            "description": "Identifies when the item was starred."
          }
        ]
      },
      {
        "name": "Starrable",
        "kind": "INTERFACE",
        "description": "Things that can be starred.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Starrable object"
          },
          {
            "name": "stargazerCount",
            "type": {
              "name": null
            },
            "description": "Returns a count of how many stargazers there are on this object\n"
          },
          {
            "name": "stargazers",
            "type": {
              "name": null
            },
            "description": "A list of users who have starred this starrable."
          },
          {
            "name": "viewerHasStarred",
            "type": {
              "name": null
            },
            "description": "Returns a boolean indicating whether the viewing user has starred this starrable."
          }
        ]
      },
      {
        "name": "StarredRepositoryConnection",
        "kind": "OBJECT",
        "description": "The connection type for Repository.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "isOverLimit",
            "type": {
              "name": null
            },
            "description": "Is the list of stars for this user truncated? This is true for users that have many stars."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "StarredRepositoryEdge",
        "kind": "OBJECT",
        "description": "Represents a starred repository.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "starredAt",
            "type": {
              "name": null
            },
            "description": "Identifies when the item was starred."
          }
        ]
      },
      {
        "name": "StartOrganizationMigrationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of StartOrganizationMigration",
        "fields": null
      },
      {
        "name": "StartOrganizationMigrationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of StartOrganizationMigration.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "orgMigration",
            "type": {
              "name": "OrganizationMigration"
            },
            "description": "The new organization migration."
          }
        ]
      },
      {
        "name": "StartRepositoryMigrationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of StartRepositoryMigration",
        "fields": null
      },
      {
        "name": "StartRepositoryMigrationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of StartRepositoryMigration.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repositoryMigration",
            "type": {
              "name": "RepositoryMigration"
            },
            "description": "The new repository migration."
          }
        ]
      },
      {
        "name": "Status",
        "kind": "OBJECT",
        "description": "Represents a commit status.",
        "fields": [
          {
            "name": "combinedContexts",
            "type": {
              "name": null
            },
            "description": "A list of status contexts and check runs for this commit."
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "The commit this status is attached to."
          },
          {
            "name": "context",
            "type": {
              "name": "StatusContext"
            },
            "description": "Looks up an individual status context by context name."
          },
          {
            "name": "contexts",
            "type": {
              "name": null
            },
            "description": "The individual status contexts for this commit."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Status object"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The combined commit status."
          }
        ]
      },
      {
        "name": "StatusCheckConfiguration",
        "kind": "OBJECT",
        "description": "Required status check",
        "fields": [
          {
            "name": "context",
            "type": {
              "name": null
            },
            "description": "The status check context name that must be present on the commit."
          },
          {
            "name": "integrationId",
            "type": {
              "name": "Int"
            },
            "description": "The optional integration ID that this status check must originate from."
          }
        ]
      },
      {
        "name": "StatusCheckConfigurationInput",
        "kind": "INPUT_OBJECT",
        "description": "Required status check",
        "fields": null
      },
      {
        "name": "StatusCheckRollup",
        "kind": "OBJECT",
        "description": "Represents the rollup for both the check runs and status for a commit.",
        "fields": [
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "The commit the status and check runs are attached to."
          },
          {
            "name": "contexts",
            "type": {
              "name": null
            },
            "description": "A list of status contexts and check runs for this commit."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the StatusCheckRollup object"
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The combined status for the commit."
          }
        ]
      },
      {
        "name": "StatusCheckRollupContext",
        "kind": "UNION",
        "description": "Types that can be inside a StatusCheckRollup context.",
        "fields": null
      },
      {
        "name": "StatusCheckRollupContextConnection",
        "kind": "OBJECT",
        "description": "The connection type for StatusCheckRollupContext.",
        "fields": [
          {
            "name": "checkRunCount",
            "type": {
              "name": null
            },
            "description": "The number of check runs in this rollup."
          },
          {
            "name": "checkRunCountsByState",
            "type": {
              "name": null
            },
            "description": "Counts of check runs by state."
          },
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "statusContextCount",
            "type": {
              "name": null
            },
            "description": "The number of status contexts in this rollup."
          },
          {
            "name": "statusContextCountsByState",
            "type": {
              "name": null
            },
            "description": "Counts of status contexts by state."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "StatusCheckRollupContextEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "StatusCheckRollupContext"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "StatusContext",
        "kind": "OBJECT",
        "description": "Represents an individual commit status context",
        "fields": [
          {
            "name": "avatarUrl",
            "type": {
              "name": "URI"
            },
            "description": "The avatar of the OAuth application or the user that created the status"
          },
          {
            "name": "commit",
            "type": {
              "name": "Commit"
            },
            "description": "This commit this status context is attached to."
          },
          {
            "name": "context",
            "type": {
              "name": null
            },
            "description": "The name of this status context."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "creator",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who created this status context."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The description for this status context."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the StatusContext object"
          },
          {
            "name": "isRequired",
            "type": {
              "name": null
            },
            "description": "Whether this is required to pass before merging for a specific pull request."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of this status context."
          },
          {
            "name": "targetUrl",
            "type": {
              "name": "URI"
            },
            "description": "The URL for this status context."
          }
        ]
      },
      {
        "name": "StatusContextStateCount",
        "kind": "OBJECT",
        "description": "Represents a count of the state of a status context.",
        "fields": [
          {
            "name": "count",
            "type": {
              "name": null
            },
            "description": "The number of statuses with this state."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of a status context."
          }
        ]
      },
      {
        "name": "StatusState",
        "kind": "ENUM",
        "description": "The possible commit status states.",
        "fields": null
      },
      {
        "name": "String",
        "kind": "SCALAR",
        "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
        "fields": null
      },
      {
        "name": "StripeConnectAccount",
        "kind": "OBJECT",
        "description": "A Stripe Connect account for receiving sponsorship funds from GitHub Sponsors.",
        "fields": [
          {
            "name": "accountId",
            "type": {
              "name": null
            },
            "description": "The account number used to identify this Stripe Connect account."
          },
          {
            "name": "billingCountryOrRegion",
            "type": {
              "name": "String"
            },
            "description": "The name of the country or region of an external account, such as a bank account, tied to the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization."
          },
          {
            "name": "countryOrRegion",
            "type": {
              "name": "String"
            },
            "description": "The name of the country or region of the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization."
          },
          {
            "name": "isActive",
            "type": {
              "name": null
            },
            "description": "Whether this Stripe Connect account is currently in use for the associated GitHub Sponsors profile."
          },
          {
            "name": "sponsorsListing",
            "type": {
              "name": null
            },
            "description": "The GitHub Sponsors profile associated with this Stripe Connect account."
          },
          {
            "name": "stripeDashboardUrl",
            "type": {
              "name": null
            },
            "description": "The URL to access this Stripe Connect account on Stripe's website."
          }
        ]
      },
      {
        "name": "SubIssueAddedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'sub_issue_added' event on a given issue.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SubIssueAddedEvent object"
          },
          {
            "name": "subIssue",
            "type": {
              "name": "Issue"
            },
            "description": "The sub-issue added."
          }
        ]
      },
      {
        "name": "SubIssueRemovedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'sub_issue_removed' event on a given issue.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SubIssueRemovedEvent object"
          },
          {
            "name": "subIssue",
            "type": {
              "name": "Issue"
            },
            "description": "The sub-issue removed."
          }
        ]
      },
      {
        "name": "SubIssuesSummary",
        "kind": "OBJECT",
        "description": "Summary of the state of an issue's sub-issues",
        "fields": [
          {
            "name": "completed",
            "type": {
              "name": null
            },
            "description": "Count of completed sub-issues"
          },
          {
            "name": "percentCompleted",
            "type": {
              "name": null
            },
            "description": "Percent of sub-issues which are completed"
          },
          {
            "name": "total",
            "type": {
              "name": null
            },
            "description": "Count of total number of sub-issues"
          }
        ]
      },
      {
        "name": "SubmitPullRequestReviewInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of SubmitPullRequestReview",
        "fields": null
      },
      {
        "name": "SubmitPullRequestReviewPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of SubmitPullRequestReview.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequestReview",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The submitted pull request review."
          }
        ]
      },
      {
        "name": "Submodule",
        "kind": "OBJECT",
        "description": "A pointer to a repository at a specific revision embedded inside another repository.",
        "fields": [
          {
            "name": "branch",
            "type": {
              "name": "String"
            },
            "description": "The branch of the upstream submodule for tracking updates"
          },
          {
            "name": "gitUrl",
            "type": {
              "name": null
            },
            "description": "The git URL of the submodule repository"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the submodule in .gitmodules"
          },
          {
            "name": "nameRaw",
            "type": {
              "name": null
            },
            "description": "The name of the submodule in .gitmodules (Base64-encoded)"
          },
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "The path in the superproject that this submodule is located in"
          },
          {
            "name": "pathRaw",
            "type": {
              "name": null
            },
            "description": "The path in the superproject that this submodule is located in (Base64-encoded)"
          },
          {
            "name": "subprojectCommitOid",
            "type": {
              "name": "GitObjectID"
            },
            "description": "The commit revision of the subproject repository being tracked by the submodule"
          }
        ]
      },
      {
        "name": "SubmoduleConnection",
        "kind": "OBJECT",
        "description": "The connection type for Submodule.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "SubmoduleEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Submodule"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "Subscribable",
        "kind": "INTERFACE",
        "description": "Entities that can be subscribed to for web and email notifications.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Subscribable object"
          },
          {
            "name": "viewerCanSubscribe",
            "type": {
              "name": null
            },
            "description": "Check if the viewer is able to change their subscription status for the repository."
          },
          {
            "name": "viewerSubscription",
            "type": {
              "name": "SubscriptionState"
            },
            "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."
          }
        ]
      },
      {
        "name": "SubscribableThread",
        "kind": "INTERFACE",
        "description": "Entities that can be subscribed to for web and email notifications.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SubscribableThread object"
          },
          {
            "name": "viewerThreadSubscriptionFormAction",
            "type": {
              "name": "ThreadSubscriptionFormAction"
            },
            "description": "Identifies the viewer's thread subscription form action."
          },
          {
            "name": "viewerThreadSubscriptionStatus",
            "type": {
              "name": "ThreadSubscriptionState"
            },
            "description": "Identifies the viewer's thread subscription status."
          }
        ]
      },
      {
        "name": "SubscribedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'subscribed' event on a given `Subscribable`.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the SubscribedEvent object"
          },
          {
            "name": "subscribable",
            "type": {
              "name": null
            },
            "description": "Object referenced by event."
          }
        ]
      },
      {
        "name": "SubscriptionState",
        "kind": "ENUM",
        "description": "The possible states of a subscription.",
        "fields": null
      },
      {
        "name": "SuggestedReviewer",
        "kind": "OBJECT",
        "description": "A suggestion to review a pull request based on a user's commit history and review comments.",
        "fields": [
          {
            "name": "isAuthor",
            "type": {
              "name": null
            },
            "description": "Is this suggestion based on past commits?"
          },
          {
            "name": "isCommenter",
            "type": {
              "name": null
            },
            "description": "Is this suggestion based on past review comments?"
          },
          {
            "name": "reviewer",
            "type": {
              "name": null
            },
            "description": "Identifies the user suggested to review the pull request."
          }
        ]
      },
      {
        "name": "Tag",
        "kind": "OBJECT",
        "description": "Represents a Git tag.",
        "fields": [
          {
            "name": "abbreviatedOid",
            "type": {
              "name": null
            },
            "description": "An abbreviated version of the Git object ID"
          },
          {
            "name": "commitResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this Git object"
          },
          {
            "name": "commitUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this Git object"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Tag object"
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "The Git tag message."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The Git tag name."
          },
          {
            "name": "oid",
            "type": {
              "name": null
            },
            "description": "The Git object ID"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The Repository the Git object belongs to"
          },
          {
            "name": "tagger",
            "type": {
              "name": "GitActor"
            },
            "description": "Details about the tag author."
          },
          {
            "name": "target",
            "type": {
              "name": null
            },
            "description": "The Git object the tag points to."
          }
        ]
      },
      {
        "name": "TagNamePatternParameters",
        "kind": "OBJECT",
        "description": "Parameters to be used for the tag_name_pattern rule",
        "fields": [
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "How this rule will appear to users."
          },
          {
            "name": "negate",
            "type": {
              "name": null
            },
            "description": "If true, the rule will fail if the pattern matches."
          },
          {
            "name": "operator",
            "type": {
              "name": null
            },
            "description": "The operator to use for matching."
          },
          {
            "name": "pattern",
            "type": {
              "name": null
            },
            "description": "The pattern to match with."
          }
        ]
      },
      {
        "name": "TagNamePatternParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Parameters to be used for the tag_name_pattern rule",
        "fields": null
      },
      {
        "name": "Team",
        "kind": "OBJECT",
        "description": "A team of users in an organization.",
        "fields": [
          {
            "name": "ancestors",
            "type": {
              "name": null
            },
            "description": "A list of teams that are ancestors of this team."
          },
          {
            "name": "avatarUrl",
            "type": {
              "name": "URI"
            },
            "description": "A URL pointing to the team's avatar."
          },
          {
            "name": "childTeams",
            "type": {
              "name": null
            },
            "description": "List of child teams belonging to this team"
          },
          {
            "name": "combinedSlug",
            "type": {
              "name": null
            },
            "description": "The slug corresponding to the organization and team."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The description of the team."
          },
          {
            "name": "discussion",
            "type": {
              "name": "TeamDiscussion"
            },
            "description": "Find a team discussion by its number."
          },
          {
            "name": "discussions",
            "type": {
              "name": null
            },
            "description": "A list of team discussions."
          },
          {
            "name": "discussionsResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for team discussions"
          },
          {
            "name": "discussionsUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for team discussions"
          },
          {
            "name": "editTeamResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for editing this team"
          },
          {
            "name": "editTeamUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for editing this team"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Team object"
          },
          {
            "name": "invitations",
            "type": {
              "name": "OrganizationInvitationConnection"
            },
            "description": "A list of pending invitations for users to this team"
          },
          {
            "name": "memberStatuses",
            "type": {
              "name": null
            },
            "description": "Get the status messages members of this entity have set that are either public or visible only to the organization."
          },
          {
            "name": "members",
            "type": {
              "name": null
            },
            "description": "A list of users who are members of this team."
          },
          {
            "name": "membersResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for the team' members"
          },
          {
            "name": "membersUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for the team' members"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the team."
          },
          {
            "name": "newTeamResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path creating a new team"
          },
          {
            "name": "newTeamUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL creating a new team"
          },
          {
            "name": "notificationSetting",
            "type": {
              "name": null
            },
            "description": "The notification setting that the team has set."
          },
          {
            "name": "organization",
            "type": {
              "name": null
            },
            "description": "The organization that owns this team."
          },
          {
            "name": "parentTeam",
            "type": {
              "name": "Team"
            },
            "description": "The parent team of the team."
          },
          {
            "name": "privacy",
            "type": {
              "name": null
            },
            "description": "The level of privacy the team has."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "Finds and returns the project according to the provided project number."
          },
          {
            "name": "projectsV2",
            "type": {
              "name": null
            },
            "description": "List of projects this team has collaborator access to."
          },
          {
            "name": "repositories",
            "type": {
              "name": null
            },
            "description": "A list of repositories this team has access to."
          },
          {
            "name": "repositoriesResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this team's repositories"
          },
          {
            "name": "repositoriesUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this team's repositories"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this team"
          },
          {
            "name": "reviewRequestDelegationAlgorithm",
            "type": {
              "name": "TeamReviewAssignmentAlgorithm"
            },
            "description": "What algorithm is used for review assignment for this team"
          },
          {
            "name": "reviewRequestDelegationEnabled",
            "type": {
              "name": null
            },
            "description": "True if review assignment is enabled for this team"
          },
          {
            "name": "reviewRequestDelegationMemberCount",
            "type": {
              "name": "Int"
            },
            "description": "How many team members are required for review assignment for this team"
          },
          {
            "name": "reviewRequestDelegationNotifyTeam",
            "type": {
              "name": null
            },
            "description": "When assigning team members via delegation, whether the entire team should be notified as well."
          },
          {
            "name": "slug",
            "type": {
              "name": null
            },
            "description": "The slug corresponding to the team."
          },
          {
            "name": "teamsResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this team's teams"
          },
          {
            "name": "teamsUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this team's teams"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this team"
          },
          {
            "name": "viewerCanAdminister",
            "type": {
              "name": null
            },
            "description": "Team is adminable by the viewer."
          },
          {
            "name": "viewerCanSubscribe",
            "type": {
              "name": null
            },
            "description": "Check if the viewer is able to change their subscription status for the repository."
          },
          {
            "name": "viewerSubscription",
            "type": {
              "name": "SubscriptionState"
            },
            "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."
          }
        ]
      },
      {
        "name": "TeamAddMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a team.add_member event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the TeamAddMemberAuditEntry object"
          },
          {
            "name": "isLdapMapped",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether the team was mapped to an LDAP Group."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team associated with the action"
          },
          {
            "name": "teamName",
            "type": {
              "name": "String"
            },
            "description": "The name of the team"
          },
          {
            "name": "teamResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this team"
          },
          {
            "name": "teamUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this team"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "TeamAddRepositoryAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a team.add_repository event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the TeamAddRepositoryAuditEntry object"
          },
          {
            "name": "isLdapMapped",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether the team was mapped to an LDAP Group."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team associated with the action"
          },
          {
            "name": "teamName",
            "type": {
              "name": "String"
            },
            "description": "The name of the team"
          },
          {
            "name": "teamResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this team"
          },
          {
            "name": "teamUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this team"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "TeamAuditEntryData",
        "kind": "INTERFACE",
        "description": "Metadata for an audit entry with action team.*",
        "fields": [
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team associated with the action"
          },
          {
            "name": "teamName",
            "type": {
              "name": "String"
            },
            "description": "The name of the team"
          },
          {
            "name": "teamResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this team"
          },
          {
            "name": "teamUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this team"
          }
        ]
      },
      {
        "name": "TeamChangeParentTeamAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a team.change_parent_team event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the TeamChangeParentTeamAuditEntry object"
          },
          {
            "name": "isLdapMapped",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether the team was mapped to an LDAP Group."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "parentTeam",
            "type": {
              "name": "Team"
            },
            "description": "The new parent team."
          },
          {
            "name": "parentTeamName",
            "type": {
              "name": "String"
            },
            "description": "The name of the new parent team"
          },
          {
            "name": "parentTeamNameWas",
            "type": {
              "name": "String"
            },
            "description": "The name of the former parent team"
          },
          {
            "name": "parentTeamResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the parent team"
          },
          {
            "name": "parentTeamUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the parent team"
          },
          {
            "name": "parentTeamWas",
            "type": {
              "name": "Team"
            },
            "description": "The former parent team."
          },
          {
            "name": "parentTeamWasResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the previous parent team"
          },
          {
            "name": "parentTeamWasUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the previous parent team"
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team associated with the action"
          },
          {
            "name": "teamName",
            "type": {
              "name": "String"
            },
            "description": "The name of the team"
          },
          {
            "name": "teamResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this team"
          },
          {
            "name": "teamUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this team"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "TeamConnection",
        "kind": "OBJECT",
        "description": "The connection type for Team.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "TeamDiscussion",
        "kind": "OBJECT",
        "description": "A team discussion.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body as Markdown."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the TeamDiscussion object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanSubscribe",
            "type": {
              "name": null
            },
            "description": "Check if the viewer is able to change their subscription status for the repository."
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          },
          {
            "name": "viewerSubscription",
            "type": {
              "name": "SubscriptionState"
            },
            "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity."
          }
        ]
      },
      {
        "name": "TeamDiscussionComment",
        "kind": "OBJECT",
        "description": "A comment on a team discussion.",
        "fields": [
          {
            "name": "author",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who authored the comment."
          },
          {
            "name": "body",
            "type": {
              "name": null
            },
            "description": "The body as Markdown."
          },
          {
            "name": "bodyHTML",
            "type": {
              "name": null
            },
            "description": "The body rendered to HTML."
          },
          {
            "name": "bodyText",
            "type": {
              "name": null
            },
            "description": "The body rendered to text."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "createdViaEmail",
            "type": {
              "name": null
            },
            "description": "Check if this comment was created via an email reply."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited the comment."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the TeamDiscussionComment object"
          },
          {
            "name": "includesCreatedEdit",
            "type": {
              "name": null
            },
            "description": "Check if this comment was edited and includes an edit with the creation data"
          },
          {
            "name": "lastEditedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The moment the editor made the last edit"
          },
          {
            "name": "publishedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies when the comment was published at."
          },
          {
            "name": "reactionGroups",
            "type": {
              "name": null
            },
            "description": "A list of reactions grouped by content left on the subject."
          },
          {
            "name": "reactions",
            "type": {
              "name": null
            },
            "description": "A list of Reactions left on the Issue."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "userContentEdits",
            "type": {
              "name": "UserContentEditConnection"
            },
            "description": "A list of edits to this content."
          },
          {
            "name": "viewerCanDelete",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can delete this object."
          },
          {
            "name": "viewerCanReact",
            "type": {
              "name": null
            },
            "description": "Can user react to this subject"
          },
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          },
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          },
          {
            "name": "viewerDidAuthor",
            "type": {
              "name": null
            },
            "description": "Did the viewer author this comment."
          }
        ]
      },
      {
        "name": "TeamDiscussionCommentConnection",
        "kind": "OBJECT",
        "description": "The connection type for TeamDiscussionComment.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "TeamDiscussionCommentEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "TeamDiscussionComment"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "TeamDiscussionCommentOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which team discussion comment connections can be ordered.",
        "fields": null
      },
      {
        "name": "TeamDiscussionCommentOrderField",
        "kind": "ENUM",
        "description": "Properties by which team discussion comment connections can be ordered.",
        "fields": null
      },
      {
        "name": "TeamDiscussionConnection",
        "kind": "OBJECT",
        "description": "The connection type for TeamDiscussion.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "TeamDiscussionEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "TeamDiscussion"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "TeamDiscussionOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which team discussion connections can be ordered.",
        "fields": null
      },
      {
        "name": "TeamDiscussionOrderField",
        "kind": "ENUM",
        "description": "Properties by which team discussion connections can be ordered.",
        "fields": null
      },
      {
        "name": "TeamEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "Team"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "TeamMemberConnection",
        "kind": "OBJECT",
        "description": "The connection type for User.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "TeamMemberEdge",
        "kind": "OBJECT",
        "description": "Represents a user who is a member of a team.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "memberAccessResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path to the organization's member access page."
          },
          {
            "name": "memberAccessUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL to the organization's member access page."
          },
          {
            "name": "node",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "role",
            "type": {
              "name": null
            },
            "description": "The role the member has on the team."
          }
        ]
      },
      {
        "name": "TeamMemberOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for team member connections",
        "fields": null
      },
      {
        "name": "TeamMemberOrderField",
        "kind": "ENUM",
        "description": "Properties by which team member connections can be ordered.",
        "fields": null
      },
      {
        "name": "TeamMemberRole",
        "kind": "ENUM",
        "description": "The possible team member roles; either 'maintainer' or 'member'.",
        "fields": null
      },
      {
        "name": "TeamMembershipType",
        "kind": "ENUM",
        "description": "Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.",
        "fields": null
      },
      {
        "name": "TeamNotificationSetting",
        "kind": "ENUM",
        "description": "The possible team notification values.",
        "fields": null
      },
      {
        "name": "TeamOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which team connections can be ordered.",
        "fields": null
      },
      {
        "name": "TeamOrderField",
        "kind": "ENUM",
        "description": "Properties by which team connections can be ordered.",
        "fields": null
      },
      {
        "name": "TeamPrivacy",
        "kind": "ENUM",
        "description": "The possible team privacy values.",
        "fields": null
      },
      {
        "name": "TeamRemoveMemberAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a team.remove_member event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the TeamRemoveMemberAuditEntry object"
          },
          {
            "name": "isLdapMapped",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether the team was mapped to an LDAP Group."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team associated with the action"
          },
          {
            "name": "teamName",
            "type": {
              "name": "String"
            },
            "description": "The name of the team"
          },
          {
            "name": "teamResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this team"
          },
          {
            "name": "teamUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this team"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "TeamRemoveRepositoryAuditEntry",
        "kind": "OBJECT",
        "description": "Audit log entry for a team.remove_repository event.",
        "fields": [
          {
            "name": "action",
            "type": {
              "name": null
            },
            "description": "The action name"
          },
          {
            "name": "actor",
            "type": {
              "name": "AuditEntryActor"
            },
            "description": "The user who initiated the action"
          },
          {
            "name": "actorIp",
            "type": {
              "name": "String"
            },
            "description": "The IP address of the actor"
          },
          {
            "name": "actorLocation",
            "type": {
              "name": "ActorLocation"
            },
            "description": "A readable representation of the actor's location"
          },
          {
            "name": "actorLogin",
            "type": {
              "name": "String"
            },
            "description": "The username of the user who initiated the action"
          },
          {
            "name": "actorResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the actor."
          },
          {
            "name": "actorUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the actor."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "The time the action was initiated"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the TeamRemoveRepositoryAuditEntry object"
          },
          {
            "name": "isLdapMapped",
            "type": {
              "name": "Boolean"
            },
            "description": "Whether the team was mapped to an LDAP Group."
          },
          {
            "name": "operationType",
            "type": {
              "name": "OperationType"
            },
            "description": "The corresponding operation type for the action"
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The Organization associated with the Audit Entry."
          },
          {
            "name": "organizationName",
            "type": {
              "name": "String"
            },
            "description": "The name of the Organization."
          },
          {
            "name": "organizationResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the organization"
          },
          {
            "name": "organizationUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the organization"
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository associated with the action"
          },
          {
            "name": "repositoryName",
            "type": {
              "name": "String"
            },
            "description": "The name of the repository"
          },
          {
            "name": "repositoryResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the repository"
          },
          {
            "name": "repositoryUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the repository"
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team associated with the action"
          },
          {
            "name": "teamName",
            "type": {
              "name": "String"
            },
            "description": "The name of the team"
          },
          {
            "name": "teamResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for this team"
          },
          {
            "name": "teamUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for this team"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user affected by the action"
          },
          {
            "name": "userLogin",
            "type": {
              "name": "String"
            },
            "description": "For actions involving two users, the actor is the initiator and the user is the affected user."
          },
          {
            "name": "userResourcePath",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP path for the user."
          },
          {
            "name": "userUrl",
            "type": {
              "name": "URI"
            },
            "description": "The HTTP URL for the user."
          }
        ]
      },
      {
        "name": "TeamRepositoryConnection",
        "kind": "OBJECT",
        "description": "The connection type for Repository.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "TeamRepositoryEdge",
        "kind": "OBJECT",
        "description": "Represents a team repository.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "permission",
            "type": {
              "name": null
            },
            "description": "The permission level the team has on the repository"
          }
        ]
      },
      {
        "name": "TeamRepositoryOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for team repository connections",
        "fields": null
      },
      {
        "name": "TeamRepositoryOrderField",
        "kind": "ENUM",
        "description": "Properties by which team repository connections can be ordered.",
        "fields": null
      },
      {
        "name": "TeamReviewAssignmentAlgorithm",
        "kind": "ENUM",
        "description": "The possible team review assignment algorithms",
        "fields": null
      },
      {
        "name": "TeamRole",
        "kind": "ENUM",
        "description": "The role of a user on a team.",
        "fields": null
      },
      {
        "name": "TextMatch",
        "kind": "OBJECT",
        "description": "A text match within a search result.",
        "fields": [
          {
            "name": "fragment",
            "type": {
              "name": null
            },
            "description": "The specific text fragment within the property matched on."
          },
          {
            "name": "highlights",
            "type": {
              "name": null
            },
            "description": "Highlights within the matched fragment."
          },
          {
            "name": "property",
            "type": {
              "name": null
            },
            "description": "The property matched on."
          }
        ]
      },
      {
        "name": "TextMatchHighlight",
        "kind": "OBJECT",
        "description": "Represents a single highlight in a search result match.",
        "fields": [
          {
            "name": "beginIndice",
            "type": {
              "name": null
            },
            "description": "The indice in the fragment where the matched text begins."
          },
          {
            "name": "endIndice",
            "type": {
              "name": null
            },
            "description": "The indice in the fragment where the matched text ends."
          },
          {
            "name": "text",
            "type": {
              "name": null
            },
            "description": "The text matched."
          }
        ]
      },
      {
        "name": "ThreadSubscriptionFormAction",
        "kind": "ENUM",
        "description": "The possible states of a thread subscription form action",
        "fields": null
      },
      {
        "name": "ThreadSubscriptionState",
        "kind": "ENUM",
        "description": "The possible states of a subscription.",
        "fields": null
      },
      {
        "name": "Topic",
        "kind": "OBJECT",
        "description": "A topic aggregates entities that are related to a subject.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Topic object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The topic's name."
          },
          {
            "name": "relatedTopics",
            "type": {
              "name": null
            },
            "description": "A list of related topics, including aliases of this topic, sorted with the most relevant\nfirst. Returns up to 10 Topics.\n"
          },
          {
            "name": "repositories",
            "type": {
              "name": null
            },
            "description": "A list of repositories."
          },
          {
            "name": "stargazerCount",
            "type": {
              "name": null
            },
            "description": "Returns a count of how many stargazers there are on this object\n"
          },
          {
            "name": "stargazers",
            "type": {
              "name": null
            },
            "description": "A list of users who have starred this starrable."
          },
          {
            "name": "viewerHasStarred",
            "type": {
              "name": null
            },
            "description": "Returns a boolean indicating whether the viewing user has starred this starrable."
          }
        ]
      },
      {
        "name": "TopicAuditEntryData",
        "kind": "INTERFACE",
        "description": "Metadata for an audit entry with a topic.",
        "fields": [
          {
            "name": "topic",
            "type": {
              "name": "Topic"
            },
            "description": "The name of the topic added to the repository"
          },
          {
            "name": "topicName",
            "type": {
              "name": "String"
            },
            "description": "The name of the topic added to the repository"
          }
        ]
      },
      {
        "name": "TopicSuggestionDeclineReason",
        "kind": "ENUM",
        "description": "Reason that the suggested topic is declined.",
        "fields": null
      },
      {
        "name": "TrackedIssueStates",
        "kind": "ENUM",
        "description": "The possible states of a tracked issue.",
        "fields": null
      },
      {
        "name": "TransferEnterpriseOrganizationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of TransferEnterpriseOrganization",
        "fields": null
      },
      {
        "name": "TransferEnterpriseOrganizationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of TransferEnterpriseOrganization.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization for which a transfer was initiated."
          }
        ]
      },
      {
        "name": "TransferIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of TransferIssue",
        "fields": null
      },
      {
        "name": "TransferIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of TransferIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The issue that was transferred"
          }
        ]
      },
      {
        "name": "TransferredEvent",
        "kind": "OBJECT",
        "description": "Represents a 'transferred' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "fromRepository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository this came from"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the TransferredEvent object"
          },
          {
            "name": "issue",
            "type": {
              "name": null
            },
            "description": "Identifies the issue associated with the event."
          }
        ]
      },
      {
        "name": "Tree",
        "kind": "OBJECT",
        "description": "Represents a Git tree.",
        "fields": [
          {
            "name": "abbreviatedOid",
            "type": {
              "name": null
            },
            "description": "An abbreviated version of the Git object ID"
          },
          {
            "name": "commitResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this Git object"
          },
          {
            "name": "commitUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this Git object"
          },
          {
            "name": "entries",
            "type": {
              "name": null
            },
            "description": "A list of tree entries."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Tree object"
          },
          {
            "name": "oid",
            "type": {
              "name": null
            },
            "description": "The Git object ID"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The Repository the Git object belongs to"
          }
        ]
      },
      {
        "name": "TreeEntry",
        "kind": "OBJECT",
        "description": "Represents a Git tree entry.",
        "fields": [
          {
            "name": "extension",
            "type": {
              "name": "String"
            },
            "description": "The extension of the file"
          },
          {
            "name": "isGenerated",
            "type": {
              "name": null
            },
            "description": "Whether or not this tree entry is generated"
          },
          {
            "name": "language",
            "type": {
              "name": "Language"
            },
            "description": "The programming language this file is written in."
          },
          {
            "name": "lineCount",
            "type": {
              "name": "Int"
            },
            "description": "Number of lines in the file."
          },
          {
            "name": "mode",
            "type": {
              "name": null
            },
            "description": "Entry file mode."
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "Entry file name."
          },
          {
            "name": "nameRaw",
            "type": {
              "name": null
            },
            "description": "Entry file name. (Base64-encoded)"
          },
          {
            "name": "object",
            "type": {
              "name": "GitObject"
            },
            "description": "Entry file object."
          },
          {
            "name": "oid",
            "type": {
              "name": null
            },
            "description": "Entry file Git object ID."
          },
          {
            "name": "path",
            "type": {
              "name": "String"
            },
            "description": "The full path of the file."
          },
          {
            "name": "pathRaw",
            "type": {
              "name": "Base64String"
            },
            "description": "The full path of the file. (Base64-encoded)"
          },
          {
            "name": "repository",
            "type": {
              "name": null
            },
            "description": "The Repository the tree entry belongs to"
          },
          {
            "name": "size",
            "type": {
              "name": null
            },
            "description": "Entry byte size"
          },
          {
            "name": "submodule",
            "type": {
              "name": "Submodule"
            },
            "description": "If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule"
          },
          {
            "name": "type",
            "type": {
              "name": null
            },
            "description": "Entry file type."
          }
        ]
      },
      {
        "name": "TwoFactorCredentialSecurityType",
        "kind": "ENUM",
        "description": "Filters by whether or not 2FA is enabled and if the method configured is considered secure or insecure.",
        "fields": null
      },
      {
        "name": "URI",
        "kind": "SCALAR",
        "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
        "fields": null
      },
      {
        "name": "UnarchiveProjectV2ItemInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnarchiveProjectV2Item",
        "fields": null
      },
      {
        "name": "UnarchiveProjectV2ItemPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnarchiveProjectV2Item.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "item",
            "type": {
              "name": "ProjectV2Item"
            },
            "description": "The item unarchived from the project."
          }
        ]
      },
      {
        "name": "UnarchiveRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnarchiveRepository",
        "fields": null
      },
      {
        "name": "UnarchiveRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnarchiveRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository that was unarchived."
          }
        ]
      },
      {
        "name": "UnassignedEvent",
        "kind": "OBJECT",
        "description": "Represents an 'unassigned' event on any assignable object.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "assignable",
            "type": {
              "name": null
            },
            "description": "Identifies the assignable associated with the event."
          },
          {
            "name": "assignee",
            "type": {
              "name": "Assignee"
            },
            "description": "Identifies the user or mannequin that was unassigned."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UnassignedEvent object"
          }
        ]
      },
      {
        "name": "UnfollowOrganizationInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnfollowOrganization",
        "fields": null
      },
      {
        "name": "UnfollowOrganizationPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnfollowOrganization.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization that was unfollowed."
          }
        ]
      },
      {
        "name": "UnfollowUserInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnfollowUser",
        "fields": null
      },
      {
        "name": "UnfollowUserPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnfollowUser.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user that was unfollowed."
          }
        ]
      },
      {
        "name": "UniformResourceLocatable",
        "kind": "INTERFACE",
        "description": "Represents a type that can be retrieved by a URL.",
        "fields": [
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTML path to this resource."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The URL to this resource."
          }
        ]
      },
      {
        "name": "UnknownSignature",
        "kind": "OBJECT",
        "description": "Represents an unknown signature on a Commit or Tag.",
        "fields": [
          {
            "name": "email",
            "type": {
              "name": null
            },
            "description": "Email used to sign this object."
          },
          {
            "name": "isValid",
            "type": {
              "name": null
            },
            "description": "True if the signature is valid and verified by GitHub."
          },
          {
            "name": "payload",
            "type": {
              "name": null
            },
            "description": "Payload for GPG signing object. Raw ODB object without the signature header."
          },
          {
            "name": "signature",
            "type": {
              "name": null
            },
            "description": "ASCII-armored signature header from object."
          },
          {
            "name": "signer",
            "type": {
              "name": "User"
            },
            "description": "GitHub user corresponding to the email signing this commit."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid."
          },
          {
            "name": "verifiedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "The date the signature was verified, if valid"
          },
          {
            "name": "wasSignedByGitHub",
            "type": {
              "name": null
            },
            "description": "True if the signature was made with GitHub's signing key."
          }
        ]
      },
      {
        "name": "UnlabeledEvent",
        "kind": "OBJECT",
        "description": "Represents an 'unlabeled' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UnlabeledEvent object"
          },
          {
            "name": "label",
            "type": {
              "name": null
            },
            "description": "Identifies the label associated with the 'unlabeled' event."
          },
          {
            "name": "labelable",
            "type": {
              "name": null
            },
            "description": "Identifies the `Labelable` associated with the event."
          }
        ]
      },
      {
        "name": "UnlinkProjectV2FromRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnlinkProjectV2FromRepository",
        "fields": null
      },
      {
        "name": "UnlinkProjectV2FromRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnlinkProjectV2FromRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository the project is no longer linked to."
          }
        ]
      },
      {
        "name": "UnlinkProjectV2FromTeamInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnlinkProjectV2FromTeam",
        "fields": null
      },
      {
        "name": "UnlinkProjectV2FromTeamPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnlinkProjectV2FromTeam.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team the project is unlinked from"
          }
        ]
      },
      {
        "name": "UnlinkRepositoryFromProjectInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnlinkRepositoryFromProject",
        "fields": null
      },
      {
        "name": "UnlinkRepositoryFromProjectPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnlinkRepositoryFromProject.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "The linked Project."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The linked Repository."
          }
        ]
      },
      {
        "name": "UnlockLockableInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnlockLockable",
        "fields": null
      },
      {
        "name": "UnlockLockablePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnlockLockable.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "unlockedRecord",
            "type": {
              "name": "Lockable"
            },
            "description": "The item that was unlocked."
          }
        ]
      },
      {
        "name": "UnlockedEvent",
        "kind": "OBJECT",
        "description": "Represents an 'unlocked' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UnlockedEvent object"
          },
          {
            "name": "lockable",
            "type": {
              "name": null
            },
            "description": "Object that was unlocked."
          }
        ]
      },
      {
        "name": "UnmarkDiscussionCommentAsAnswerInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnmarkDiscussionCommentAsAnswer",
        "fields": null
      },
      {
        "name": "UnmarkDiscussionCommentAsAnswerPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnmarkDiscussionCommentAsAnswer.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The discussion that includes the comment."
          }
        ]
      },
      {
        "name": "UnmarkFileAsViewedInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnmarkFileAsViewed",
        "fields": null
      },
      {
        "name": "UnmarkFileAsViewedPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnmarkFileAsViewed.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The updated pull request."
          }
        ]
      },
      {
        "name": "UnmarkIssueAsDuplicateInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnmarkIssueAsDuplicate",
        "fields": null
      },
      {
        "name": "UnmarkIssueAsDuplicatePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnmarkIssueAsDuplicate.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "duplicate",
            "type": {
              "name": "IssueOrPullRequest"
            },
            "description": "The issue or pull request that was marked as a duplicate."
          }
        ]
      },
      {
        "name": "UnmarkProjectV2AsTemplateInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnmarkProjectV2AsTemplate",
        "fields": null
      },
      {
        "name": "UnmarkProjectV2AsTemplatePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnmarkProjectV2AsTemplate.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The project."
          }
        ]
      },
      {
        "name": "UnmarkedAsDuplicateEvent",
        "kind": "OBJECT",
        "description": "Represents an 'unmarked_as_duplicate' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "canonical",
            "type": {
              "name": "IssueOrPullRequest"
            },
            "description": "The authoritative issue or pull request which has been duplicated by another."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "duplicate",
            "type": {
              "name": "IssueOrPullRequest"
            },
            "description": "The issue or pull request which has been marked as a duplicate of another."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UnmarkedAsDuplicateEvent object"
          },
          {
            "name": "isCrossRepository",
            "type": {
              "name": null
            },
            "description": "Canonical and duplicate belong to different repositories."
          }
        ]
      },
      {
        "name": "UnminimizeCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnminimizeComment",
        "fields": null
      },
      {
        "name": "UnminimizeCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnminimizeComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "unminimizedComment",
            "type": {
              "name": "Minimizable"
            },
            "description": "The comment that was unminimized."
          }
        ]
      },
      {
        "name": "UnpinIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnpinIssue",
        "fields": null
      },
      {
        "name": "UnpinIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnpinIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "id",
            "type": {
              "name": "ID"
            },
            "description": "The id of the pinned issue that was unpinned"
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The issue that was unpinned"
          }
        ]
      },
      {
        "name": "UnpinnedEvent",
        "kind": "OBJECT",
        "description": "Represents an 'unpinned' event on a given issue or pull request.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UnpinnedEvent object"
          },
          {
            "name": "issue",
            "type": {
              "name": null
            },
            "description": "Identifies the issue associated with the event."
          }
        ]
      },
      {
        "name": "UnresolveReviewThreadInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UnresolveReviewThread",
        "fields": null
      },
      {
        "name": "UnresolveReviewThreadPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UnresolveReviewThread.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "thread",
            "type": {
              "name": "PullRequestReviewThread"
            },
            "description": "The thread to resolve."
          }
        ]
      },
      {
        "name": "UnsubscribedEvent",
        "kind": "OBJECT",
        "description": "Represents an 'unsubscribed' event on a given `Subscribable`.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UnsubscribedEvent object"
          },
          {
            "name": "subscribable",
            "type": {
              "name": null
            },
            "description": "Object referenced by event."
          }
        ]
      },
      {
        "name": "Updatable",
        "kind": "INTERFACE",
        "description": "Entities that can be updated.",
        "fields": [
          {
            "name": "viewerCanUpdate",
            "type": {
              "name": null
            },
            "description": "Check if the current viewer can update this object."
          }
        ]
      },
      {
        "name": "UpdatableComment",
        "kind": "INTERFACE",
        "description": "Comments that can be updated.",
        "fields": [
          {
            "name": "viewerCannotUpdateReasons",
            "type": {
              "name": null
            },
            "description": "Reasons why the current viewer can not update this comment."
          }
        ]
      },
      {
        "name": "UpdateBranchProtectionRuleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateBranchProtectionRule",
        "fields": null
      },
      {
        "name": "UpdateBranchProtectionRulePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateBranchProtectionRule.",
        "fields": [
          {
            "name": "branchProtectionRule",
            "type": {
              "name": "BranchProtectionRule"
            },
            "description": "The newly created BranchProtectionRule."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "UpdateCheckRunInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateCheckRun",
        "fields": null
      },
      {
        "name": "UpdateCheckRunPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateCheckRun.",
        "fields": [
          {
            "name": "checkRun",
            "type": {
              "name": "CheckRun"
            },
            "description": "The updated check run."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "UpdateCheckSuitePreferencesInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateCheckSuitePreferences",
        "fields": null
      },
      {
        "name": "UpdateCheckSuitePreferencesPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateCheckSuitePreferences.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The updated repository."
          }
        ]
      },
      {
        "name": "UpdateDiscussionCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateDiscussionComment",
        "fields": null
      },
      {
        "name": "UpdateDiscussionCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateDiscussionComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "comment",
            "type": {
              "name": "DiscussionComment"
            },
            "description": "The modified discussion comment."
          }
        ]
      },
      {
        "name": "UpdateDiscussionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateDiscussion",
        "fields": null
      },
      {
        "name": "UpdateDiscussionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateDiscussion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "discussion",
            "type": {
              "name": "Discussion"
            },
            "description": "The modified discussion."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseAdministratorRoleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseAdministratorRole",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseAdministratorRolePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseAdministratorRole.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of changing the administrator's role."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated allow private repository forking setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the allow private repository forking setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseDefaultRepositoryPermissionSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseDefaultRepositoryPermissionSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated base repository permission setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the base repository permission setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseDeployKeySettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseDeployKeySetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseDeployKeySettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseDeployKeySetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated deploy key setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the deploy key setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated members can change repository visibility setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the members can change repository visibility setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseMembersCanCreateRepositoriesSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated members can create repositories setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the members can create repositories setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseMembersCanDeleteIssuesSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseMembersCanDeleteIssuesSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated members can delete issues setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the members can delete issues setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated members can delete repositories setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the members can delete repositories setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated members can invite collaborators setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the members can invite collaborators setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseMembersCanMakePurchasesSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseMembersCanMakePurchasesSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated members can make purchases setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the members can make purchases setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated members can update protected branches setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the members can update protected branches setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated members can view dependency insights setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the members can view dependency insights setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseOrganizationProjectsSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseOrganizationProjectsSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated organization projects setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the organization projects setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseOwnerOrganizationRoleInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseOwnerOrganizationRolePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseOwnerOrganizationRole.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of changing the owner's organization role."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseProfileInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseProfile",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseProfilePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseProfile.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The updated enterprise."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseRepositoryProjectsSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseRepositoryProjectsSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated repository projects setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the repository projects setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseTeamDiscussionsSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseTeamDiscussionsSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated team discussions setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the team discussions setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated two-factor authentication disallowed methods setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the two-factor authentication disallowed methods setting."
          }
        ]
      },
      {
        "name": "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting",
        "fields": null
      },
      {
        "name": "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "enterprise",
            "type": {
              "name": "Enterprise"
            },
            "description": "The enterprise with the updated two factor authentication required setting."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the two factor authentication required setting."
          }
        ]
      },
      {
        "name": "UpdateEnvironmentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateEnvironment",
        "fields": null
      },
      {
        "name": "UpdateEnvironmentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateEnvironment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "environment",
            "type": {
              "name": "Environment"
            },
            "description": "The updated environment."
          }
        ]
      },
      {
        "name": "UpdateIpAllowListEnabledSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateIpAllowListEnabledSetting",
        "fields": null
      },
      {
        "name": "UpdateIpAllowListEnabledSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateIpAllowListEnabledSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "owner",
            "type": {
              "name": "IpAllowListOwner"
            },
            "description": "The IP allow list owner on which the setting was updated."
          }
        ]
      },
      {
        "name": "UpdateIpAllowListEntryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateIpAllowListEntry",
        "fields": null
      },
      {
        "name": "UpdateIpAllowListEntryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateIpAllowListEntry.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "ipAllowListEntry",
            "type": {
              "name": "IpAllowListEntry"
            },
            "description": "The IP allow list entry that was updated."
          }
        ]
      },
      {
        "name": "UpdateIpAllowListForInstalledAppsEnabledSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateIpAllowListForInstalledAppsEnabledSetting",
        "fields": null
      },
      {
        "name": "UpdateIpAllowListForInstalledAppsEnabledSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateIpAllowListForInstalledAppsEnabledSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "owner",
            "type": {
              "name": "IpAllowListOwner"
            },
            "description": "The IP allow list owner on which the setting was updated."
          }
        ]
      },
      {
        "name": "UpdateIssueCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateIssueComment",
        "fields": null
      },
      {
        "name": "UpdateIssueCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateIssueComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issueComment",
            "type": {
              "name": "IssueComment"
            },
            "description": "The updated comment."
          }
        ]
      },
      {
        "name": "UpdateIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateIssue",
        "fields": null
      },
      {
        "name": "UpdateIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateIssue.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "issue",
            "type": {
              "name": "Issue"
            },
            "description": "The issue."
          }
        ]
      },
      {
        "name": "UpdateLabelInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateLabel",
        "fields": null
      },
      {
        "name": "UpdateLabelPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateLabel.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "label",
            "type": {
              "name": "Label"
            },
            "description": "The updated label."
          }
        ]
      },
      {
        "name": "UpdateNotificationRestrictionSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateNotificationRestrictionSetting",
        "fields": null
      },
      {
        "name": "UpdateNotificationRestrictionSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateNotificationRestrictionSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "owner",
            "type": {
              "name": "VerifiableDomainOwner"
            },
            "description": "The owner on which the setting was updated."
          }
        ]
      },
      {
        "name": "UpdateOrganizationAllowPrivateRepositoryForkingSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting",
        "fields": null
      },
      {
        "name": "UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateOrganizationAllowPrivateRepositoryForkingSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the allow private repository forking setting."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization with the updated allow private repository forking setting."
          }
        ]
      },
      {
        "name": "UpdateOrganizationWebCommitSignoffSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateOrganizationWebCommitSignoffSetting",
        "fields": null
      },
      {
        "name": "UpdateOrganizationWebCommitSignoffSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateOrganizationWebCommitSignoffSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the web commit signoff setting."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization with the updated web commit signoff setting."
          }
        ]
      },
      {
        "name": "UpdateParameters",
        "kind": "OBJECT",
        "description": "Only allow users with bypass permission to update matching refs.",
        "fields": [
          {
            "name": "updateAllowsFetchAndMerge",
            "type": {
              "name": null
            },
            "description": "Branch can pull changes from its upstream repository"
          }
        ]
      },
      {
        "name": "UpdateParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Only allow users with bypass permission to update matching refs.",
        "fields": null
      },
      {
        "name": "UpdatePatreonSponsorabilityInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdatePatreonSponsorability",
        "fields": null
      },
      {
        "name": "UpdatePatreonSponsorabilityPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdatePatreonSponsorability.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorsListing",
            "type": {
              "name": "SponsorsListing"
            },
            "description": "The GitHub Sponsors profile."
          }
        ]
      },
      {
        "name": "UpdateProjectCardInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectCard",
        "fields": null
      },
      {
        "name": "UpdateProjectCardPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectCard.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectCard",
            "type": {
              "name": "ProjectCard"
            },
            "description": "The updated ProjectCard."
          }
        ]
      },
      {
        "name": "UpdateProjectColumnInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectColumn",
        "fields": null
      },
      {
        "name": "UpdateProjectColumnPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectColumn.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectColumn",
            "type": {
              "name": "ProjectColumn"
            },
            "description": "The updated project column."
          }
        ]
      },
      {
        "name": "UpdateProjectInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProject",
        "fields": null
      },
      {
        "name": "UpdateProjectPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProject.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "The updated project."
          }
        ]
      },
      {
        "name": "UpdateProjectV2CollaboratorsInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectV2Collaborators",
        "fields": null
      },
      {
        "name": "UpdateProjectV2CollaboratorsPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectV2Collaborators.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "collaborators",
            "type": {
              "name": "ProjectV2ActorConnection"
            },
            "description": "The collaborators granted a role"
          }
        ]
      },
      {
        "name": "UpdateProjectV2DraftIssueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectV2DraftIssue",
        "fields": null
      },
      {
        "name": "UpdateProjectV2DraftIssuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectV2DraftIssue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "draftIssue",
            "type": {
              "name": "DraftIssue"
            },
            "description": "The draft issue updated in the project."
          }
        ]
      },
      {
        "name": "UpdateProjectV2FieldInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectV2Field",
        "fields": null
      },
      {
        "name": "UpdateProjectV2FieldPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectV2Field.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2Field",
            "type": {
              "name": "ProjectV2FieldConfiguration"
            },
            "description": "The updated field."
          }
        ]
      },
      {
        "name": "UpdateProjectV2Input",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectV2",
        "fields": null
      },
      {
        "name": "UpdateProjectV2ItemFieldValueInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectV2ItemFieldValue",
        "fields": null
      },
      {
        "name": "UpdateProjectV2ItemFieldValuePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectV2ItemFieldValue.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2Item",
            "type": {
              "name": "ProjectV2Item"
            },
            "description": "The updated item."
          }
        ]
      },
      {
        "name": "UpdateProjectV2ItemPositionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectV2ItemPosition",
        "fields": null
      },
      {
        "name": "UpdateProjectV2ItemPositionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectV2ItemPosition.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "items",
            "type": {
              "name": "ProjectV2ItemConnection"
            },
            "description": "The items in the new order"
          }
        ]
      },
      {
        "name": "UpdateProjectV2Payload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectV2.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "The updated Project."
          }
        ]
      },
      {
        "name": "UpdateProjectV2StatusUpdateInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateProjectV2StatusUpdate",
        "fields": null
      },
      {
        "name": "UpdateProjectV2StatusUpdatePayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateProjectV2StatusUpdate.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "statusUpdate",
            "type": {
              "name": "ProjectV2StatusUpdate"
            },
            "description": "The status update updated in the project."
          }
        ]
      },
      {
        "name": "UpdatePullRequestBranchInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdatePullRequestBranch",
        "fields": null
      },
      {
        "name": "UpdatePullRequestBranchPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdatePullRequestBranch.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The updated pull request."
          }
        ]
      },
      {
        "name": "UpdatePullRequestInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdatePullRequest",
        "fields": null
      },
      {
        "name": "UpdatePullRequestPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdatePullRequest.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequest",
            "type": {
              "name": "PullRequest"
            },
            "description": "The updated pull request."
          }
        ]
      },
      {
        "name": "UpdatePullRequestReviewCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdatePullRequestReviewComment",
        "fields": null
      },
      {
        "name": "UpdatePullRequestReviewCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdatePullRequestReviewComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequestReviewComment",
            "type": {
              "name": "PullRequestReviewComment"
            },
            "description": "The updated comment."
          }
        ]
      },
      {
        "name": "UpdatePullRequestReviewInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdatePullRequestReview",
        "fields": null
      },
      {
        "name": "UpdatePullRequestReviewPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdatePullRequestReview.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "pullRequestReview",
            "type": {
              "name": "PullRequestReview"
            },
            "description": "The updated pull request review."
          }
        ]
      },
      {
        "name": "UpdateRefInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateRef",
        "fields": null
      },
      {
        "name": "UpdateRefPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateRef.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "ref",
            "type": {
              "name": "Ref"
            },
            "description": "The updated Ref."
          }
        ]
      },
      {
        "name": "UpdateRefsInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateRefs",
        "fields": null
      },
      {
        "name": "UpdateRefsPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateRefs.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          }
        ]
      },
      {
        "name": "UpdateRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateRepository",
        "fields": null
      },
      {
        "name": "UpdateRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The updated repository."
          }
        ]
      },
      {
        "name": "UpdateRepositoryRulesetInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateRepositoryRuleset",
        "fields": null
      },
      {
        "name": "UpdateRepositoryRulesetPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateRepositoryRuleset.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "ruleset",
            "type": {
              "name": "RepositoryRuleset"
            },
            "description": "The newly created Ruleset."
          }
        ]
      },
      {
        "name": "UpdateRepositoryWebCommitSignoffSettingInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateRepositoryWebCommitSignoffSetting",
        "fields": null
      },
      {
        "name": "UpdateRepositoryWebCommitSignoffSettingPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateRepositoryWebCommitSignoffSetting.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A message confirming the result of updating the web commit signoff setting."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The updated repository."
          }
        ]
      },
      {
        "name": "UpdateSponsorshipPreferencesInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateSponsorshipPreferences",
        "fields": null
      },
      {
        "name": "UpdateSponsorshipPreferencesPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateSponsorshipPreferences.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "sponsorship",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The sponsorship that was updated."
          }
        ]
      },
      {
        "name": "UpdateSubscriptionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateSubscription",
        "fields": null
      },
      {
        "name": "UpdateSubscriptionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateSubscription.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "subscribable",
            "type": {
              "name": "Subscribable"
            },
            "description": "The input subscribable entity."
          }
        ]
      },
      {
        "name": "UpdateTeamDiscussionCommentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateTeamDiscussionComment",
        "fields": null
      },
      {
        "name": "UpdateTeamDiscussionCommentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateTeamDiscussionComment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "teamDiscussionComment",
            "type": {
              "name": "TeamDiscussionComment"
            },
            "description": "The updated comment."
          }
        ]
      },
      {
        "name": "UpdateTeamDiscussionInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateTeamDiscussion",
        "fields": null
      },
      {
        "name": "UpdateTeamDiscussionPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateTeamDiscussion.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "teamDiscussion",
            "type": {
              "name": "TeamDiscussion"
            },
            "description": "The updated discussion."
          }
        ]
      },
      {
        "name": "UpdateTeamReviewAssignmentInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateTeamReviewAssignment",
        "fields": null
      },
      {
        "name": "UpdateTeamReviewAssignmentPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateTeamReviewAssignment.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "team",
            "type": {
              "name": "Team"
            },
            "description": "The team that was modified"
          }
        ]
      },
      {
        "name": "UpdateTeamsRepositoryInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateTeamsRepository",
        "fields": null
      },
      {
        "name": "UpdateTeamsRepositoryPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateTeamsRepository.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The repository that was updated."
          },
          {
            "name": "teams",
            "type": {
              "name": null
            },
            "description": "The teams granted permission on the repository."
          }
        ]
      },
      {
        "name": "UpdateTopicsInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateTopics",
        "fields": null
      },
      {
        "name": "UpdateTopicsPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateTopics.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "invalidTopicNames",
            "type": {
              "name": null
            },
            "description": "Names of the provided topics that are not valid."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "The updated repository."
          }
        ]
      },
      {
        "name": "UpdateUserListInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateUserList",
        "fields": null
      },
      {
        "name": "UpdateUserListPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateUserList.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "list",
            "type": {
              "name": "UserList"
            },
            "description": "The list that was just updated"
          }
        ]
      },
      {
        "name": "UpdateUserListsForItemInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of UpdateUserListsForItem",
        "fields": null
      },
      {
        "name": "UpdateUserListsForItemPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of UpdateUserListsForItem.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "item",
            "type": {
              "name": "UserListItems"
            },
            "description": "The item that was added"
          },
          {
            "name": "lists",
            "type": {
              "name": null
            },
            "description": "The lists to which this item belongs"
          },
          {
            "name": "user",
            "type": {
              "name": "User"
            },
            "description": "The user who owns the lists"
          }
        ]
      },
      {
        "name": "User",
        "kind": "OBJECT",
        "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
        "fields": [
          {
            "name": "anyPinnableItems",
            "type": {
              "name": null
            },
            "description": "Determine if this repository owner has any items that can be pinned to their profile."
          },
          {
            "name": "avatarUrl",
            "type": {
              "name": null
            },
            "description": "A URL pointing to the user's public avatar."
          },
          {
            "name": "bio",
            "type": {
              "name": "String"
            },
            "description": "The user's public profile bio."
          },
          {
            "name": "bioHTML",
            "type": {
              "name": null
            },
            "description": "The user's public profile bio as HTML."
          },
          {
            "name": "canReceiveOrganizationEmailsWhenNotificationsRestricted",
            "type": {
              "name": null
            },
            "description": "Could this user receive email notifications, if the organization had notification restrictions enabled?"
          },
          {
            "name": "commitComments",
            "type": {
              "name": null
            },
            "description": "A list of commit comments made by this user."
          },
          {
            "name": "company",
            "type": {
              "name": "String"
            },
            "description": "The user's public profile company."
          },
          {
            "name": "companyHTML",
            "type": {
              "name": null
            },
            "description": "The user's public profile company as HTML."
          },
          {
            "name": "contributionsCollection",
            "type": {
              "name": null
            },
            "description": "The collection of contributions this user has made to different repositories."
          },
          {
            "name": "copilotEndpoints",
            "type": {
              "name": "CopilotEndpoints"
            },
            "description": "The user's Copilot endpoint information"
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "email",
            "type": {
              "name": null
            },
            "description": "The user's publicly visible profile email."
          },
          {
            "name": "enterprises",
            "type": {
              "name": "EnterpriseConnection"
            },
            "description": "A list of enterprises that the user belongs to."
          },
          {
            "name": "estimatedNextSponsorsPayoutInCents",
            "type": {
              "name": null
            },
            "description": "The estimated next GitHub Sponsors payout for this user/organization in cents (USD)."
          },
          {
            "name": "followers",
            "type": {
              "name": null
            },
            "description": "A list of users the given user is followed by."
          },
          {
            "name": "following",
            "type": {
              "name": null
            },
            "description": "A list of users the given user is following."
          },
          {
            "name": "gist",
            "type": {
              "name": "Gist"
            },
            "description": "Find gist by repo name."
          },
          {
            "name": "gistComments",
            "type": {
              "name": null
            },
            "description": "A list of gist comments made by this user."
          },
          {
            "name": "gists",
            "type": {
              "name": null
            },
            "description": "A list of the Gists the user has created."
          },
          {
            "name": "hasSponsorsListing",
            "type": {
              "name": null
            },
            "description": "True if this user/organization has a GitHub Sponsors listing."
          },
          {
            "name": "hovercard",
            "type": {
              "name": null
            },
            "description": "The hovercard information for this user in a given context"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the User object"
          },
          {
            "name": "interactionAbility",
            "type": {
              "name": "RepositoryInteractionAbility"
            },
            "description": "The interaction ability settings for this user."
          },
          {
            "name": "isBountyHunter",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is a participant in the GitHub Security Bug Bounty."
          },
          {
            "name": "isCampusExpert",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is a participant in the GitHub Campus Experts Program."
          },
          {
            "name": "isDeveloperProgramMember",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is a GitHub Developer Program member."
          },
          {
            "name": "isEmployee",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is a GitHub employee."
          },
          {
            "name": "isFollowingViewer",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is following the viewer. Inverse of viewerIsFollowing"
          },
          {
            "name": "isGitHubStar",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is a member of the GitHub Stars Program."
          },
          {
            "name": "isHireable",
            "type": {
              "name": null
            },
            "description": "Whether or not the user has marked themselves as for hire."
          },
          {
            "name": "isSiteAdmin",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is a site administrator."
          },
          {
            "name": "isSponsoredBy",
            "type": {
              "name": null
            },
            "description": "Whether the given account is sponsoring this user/organization."
          },
          {
            "name": "isSponsoringViewer",
            "type": {
              "name": null
            },
            "description": "True if the viewer is sponsored by this user/organization."
          },
          {
            "name": "isViewer",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is the viewing user."
          },
          {
            "name": "issueComments",
            "type": {
              "name": null
            },
            "description": "A list of issue comments made by this user."
          },
          {
            "name": "issues",
            "type": {
              "name": null
            },
            "description": "A list of issues associated with this user."
          },
          {
            "name": "itemShowcase",
            "type": {
              "name": null
            },
            "description": "Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity."
          },
          {
            "name": "lifetimeReceivedSponsorshipValues",
            "type": {
              "name": null
            },
            "description": "Calculate how much each sponsor has ever paid total to this maintainer via GitHub Sponsors. Does not include sponsorships paid via Patreon."
          },
          {
            "name": "lists",
            "type": {
              "name": null
            },
            "description": "A user-curated list of repositories"
          },
          {
            "name": "location",
            "type": {
              "name": "String"
            },
            "description": "The user's public profile location."
          },
          {
            "name": "login",
            "type": {
              "name": null
            },
            "description": "The username used to login."
          },
          {
            "name": "monthlyEstimatedSponsorsIncomeInCents",
            "type": {
              "name": null
            },
            "description": "The estimated monthly GitHub Sponsors income for this user/organization in cents (USD)."
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The user's public profile name."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "Find an organization by its login that the user belongs to."
          },
          {
            "name": "organizationVerifiedDomainEmails",
            "type": {
              "name": null
            },
            "description": "Verified email addresses that match verified domains for a specified organization the user is a member of."
          },
          {
            "name": "organizations",
            "type": {
              "name": null
            },
            "description": "A list of organizations the user belongs to."
          },
          {
            "name": "packages",
            "type": {
              "name": null
            },
            "description": "A list of packages under the owner."
          },
          {
            "name": "pinnableItems",
            "type": {
              "name": null
            },
            "description": "A list of repositories and gists this profile owner can pin to their profile."
          },
          {
            "name": "pinnedItems",
            "type": {
              "name": null
            },
            "description": "A list of repositories and gists this profile owner has pinned to their profile"
          },
          {
            "name": "pinnedItemsRemaining",
            "type": {
              "name": null
            },
            "description": "Returns how many more items this profile owner can pin to their profile."
          },
          {
            "name": "project",
            "type": {
              "name": "Project"
            },
            "description": "Find project by number."
          },
          {
            "name": "projectV2",
            "type": {
              "name": "ProjectV2"
            },
            "description": "Find a project by number."
          },
          {
            "name": "projects",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          },
          {
            "name": "projectsResourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path listing user's projects"
          },
          {
            "name": "projectsUrl",
            "type": {
              "name": null
            },
            "description": "The HTTP URL listing user's projects"
          },
          {
            "name": "projectsV2",
            "type": {
              "name": null
            },
            "description": "A list of projects under the owner."
          },
          {
            "name": "pronouns",
            "type": {
              "name": "String"
            },
            "description": "The user's profile pronouns"
          },
          {
            "name": "publicKeys",
            "type": {
              "name": null
            },
            "description": "A list of public keys associated with this user."
          },
          {
            "name": "pullRequests",
            "type": {
              "name": null
            },
            "description": "A list of pull requests associated with this user."
          },
          {
            "name": "recentProjects",
            "type": {
              "name": null
            },
            "description": "Recent projects that this user has modified in the context of the owner."
          },
          {
            "name": "repositories",
            "type": {
              "name": null
            },
            "description": "A list of repositories that the user owns."
          },
          {
            "name": "repositoriesContributedTo",
            "type": {
              "name": null
            },
            "description": "A list of repositories that the user recently contributed to."
          },
          {
            "name": "repository",
            "type": {
              "name": "Repository"
            },
            "description": "Find Repository."
          },
          {
            "name": "repositoryDiscussionComments",
            "type": {
              "name": null
            },
            "description": "Discussion comments this user has authored."
          },
          {
            "name": "repositoryDiscussions",
            "type": {
              "name": null
            },
            "description": "Discussions this user has started."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this user"
          },
          {
            "name": "savedReplies",
            "type": {
              "name": "SavedReplyConnection"
            },
            "description": "Replies this user has saved"
          },
          {
            "name": "socialAccounts",
            "type": {
              "name": null
            },
            "description": "The user's social media accounts, ordered as they appear on the user's profile."
          },
          {
            "name": "sponsoring",
            "type": {
              "name": null
            },
            "description": "List of users and organizations this entity is sponsoring."
          },
          {
            "name": "sponsors",
            "type": {
              "name": null
            },
            "description": "List of sponsors for this user or organization."
          },
          {
            "name": "sponsorsActivities",
            "type": {
              "name": null
            },
            "description": "Events involving this sponsorable, such as new sponsorships."
          },
          {
            "name": "sponsorsListing",
            "type": {
              "name": "SponsorsListing"
            },
            "description": "The GitHub Sponsors listing for this user or organization."
          },
          {
            "name": "sponsorshipForViewerAsSponsor",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The sponsorship from the viewer to this user/organization; that is, the sponsorship where you're the sponsor."
          },
          {
            "name": "sponsorshipForViewerAsSponsorable",
            "type": {
              "name": "Sponsorship"
            },
            "description": "The sponsorship from this user/organization to the viewer; that is, the sponsorship you're receiving."
          },
          {
            "name": "sponsorshipNewsletters",
            "type": {
              "name": null
            },
            "description": "List of sponsorship updates sent from this sponsorable to sponsors."
          },
          {
            "name": "sponsorshipsAsMaintainer",
            "type": {
              "name": null
            },
            "description": "The sponsorships where this user or organization is the maintainer receiving the funds."
          },
          {
            "name": "sponsorshipsAsSponsor",
            "type": {
              "name": null
            },
            "description": "The sponsorships where this user or organization is the funder."
          },
          {
            "name": "starredRepositories",
            "type": {
              "name": null
            },
            "description": "Repositories the user has starred."
          },
          {
            "name": "status",
            "type": {
              "name": "UserStatus"
            },
            "description": "The user's description of what they're currently doing."
          },
          {
            "name": "suggestedListNames",
            "type": {
              "name": null
            },
            "description": "Suggested names for user lists"
          },
          {
            "name": "topRepositories",
            "type": {
              "name": null
            },
            "description": "Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created\n"
          },
          {
            "name": "totalSponsorshipAmountAsSponsorInCents",
            "type": {
              "name": "Int"
            },
            "description": "The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization."
          },
          {
            "name": "twitterUsername",
            "type": {
              "name": "String"
            },
            "description": "The user's Twitter username."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this user"
          },
          {
            "name": "userViewType",
            "type": {
              "name": null
            },
            "description": "Whether the request returns publicly visible information or privately visible information about the user"
          },
          {
            "name": "viewerCanChangePinnedItems",
            "type": {
              "name": null
            },
            "description": "Can the viewer pin repositories and gists to the profile?"
          },
          {
            "name": "viewerCanCreateProjects",
            "type": {
              "name": null
            },
            "description": "Can the current viewer create new projects on this owner."
          },
          {
            "name": "viewerCanFollow",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer is able to follow the user."
          },
          {
            "name": "viewerCanSponsor",
            "type": {
              "name": null
            },
            "description": "Whether or not the viewer is able to sponsor this user/organization."
          },
          {
            "name": "viewerIsFollowing",
            "type": {
              "name": null
            },
            "description": "Whether or not this user is followed by the viewer. Inverse of isFollowingViewer."
          },
          {
            "name": "viewerIsSponsoring",
            "type": {
              "name": null
            },
            "description": "True if the viewer is sponsoring this user/organization."
          },
          {
            "name": "watching",
            "type": {
              "name": null
            },
            "description": "A list of repositories the given user is watching."
          },
          {
            "name": "websiteUrl",
            "type": {
              "name": "URI"
            },
            "description": "A URL pointing to the user's public website/blog."
          }
        ]
      },
      {
        "name": "UserBlockDuration",
        "kind": "ENUM",
        "description": "The possible durations that a user can be blocked for.",
        "fields": null
      },
      {
        "name": "UserBlockedEvent",
        "kind": "OBJECT",
        "description": "Represents a 'user_blocked' event on a given user.",
        "fields": [
          {
            "name": "actor",
            "type": {
              "name": "Actor"
            },
            "description": "Identifies the actor who performed the event."
          },
          {
            "name": "blockDuration",
            "type": {
              "name": null
            },
            "description": "Number of days that the user was blocked for."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UserBlockedEvent object"
          },
          {
            "name": "subject",
            "type": {
              "name": "User"
            },
            "description": "The user who was blocked."
          }
        ]
      },
      {
        "name": "UserConnection",
        "kind": "OBJECT",
        "description": "A list of users.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "UserContentEdit",
        "kind": "OBJECT",
        "description": "An edit on user content",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "deletedAt",
            "type": {
              "name": "DateTime"
            },
            "description": "Identifies the date and time when the object was deleted."
          },
          {
            "name": "deletedBy",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who deleted this content"
          },
          {
            "name": "diff",
            "type": {
              "name": "String"
            },
            "description": "A summary of the changes for this edit"
          },
          {
            "name": "editedAt",
            "type": {
              "name": null
            },
            "description": "When this content was edited"
          },
          {
            "name": "editor",
            "type": {
              "name": "Actor"
            },
            "description": "The actor who edited this content"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UserContentEdit object"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          }
        ]
      },
      {
        "name": "UserContentEditConnection",
        "kind": "OBJECT",
        "description": "A list of edits to content.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "UserContentEditEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "UserContentEdit"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "UserEdge",
        "kind": "OBJECT",
        "description": "Represents a user.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "User"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "UserEmailMetadata",
        "kind": "OBJECT",
        "description": "Email attributes from External Identity",
        "fields": [
          {
            "name": "primary",
            "type": {
              "name": "Boolean"
            },
            "description": "Boolean to identify primary emails"
          },
          {
            "name": "type",
            "type": {
              "name": "String"
            },
            "description": "Type of email"
          },
          {
            "name": "value",
            "type": {
              "name": null
            },
            "description": "Email id"
          }
        ]
      },
      {
        "name": "UserList",
        "kind": "OBJECT",
        "description": "A user-curated list of repositories",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": "The description of this list"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UserList object"
          },
          {
            "name": "isPrivate",
            "type": {
              "name": null
            },
            "description": "Whether or not this list is private"
          },
          {
            "name": "items",
            "type": {
              "name": null
            },
            "description": "The items associated with this list"
          },
          {
            "name": "lastAddedAt",
            "type": {
              "name": null
            },
            "description": "The date and time at which this list was created or last had items added to it"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of this list"
          },
          {
            "name": "slug",
            "type": {
              "name": null
            },
            "description": "The slug of this list"
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user to which this list belongs"
          }
        ]
      },
      {
        "name": "UserListConnection",
        "kind": "OBJECT",
        "description": "The connection type for UserList.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "UserListEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "UserList"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "UserListItems",
        "kind": "UNION",
        "description": "Types that can be added to a user list.",
        "fields": null
      },
      {
        "name": "UserListItemsConnection",
        "kind": "OBJECT",
        "description": "The connection type for UserListItems.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "UserListItemsEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "UserListItems"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "UserListSuggestion",
        "kind": "OBJECT",
        "description": "Represents a suggested user list.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": "ID"
            },
            "description": "The ID of the suggested user list"
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": "The name of the suggested user list"
          }
        ]
      },
      {
        "name": "UserStatus",
        "kind": "OBJECT",
        "description": "The user's description of what they're currently doing.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "emoji",
            "type": {
              "name": "String"
            },
            "description": "An emoji summarizing the user's status."
          },
          {
            "name": "emojiHTML",
            "type": {
              "name": "HTML"
            },
            "description": "The status emoji as HTML."
          },
          {
            "name": "expiresAt",
            "type": {
              "name": "DateTime"
            },
            "description": "If set, the status will not be shown after this date."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the UserStatus object"
          },
          {
            "name": "indicatesLimitedAvailability",
            "type": {
              "name": null
            },
            "description": "Whether this status indicates the user is not fully available on GitHub."
          },
          {
            "name": "message",
            "type": {
              "name": "String"
            },
            "description": "A brief message describing what the user is doing."
          },
          {
            "name": "organization",
            "type": {
              "name": "Organization"
            },
            "description": "The organization whose members can see this status. If null, this status is publicly visible."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "user",
            "type": {
              "name": null
            },
            "description": "The user who has this status."
          }
        ]
      },
      {
        "name": "UserStatusConnection",
        "kind": "OBJECT",
        "description": "The connection type for UserStatus.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "UserStatusEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "UserStatus"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "UserStatusOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for user status connections.",
        "fields": null
      },
      {
        "name": "UserStatusOrderField",
        "kind": "ENUM",
        "description": "Properties by which user status connections can be ordered.",
        "fields": null
      },
      {
        "name": "UserViewType",
        "kind": "ENUM",
        "description": "Whether a user being viewed contains public or private information.",
        "fields": null
      },
      {
        "name": "VerifiableDomain",
        "kind": "OBJECT",
        "description": "A domain that can be verified or approved for an organization or an enterprise.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "dnsHostName",
            "type": {
              "name": "URI"
            },
            "description": "The DNS host name that should be used for verification."
          },
          {
            "name": "domain",
            "type": {
              "name": null
            },
            "description": "The unicode encoded domain."
          },
          {
            "name": "hasFoundHostName",
            "type": {
              "name": null
            },
            "description": "Whether a TXT record for verification with the expected host name was found."
          },
          {
            "name": "hasFoundVerificationToken",
            "type": {
              "name": null
            },
            "description": "Whether a TXT record for verification with the expected verification token was found."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the VerifiableDomain object"
          },
          {
            "name": "isApproved",
            "type": {
              "name": null
            },
            "description": "Whether or not the domain is approved."
          },
          {
            "name": "isRequiredForPolicyEnforcement",
            "type": {
              "name": null
            },
            "description": "Whether this domain is required to exist for an organization or enterprise policy to be enforced."
          },
          {
            "name": "isVerified",
            "type": {
              "name": null
            },
            "description": "Whether or not the domain is verified."
          },
          {
            "name": "owner",
            "type": {
              "name": null
            },
            "description": "The owner of the domain."
          },
          {
            "name": "punycodeEncodedDomain",
            "type": {
              "name": null
            },
            "description": "The punycode encoded domain."
          },
          {
            "name": "tokenExpirationTime",
            "type": {
              "name": "DateTime"
            },
            "description": "The time that the current verification token will expire."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "verificationToken",
            "type": {
              "name": "String"
            },
            "description": "The current verification token for the domain."
          }
        ]
      },
      {
        "name": "VerifiableDomainConnection",
        "kind": "OBJECT",
        "description": "The connection type for VerifiableDomain.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "VerifiableDomainEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "VerifiableDomain"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "VerifiableDomainOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ordering options for verifiable domain connections.",
        "fields": null
      },
      {
        "name": "VerifiableDomainOrderField",
        "kind": "ENUM",
        "description": "Properties by which verifiable domain connections can be ordered.",
        "fields": null
      },
      {
        "name": "VerifiableDomainOwner",
        "kind": "UNION",
        "description": "Types that can own a verifiable domain.",
        "fields": null
      },
      {
        "name": "VerifyVerifiableDomainInput",
        "kind": "INPUT_OBJECT",
        "description": "Autogenerated input type of VerifyVerifiableDomain",
        "fields": null
      },
      {
        "name": "VerifyVerifiableDomainPayload",
        "kind": "OBJECT",
        "description": "Autogenerated return type of VerifyVerifiableDomain.",
        "fields": [
          {
            "name": "clientMutationId",
            "type": {
              "name": "String"
            },
            "description": "A unique identifier for the client performing the mutation."
          },
          {
            "name": "domain",
            "type": {
              "name": "VerifiableDomain"
            },
            "description": "The verifiable domain that was verified."
          }
        ]
      },
      {
        "name": "ViewerHovercardContext",
        "kind": "OBJECT",
        "description": "A hovercard context with a message describing how the viewer is related.",
        "fields": [
          {
            "name": "message",
            "type": {
              "name": null
            },
            "description": "A string describing this context"
          },
          {
            "name": "octicon",
            "type": {
              "name": null
            },
            "description": "An octicon to accompany this context"
          },
          {
            "name": "viewer",
            "type": {
              "name": null
            },
            "description": "Identifies the user who is related to this context."
          }
        ]
      },
      {
        "name": "Votable",
        "kind": "INTERFACE",
        "description": "A subject that may be upvoted.",
        "fields": [
          {
            "name": "upvoteCount",
            "type": {
              "name": null
            },
            "description": "Number of upvotes that this subject has received."
          },
          {
            "name": "viewerCanUpvote",
            "type": {
              "name": null
            },
            "description": "Whether or not the current user can add or remove an upvote on this subject."
          },
          {
            "name": "viewerHasUpvoted",
            "type": {
              "name": null
            },
            "description": "Whether or not the current user has already upvoted this subject."
          }
        ]
      },
      {
        "name": "Workflow",
        "kind": "OBJECT",
        "description": "A workflow contains meta information about an Actions workflow file.",
        "fields": [
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the Workflow object"
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": "The name of the workflow."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this workflow"
          },
          {
            "name": "runs",
            "type": {
              "name": null
            },
            "description": "The runs of the workflow."
          },
          {
            "name": "state",
            "type": {
              "name": null
            },
            "description": "The state of the workflow."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this workflow"
          }
        ]
      },
      {
        "name": "WorkflowFileReference",
        "kind": "OBJECT",
        "description": "A workflow that must run for this rule to pass",
        "fields": [
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "The path to the workflow file"
          },
          {
            "name": "ref",
            "type": {
              "name": "String"
            },
            "description": "The ref (branch or tag) of the workflow file to use"
          },
          {
            "name": "repositoryId",
            "type": {
              "name": null
            },
            "description": "The ID of the repository where the workflow is defined"
          },
          {
            "name": "sha",
            "type": {
              "name": "String"
            },
            "description": "The commit SHA of the workflow file to use"
          }
        ]
      },
      {
        "name": "WorkflowFileReferenceInput",
        "kind": "INPUT_OBJECT",
        "description": "A workflow that must run for this rule to pass",
        "fields": null
      },
      {
        "name": "WorkflowRun",
        "kind": "OBJECT",
        "description": "A workflow run.",
        "fields": [
          {
            "name": "checkSuite",
            "type": {
              "name": null
            },
            "description": "The check suite this workflow run belongs to."
          },
          {
            "name": "createdAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was created."
          },
          {
            "name": "databaseId",
            "type": {
              "name": "Int"
            },
            "description": "Identifies the primary key from the database."
          },
          {
            "name": "deploymentReviews",
            "type": {
              "name": null
            },
            "description": "The log of deployment reviews"
          },
          {
            "name": "event",
            "type": {
              "name": null
            },
            "description": "The event that triggered the workflow run"
          },
          {
            "name": "file",
            "type": {
              "name": "WorkflowRunFile"
            },
            "description": "The workflow file"
          },
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the WorkflowRun object"
          },
          {
            "name": "pendingDeploymentRequests",
            "type": {
              "name": null
            },
            "description": "The pending deployment requests of all check runs in this workflow run"
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this workflow run"
          },
          {
            "name": "runNumber",
            "type": {
              "name": null
            },
            "description": "A number that uniquely identifies this workflow run in its parent workflow."
          },
          {
            "name": "updatedAt",
            "type": {
              "name": null
            },
            "description": "Identifies the date and time when the object was last updated."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this workflow run"
          },
          {
            "name": "workflow",
            "type": {
              "name": null
            },
            "description": "The workflow executed in this workflow run."
          }
        ]
      },
      {
        "name": "WorkflowRunConnection",
        "kind": "OBJECT",
        "description": "The connection type for WorkflowRun.",
        "fields": [
          {
            "name": "edges",
            "type": {
              "name": null
            },
            "description": "A list of edges."
          },
          {
            "name": "nodes",
            "type": {
              "name": null
            },
            "description": "A list of nodes."
          },
          {
            "name": "pageInfo",
            "type": {
              "name": null
            },
            "description": "Information to aid in pagination."
          },
          {
            "name": "totalCount",
            "type": {
              "name": null
            },
            "description": "Identifies the total count of items in the connection."
          }
        ]
      },
      {
        "name": "WorkflowRunEdge",
        "kind": "OBJECT",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "cursor",
            "type": {
              "name": null
            },
            "description": "A cursor for use in pagination."
          },
          {
            "name": "node",
            "type": {
              "name": "WorkflowRun"
            },
            "description": "The item at the end of the edge."
          }
        ]
      },
      {
        "name": "WorkflowRunFile",
        "kind": "OBJECT",
        "description": "An executed workflow file for a workflow run.",
        "fields": [
          {
            "name": "id",
            "type": {
              "name": null
            },
            "description": "The Node ID of the WorkflowRunFile object"
          },
          {
            "name": "path",
            "type": {
              "name": null
            },
            "description": "The path of the workflow file relative to its repository."
          },
          {
            "name": "repositoryFileUrl",
            "type": {
              "name": null
            },
            "description": "The direct link to the file in the repository which stores the workflow file."
          },
          {
            "name": "repositoryName",
            "type": {
              "name": null
            },
            "description": "The repository name and owner which stores the workflow file."
          },
          {
            "name": "resourcePath",
            "type": {
              "name": null
            },
            "description": "The HTTP path for this workflow run file"
          },
          {
            "name": "run",
            "type": {
              "name": null
            },
            "description": "The parent workflow run execution for this file."
          },
          {
            "name": "url",
            "type": {
              "name": null
            },
            "description": "The HTTP URL for this workflow run file"
          },
          {
            "name": "viewerCanPushRepository",
            "type": {
              "name": null
            },
            "description": "If the viewer has permissions to push to the repository which stores the workflow."
          },
          {
            "name": "viewerCanReadRepository",
            "type": {
              "name": null
            },
            "description": "If the viewer has permissions to read the repository which stores the workflow."
          }
        ]
      },
      {
        "name": "WorkflowRunOrder",
        "kind": "INPUT_OBJECT",
        "description": "Ways in which lists of workflow runs can be ordered upon return.",
        "fields": null
      },
      {
        "name": "WorkflowRunOrderField",
        "kind": "ENUM",
        "description": "Properties by which workflow run connections can be ordered.",
        "fields": null
      },
      {
        "name": "WorkflowState",
        "kind": "ENUM",
        "description": "The possible states for a workflow.",
        "fields": null
      },
      {
        "name": "WorkflowsParameters",
        "kind": "OBJECT",
        "description": "Require all changes made to a targeted branch to pass the specified workflows before they can be merged.",
        "fields": [
          {
            "name": "doNotEnforceOnCreate",
            "type": {
              "name": null
            },
            "description": "Allow repositories and branches to be created if a check would otherwise prohibit it."
          },
          {
            "name": "workflows",
            "type": {
              "name": null
            },
            "description": "Workflows that must pass for this rule to pass."
          }
        ]
      },
      {
        "name": "WorkflowsParametersInput",
        "kind": "INPUT_OBJECT",
        "description": "Require all changes made to a targeted branch to pass the specified workflows before they can be merged.",
        "fields": null
      },
      {
        "name": "X509Certificate",
        "kind": "SCALAR",
        "description": "A valid x509 certificate string",
        "fields": null
      },
      {
        "name": "__Directive",
        "kind": "OBJECT",
        "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "fields": [
          {
            "name": "args",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "isRepeatable",
            "type": {
              "name": "Boolean"
            },
            "description": null
          },
          {
            "name": "locations",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": null
          }
        ]
      },
      {
        "name": "__DirectiveLocation",
        "kind": "ENUM",
        "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
        "fields": null
      },
      {
        "name": "__EnumValue",
        "kind": "OBJECT",
        "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "fields": [
          {
            "name": "deprecationReason",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "isDeprecated",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": null
          }
        ]
      },
      {
        "name": "__Field",
        "kind": "OBJECT",
        "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "fields": [
          {
            "name": "args",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "deprecationReason",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "isDeprecated",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "type",
            "type": {
              "name": null
            },
            "description": null
          }
        ]
      },
      {
        "name": "__InputValue",
        "kind": "OBJECT",
        "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "fields": [
          {
            "name": "defaultValue",
            "type": {
              "name": "String"
            },
            "description": "A GraphQL-formatted string representing the default value for this input value."
          },
          {
            "name": "deprecationReason",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "isDeprecated",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "name",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "type",
            "type": {
              "name": null
            },
            "description": null
          }
        ]
      },
      {
        "name": "__Schema",
        "kind": "OBJECT",
        "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "fields": [
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "directives",
            "type": {
              "name": null
            },
            "description": "A list of all directives supported by this server."
          },
          {
            "name": "mutationType",
            "type": {
              "name": "__Type"
            },
            "description": "If this server supports mutation, the type that mutation operations will be rooted at."
          },
          {
            "name": "queryType",
            "type": {
              "name": null
            },
            "description": "The type that query operations will be rooted at."
          },
          {
            "name": "subscriptionType",
            "type": {
              "name": "__Type"
            },
            "description": "If this server support subscription, the type that subscription operations will be rooted at."
          },
          {
            "name": "types",
            "type": {
              "name": null
            },
            "description": "A list of all types supported by this server."
          }
        ]
      },
      {
        "name": "__Type",
        "kind": "OBJECT",
        "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "fields": [
          {
            "name": "description",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "enumValues",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "fields",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "inputFields",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "interfaces",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "isOneOf",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "kind",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "name",
            "type": {
              "name": "String"
            },
            "description": null
          },
          {
            "name": "ofType",
            "type": {
              "name": "__Type"
            },
            "description": null
          },
          {
            "name": "possibleTypes",
            "type": {
              "name": null
            },
            "description": null
          },
          {
            "name": "specifiedByURL",
            "type": {
              "name": "String"
            },
            "description": null
          }
        ]
      },
      {
        "name": "__TypeKind",
        "kind": "ENUM",
        "description": "An enum describing what kind of type a given `__Type` is.",
        "fields": null
      }
    ]
  }
}